{"version":3,"sources":["assets/wows-icon.png","IndexPage/IndexPage.js","Player/PlayerTable/PlayerWeaponTable.js","Player/PlayerTable/PlayerShipTable.js","Player/PlayerTable/PlayerShipTableMobile.js","Player/PlayerTable/PlayerRankTable.js","Player/PlayerTable/PlayerRankTableMobile.js","Player/PlayerTable/PlayerShipTypeTable.js","Player/PlayerTable/PlayerShipTierTable.js","Player/PlayerTable/PlayerShipNationTable.js","Player/PlayerTable/PlayerShipTypeTableMobile.js","Player/PlayerTable/PlayerShipTierTableMobile.js","Player/PlayerTable/PlayerShipNationTableMobile.js","Player/PlayerGraph/PlayerShipTypeGraph.js","Player/PlayerGraph/PlayerShipNationGraph.js","Player/PlayerGraph/PlayerShipTierGraph.js","Player/PlayerIndex/PlayerIndex.js","User/Login.js","User/Register.js","Player/PlayerIndex/PlayerHeader.js","Clan/ClanIndex/ClanIndex.js","Clan/ClanIndex/ClanHeader.js","Ship/ShipIndex/ShipIndex.js","Ship/ShipIndex/ShipHeader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","IndexPage","document","title","react_default","a","createElement","Segment","inverted","textAlign","vertical","Header","className","as","Image","avatar","src","logo","size","verticalAlign","Container","text","Divider","react_router_dom","to","Button","primary","Icon","name","Component","PlayerWeaponTable","Table","celled","structured","striped","collapsing","unstackable","Row","key","HeaderCell","colSpan","Body","this","props","selectedShipData","ship_id","Cell","main_battery_max_frags_battle","main_battery_frags","main_battery_hit_rate","torpedoes_max_frags_battle","torpedoes_frags","torpedoes_hit_rate","second_battery_max_frags_battle","second_battery_frags","second_battery_hit_rate","aircraft_max_frags_battle","aircraft_frags","ramming_max_frags_battle","ramming_frags","nationOptions","value","image","nationDict","usa","ussr","uk","japan","france","germany","poland","pan_asia","italy","commonwealth","pan_america","typeOptions","typeDict","Destroyer","Cruiser","Battleship","AirCarrier","tierOptions","tierDict","1","2","3","4","5","6","7","8","9","10","PlayerShipTableBody","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","build","bind","assertThisInitialized","data","page","selectedName","selectedNation","selectedType","selectedTier","_this2","rows","i","length","row","push","id","toString","onClick","e","handleselectedShipID","currentTarget","selectable","alt","height","nation","type","tier","wins","battles","win_rate","survival_rate","max_xp","max_frags_battle","max_damage_dealt","max_planes_killed","ave_xp","ave_frags","ave_damage_dealt","ave_planes_killed","PlayerShipTable","_this3","column","shipData","selectedData","direction","ship_ids","shipnames","showModal","handleSort","setPage","nextPage","prevPage","handleFilter","handleFilterRaw","selected","setState","clickedColumn","_this4","forEach","_","sortBy","reverse","_this5","_this6","selectedShipID","_this7","parseInt","substring","_ref","pages","Math","round","totalpage","Menu","Item","active","abs","_this8","sortable","sorted","rowSpan","width","Dropdown","fluid","clearable","placeholder","search","selection","options","onChange","_ref2","_ref3","_ref4","_ref5","PlayerShipTable_PlayerShipTableBody","Footer","floated","pagination","icon","ceil","Modal","open","onClose","closeIcon","Content","PlayerWeaponTable_PlayerWeaponTable","PlayerShipTableMobileBody","PlayerShipTableMobile","PlayerShipTableMobile_PlayerShipTableMobileBody","season","PlayerRankTable","account_id","seasonOptions","selectedSeason","rankshipnames","sort","b","input","str","loc","charAt","_ref6","PlayerRankTable_PlayerShipTableBody","PlayerRankTableMobile","PlayerRankTableMobile_PlayerShipTableBody","division","divisionWhole","PlayerShipTypeTable","destroyer","count","cruiser","battleship","carrier","buildrows","romanize","num","lookup","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","roman","PlayerShipTierTable","arr","PlayerShipNationTable","_i","_Object$entries","entries","slicedToArray","dat","PlayerShipTypeTableMobile","PlayerShipNationTableMobile","PlayerShipTypeGraph","values","Battles","label","style","margin","rel","href","es","innerRadius","radius","getAngle","d","padAngle","onValueMouseOver","v","onSeriesMouseOut","Statistic","horizontal","Value","toLocaleString","Label","PlayerShipNationGraph","PlayerShipTierGraph","application_id","achievementsDict","DOUBLE_KILL","MAIN_CALIBER","LIQUIDATOR","WITHERING","FIREPROOF","ARSONIST","DETONATED","INSTANT_KILL","UNSINKABLE","CLEAR_SKY","DREADNOUGHT","FIRST_BLOOD","HEADBUTT","ONE_SOLDIER_IN_THE_FIELD","WARRIOR","SUPPORT","ATBA_CALIBER","RETRIBUTION","PlayerIndex","achievementsVisible","window","innerWidth","playerTableVisible","playerShipTableData","playerRankTableData","shipdetails","last_battle_time","leveling_tier","created_at","leveling_points","updated_at","private","hidden_profile","logout_at","karma","statistics","distance","pvp","damage_to_buildings","main_battery","frags","hits","max_frags_ship_id","shots","max_ships_spotted_ship_id","max_damage_scouting","art_agro","max_xp_ship_id","ships_spotted","second_battery","xp","survived_battles","dropped_capture_points","max_damage_dealt_to_buildings","torpedo_agro","draws","control_captured_points","battles_since_510","max_total_agro_ship_id","planes_killed","max_ships_spotted","max_suppressions_ship_id","survived_wins","damage_scouting","max_total_agro","capture_points","ramming","suppressions_count","max_suppressions_count","torpedoes","max_planes_killed_ship_id","aircraft","team_capture_points","control_dropped_points","max_damage_dealt_to_buildings_ship_id","max_damage_dealt_ship_id","losses","damage_dealt","max_scouting_damage_ship_id","team_dropped_capture_points","battles_since_512","nickname","stats_updated_at","clandata","0","members_count","creator_name","clan_id","leader_name","members_ids","creator_id","tag","old_name","is_clan_disbanded","renamed_at","old_tag","leader_id","description","achievements","battle","FOOLSDAY_TROOPER","clansummary","rankdata","buildAchievements","buildRankSummary","buildSprintRankSummary","reloadData","nextProps","axios","get","then","response","catch","error","console","log","seasons","rankstatdata","rankship_ids","Set","statdata","ship","ship_id_strings","limit","j","params","shipresponse","shipres","images","small","torpedoes_max_frags_battl","_i2","_Object$entries2","rank_solo","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_i3","_Object$entries3","_ref9","_ref8","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i4","_Object$entries4","_ref12","_ref11","number","Card","raised","padding","_i5","_Object$entries5","_ref15","_ref14","List","color","rank_info","rank","_i6","_Object$entries6","_ref18","_ref17","fontSize","fontWeight","marginBottom","marginTop","content","pathname","marginLeft","display","flexWrap","justifyContent","alignItems","toFixed","Group","itemsPerRow","centered","PlayerShipTypeGraph_PlayerShipTypeGraph","PlayerShipNationGraph_PlayerShipNationGraph","PlayerShipTierGraph_PlayerShipTierGraph","Tab","menu","secondary","pointing","panes","menuItem","render","Pane","attached","PlayerShipTypeTable_PlayerShipTypeTable","PlayerShipTierTable_PlayerShipTierTable","PlayerShipNationTable_PlayerShipNationTable","PlayerShipTypeTableMobile_PlayerShipTypeTableMobile","PlayerShipTierTableMobile_PlayerShipTierTable","PlayerShipNationTableMobile_PlayerShipNationTableMobile","PlayerShipTable_PlayerShipTable","PlayerRankTable_PlayerRankTable","PlayerShipTableMobile_PlayerShipTableMobile","PlayerRankTableMobile_PlayerRankTableMobile","Login","username","password","loggedin","wrongusername","wrongpassword","hide","login","server","Form","Field","Input","labelPosition","Message","header","iconPosition","link","Register","register","post","required","resultRenderer","trigger","PlayerHeader","isLoading","results","showLogin","resetComponent","handleResultSelect","handleSearchChange","LoginClick","RegisterClick","LogoutClick","scrollTo","result","set_account_id","showRegister","alert","stackable","position","Search","selectFirstResult","minCharacters","loading","onResultSelect","onSearchChange","debounce","leading","disabled","User_Login","User_Register","Player","nextState","PlayerHeader_PlayerHeader","PlayerIndex_PlayerIndex","location","Placeholder","Line","Paragraph","withRouter","ClanIndex","playerlist","buildMembers","account_id_strings","playerresponse","playerres","flexDirection","defineProperty","date","Date","getFullYear","getMonth","getDate","time","ClanHeader","set_clan_id","Clan","ClanHeader_ClanHeader","ClanIndex_ClanIndex","ShipIndex","icon_url","keys","icons","ship_type_images","is_premium","image_premium","large","Loader","inline","ShipHeader","shipList","getShipList","set_ship_id","filter","toLowerCase","includes","ship_promise","ship_nations","map","Promise","resolve","reject","all","curr","assign","vals","Ship","ShipHeader_ShipHeader","ShipIndex_ShipIndex","App","react_router","path","exact","component","PlayerIndex_PlayerHeader","ClanIndex_ClanHeader","ShipIndex_ShipHeader","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed315285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wows-icon.95cf5cf6.png\";","import React, { Component } from 'react'\nimport {\n    Button,\n    Container,\n    Divider,\n    Header,\n    Icon,\n    Segment,\n    Image,\n} from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\nimport logo from '../assets/wows-icon.png'\nimport './index.scss'\n\nclass IndexPage extends Component {\n    componentDidMount() {\n        document.title = \"Chaldea Wiki\";\n    }\n\n    render() {\n        return (\n            <div>\n                <Segment inverted textAlign='center' vertical>\n                    <Header className=\"title\" as='h1' inverted>\n                        <Image avatar src={logo} size='large' verticalAlign='middle'/>\n                        <span>USS illini mkII</span>\n                    </Header>\n                    <Container className=\"index\" text>\n                        <Header as='h2' inverted>\n                            A wiki site for World of Warships\n                        </Header>\n                        <Divider/>\n                    </Container>\n                    <Link to={'/player'}>\n                        <Button primary>\n                            Player Stats\n                            <Icon name='right arrow' />\n                        </Button>\n                    </Link>\n                </Segment>\n\n            </div>\n        );\n    }\n}\n\nexport default IndexPage;","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nexport default class PlayerWeaponTable extends Component {\r\n  render() {\r\n    return (\r\n      <Table celled structured striped collapsing unstackable className=\"PlayerWeaponTable\">\r\n        <Table.Header className=\"PlayerWeaponTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell colSpan='3'>Main Battery</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='3'>Torpedos</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='3'>Secondary Battery</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='2'>Aircraft</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='2'>Ramming</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerWeaponTableBody\">\r\n          <Table.Row key={this.props.selectedShipData.ship_id}>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.aircraft_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.aircraft_frags}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.ramming_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.ramming_frags}</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id} id={\"PlayerShipTable\"+row.ship_id.toString()} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><a>{row.name}</a></Table.Cell>\r\n                <Table.Cell ><img src={row.image} alt=\"404\" height=\"35\"/></Table.Cell>\r\n                <Table.Cell ><img src={nationDict[row.nation].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell ><img src={typeDict[row.type].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.wins}</Table.Cell>\r\n                <Table.Cell >{row.battles}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.survival_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.max_xp}</Table.Cell>\r\n                <Table.Cell >{row.max_frags_battle}</Table.Cell>\r\n                <Table.Cell >{row.max_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.max_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell collapsing><Icon name=\"ellipsis horizontal\"/></Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.props.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(data){\r\n      var selectedData = [];\r\n      data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleFilter(selectedName,selectedNation,selectedType,selectedTier){\r\n    if(this.props.data){\r\n      var selectedData = [];\r\n      this.props.data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleselectedShipID(selectedShipID){\r\n    var selectedShipID = parseInt(selectedShipID.substring(15,selectedShipID.length))\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row key=\"header1\">\r\n                <Table.HeaderCell colSpan='2'>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'wins' ? this.state.direction : null} onClick={() => this.handleSort('wins')} rowSpan='2'>Wins</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'battles' ? this.state.direction : null} onClick={() => this.handleSort('battles')} rowSpan='2'>Battles</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'survival_rate' ? this.state.direction : null} onClick={() => this.handleSort('survival_rate')} rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n                <Table.HeaderCell rowSpan='2'></Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_xp' ? this.state.direction : null} onClick={() => this.handleSort('max_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_frags_battle' ? this.state.direction : null} onClick={() => this.handleSort('max_frags_battle')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('max_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('max_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='20'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item  key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nclass PlayerShipTableMobileBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id} id={\"PlayerShipTableMobile\"+row.ship_id.toString()} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><a>{row.name}</a></Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableMobileBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.props.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(data){\r\n      var selectedData = [];\r\n      data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleFilter(selectedName,selectedNation,selectedType,selectedTier){\r\n    if(this.props.data){\r\n      var selectedData = [];\r\n      this.props.data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleselectedShipID(selectedShipID){\r\n    var selectedShipID = parseInt(selectedShipID.substring(15,selectedShipID.length))\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 2;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage - 1 ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = this.state.page; i < this.state.page+2; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTableMobile\">\r\n            <Table.Header className=\"PlayerShipTableMobileHeader\">\r\n              <Table.Row key=\"header1\">\r\n                <Table.HeaderCell >Ship</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Ave Dmg</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableMobileBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableMobileFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='20'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item  key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          var seasonName = \"\";\r\n          if (parseInt(row.season) < 100){\r\n            seasonName = row.season;\r\n          }else{\r\n            seasonName = \"Sprint \" + (parseInt(row.season)-100).toString()\r\n          }\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id.toString()+'/'+row.season} id={\"PlayerRankTable\"+row.ship_id.toString()+'/'+row.season} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><a>{row.name}</a></Table.Cell>\r\n                <Table.Cell ><img src={row.image} alt=\"404\" height=\"35\"/></Table.Cell>\r\n                <Table.Cell ><img src={nationDict[row.nation].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell ><img src={typeDict[row.type].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.wins}</Table.Cell>\r\n                <Table.Cell >{row.battles}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.survival_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.max_xp}</Table.Cell>\r\n                <Table.Cell >{row.max_frags_battle}</Table.Cell>\r\n                <Table.Cell >{row.max_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.max_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell collapsing><Icon name=\"ellipsis horizontal\"/></Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerRankTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id:\"\",\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n      seasonOptions:[{key: '0', value: 'all', text: ''}],\r\n      selectedSeason: null,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n  componentWillReceiveProps(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n    \r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.state.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(data){\r\n       data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n   }\r\n\r\n  handleFilter(selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(this.props.data){\r\n       this.props.data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n  }\r\n\r\n  handleselectedShipID(input){\r\n    var str = input.substring(15,input.length)\r\n    var loc = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      if(str.charAt(i)==='/'){\r\n        loc = i;\r\n      }\r\n    }\r\n    var selectedShipID = parseInt(str.substring(0,loc));\r\n    var season = str.substring(loc+1,str.length);\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID && row.season === season){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if(selectedSeason && selectedSeason !== \"all\" && selectedSeason !== \"\"){\r\n      if(row.season !== selectedSeason){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dropdown fluid clearable placeholder='Select Season' selection options={this.state.seasonOptions.sort((a,b)=>a.key-b.key)} value={this.state.selectedSeason} onChange={(e,{value}) => {this.setState({selectedSeason: value, selectedName:null,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value, null,\"all\",\"all\",\"all\")}}/>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row  key=\"header1\">\r\n                <Table.HeaderCell colSpan='2'>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'wins' ? this.state.direction : null} onClick={() => this.handleSort('wins')} rowSpan='2'>Wins</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'battles' ? this.state.direction : null} onClick={() => this.handleSort('battles')} rowSpan='2'>Battles</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'survival_rate' ? this.state.direction : null} onClick={() => this.handleSort('survival_rate')} rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n                <Table.HeaderCell rowSpan='2'></Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(this.state.selectedSeason, value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell colSpan='2'width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell colSpan='2'width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_xp' ? this.state.direction : null} onClick={() => this.handleSort('max_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_frags_battle' ? this.state.direction : null} onClick={() => this.handleSort('max_frags_battle')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('max_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('max_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='21'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          var seasonName = \"\";\r\n          if (parseInt(row.season) < 100){\r\n            seasonName = row.season;\r\n          }else{\r\n            seasonName = \"Sprint \" + (parseInt(row.season)-100).toString()\r\n          }\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id.toString()+'/'+row.season} id={\"PlayerRankTableMobile\"+row.ship_id.toString()+'/'+row.season} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><a>{row.name}</a></Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerRankTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id:\"\",\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n      seasonOptions:[{key: '0', value: 'all', text: ''}],\r\n      selectedSeason: null,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n  componentWillReceiveProps(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.state.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(data){\r\n       data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n   }\r\n\r\n  handleFilter(selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(this.props.data){\r\n       this.props.data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n  }\r\n\r\n  handleselectedShipID(input){\r\n    var str = input.substring(15,input.length)\r\n    var loc = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      if(str.charAt(i)==='/'){\r\n        loc = i;\r\n      }\r\n    }\r\n    var selectedShipID = parseInt(str.substring(0,loc));\r\n    var season = str.substring(loc+1,str.length);\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID && row.season === season){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if(selectedSeason && selectedSeason !== \"all\" && selectedSeason !== \"\"){\r\n      if(row.season !== selectedSeason){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 2;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage - 1 ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = this.state.page; i < this.state.page+2; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dropdown fluid clearable placeholder='Select Season' selection options={this.state.seasonOptions} value={this.state.selectedSeason} onChange={(e,{value}) => {this.setState({selectedSeason: value, selectedName:null,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value, null,\"all\",\"all\",\"all\")}}/>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row  key=\"header1\">\r\n                <Table.HeaderCell >Ship</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')}>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Ave Dmg</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='21'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTypeTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.type === \"Destroyer\"){\r\n        data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n        data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n        data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n        data.destroyer.max_planes_killed = row.max_planes_killed > data.destroyer.max_planes_killed?row.max_planes_killed:data.destroyer.max_planes_killed ;\r\n        data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_planes_killed  = division((row.ave_planes_killed + data.destroyer.ave_planes_killed * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.battles += row.battles\r\n        data.destroyer.wins += row.wins\r\n        data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n        data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.count ++;\r\n      }else if(row.type === \"Cruiser\"){\r\n        data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n        data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n        data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n        data.cruiser.max_planes_killed = row.max_planes_killed > data.cruiser.max_planes_killed?row.max_planes_killed:data.cruiser.max_planes_killed ;\r\n        data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_planes_killed  = division((row.ave_planes_killed + data.cruiser.ave_planes_killed * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.battles += row.battles\r\n        data.cruiser.wins += row.wins\r\n        data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n        data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.count ++;\r\n      }else if(row.type === \"Battleship\"){\r\n        data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n        data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n        data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n        data.battleship.max_planes_killed = row.max_planes_killed > data.battleship.max_planes_killed?row.max_planes_killed:data.battleship.max_planes_killed ;\r\n        data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_planes_killed  = division((row.ave_planes_killed + data.battleship.ave_planes_killed * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.battles += row.battles\r\n        data.battleship.wins += row.wins\r\n        data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n        data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.count ++;\r\n      }else if(row.type === \"AirCarrier\"){\r\n        data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n        data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n        data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n        data.carrier.max_planes_killed = row.max_planes_killed > data.carrier.max_planes_killed?row.max_planes_killed:data.carrier.max_planes_killed ;\r\n        data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_planes_killed  = division((row.ave_planes_killed + data.carrier.ave_planes_killed * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.battles += row.battles\r\n        data.carrier.wins += row.wins\r\n        data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n        data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.count ++;\r\n      }\r\n    })\r\n    return[(\r\n    <Table.Row key={\"Destroyer\"}>\r\n      <Table.Cell>Destroyer</Table.Cell>\r\n      <Table.Cell>{data.destroyer.wins}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.battles}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.destroyer.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.destroyer.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Cruiser\"}>\r\n      <Table.Cell>Cruiser</Table.Cell>\r\n      <Table.Cell>{data.cruiser.wins}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.battles}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.cruiser.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.cruiser.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Battleship\"}>\r\n      <Table.Cell>Battleship</Table.Cell>\r\n      <Table.Cell>{data.battleship.wins}</Table.Cell>\r\n      <Table.Cell>{data.battleship.battles}</Table.Cell>\r\n      <Table.Cell>{data.battleship.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.battleship.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.battleship.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.battleship.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Carrier\"}>\r\n      <Table.Cell>Aircraft Carrier</Table.Cell>\r\n      <Table.Cell>{data.carrier.wins}</Table.Cell>\r\n      <Table.Cell>{data.carrier.battles}</Table.Cell>\r\n      <Table.Cell>{data.carrier.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.carrier.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.carrier.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.carrier.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>)];\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Type</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\nfunction romanize(num) {\r\n  var lookup = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},roman = '',i;\r\n  for ( i in lookup ) {\r\n    while ( num >= lookup[i] ) {\r\n      roman += i;\r\n      num -= lookup[i];\r\n    }\r\n  }\r\n  return roman;\r\n}\r\nexport default class PlayerShipTierTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    this.props.data.forEach((row)=>{\r\n      var tier = parseInt(row.tier);\r\n      data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n      data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n      data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n      data[tier-1].max_planes_killed  = row.max_planes_killed > data[tier-1].max_planes_killed?row.max_planes_killed:data[tier-1].max_planes_killed ;\r\n      data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_planes_killed = division((row.ave_planes_killed + data[tier-1].ave_planes_killed * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].battles += row.battles\r\n      data[tier-1].wins += row.wins\r\n      data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n      data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].count ++;\r\n    })\r\n    var arr = [];\r\n    for(var tier=0; tier<10; tier++){\r\n      arr.push(\r\n      <Table.Row key={tier+1}>\r\n        <Table.Cell>{romanize(tier+1)}</Table.Cell>\r\n        <Table.Cell>{data[tier].wins}</Table.Cell>\r\n        <Table.Cell>{data[tier].battles}</Table.Cell>\r\n        <Table.Cell>{data[tier].win_rate}</Table.Cell>\r\n        <Table.Cell>{data[tier].survival_rate}</Table.Cell>\r\n\r\n        <Table.Cell>{data[tier].max_xp}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_frags_battle}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_damage_dealt}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_planes_killed}</Table.Cell>\r\n\r\n        <Table.Cell>{data[tier].ave_xp}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_frags}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_damage_dealt}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_planes_killed}</Table.Cell>\r\n      </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Tier</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\n\r\nexport default class PlayerShipNationTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.nation === \"usa\"){\r\n        data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n        data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n        data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n        data.usa.max_planes_killed  = row.max_planes_killed > data.usa.max_planes_killed?row.max_planes_killed:data.usa.max_planes_killed ;\r\n        data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_planes_killed = division((row.ave_planes_killed + data.usa.ave_planes_killed * data.usa.count),(data.usa.count+1))\r\n        data.usa.battles += row.battles\r\n        data.usa.wins += row.wins\r\n        data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n        data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n        data.usa.count ++;\r\n      }else if(row.nation === \"ussr\"){\r\n        data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n        data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n        data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n        data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.battles += row.battles\r\n        data.ussr.wins += row.wins\r\n        data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n        data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.max_planes_killed  = row.max_planes_killed > data.ussr.max_planes_killed?row.max_planes_killed:data.ussr.max_planes_killed ;\r\n        data.ussr.ave_planes_killed = division((row.ave_planes_killed + data.ussr.ave_planes_killed * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.count ++;\r\n      }else if(row.nation === \"uk\"){\r\n        data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n        data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n        data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n        data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n        data.uk.battles += row.battles\r\n        data.uk.wins += row.wins\r\n        data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n        data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n        data.uk.max_planes_killed  = row.max_planes_killed > data.uk.max_planes_killed?row.max_planes_killed:data.uk.max_planes_killed ;\r\n        data.uk.ave_planes_killed = division((row.ave_planes_killed + data.uk.ave_planes_killed * data.uk.count),(data.uk.count+1))\r\n        data.uk.count ++;\r\n      }else if(row.nation === \"japan\"){\r\n        data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n        data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n        data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n        data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n        data.japan.battles += row.battles\r\n        data.japan.wins += row.wins\r\n        data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n        data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n        data.japan.max_planes_killed  = row.max_planes_killed > data.japan.max_planes_killed?row.max_planes_killed:data.japan.max_planes_killed ;\r\n        data.japan.ave_planes_killed = division((row.ave_planes_killed + data.japan.ave_planes_killed * data.japan.count),(data.japan.count+1))\r\n        data.japan.count ++;\r\n      }else if(row.nation === \"france\"){\r\n        data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n        data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n        data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n        data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n        data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n        data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n        data.france.battles += row.battles\r\n        data.france.wins += row.wins\r\n        data.france.win_rate = division(data.france.wins,data.france.battles);\r\n        data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n        data.france.max_planes_killed  = row.max_planes_killed > data.france.max_planes_killed?row.max_planes_killed:data.france.max_planes_killed ;\r\n        data.france.ave_planes_killed = division((row.ave_planes_killed + data.france.ave_planes_killed * data.france.count),(data.france.count+1))\r\n        data.france.count ++;\r\n      }else if(row.nation === \"germany\"){\r\n        data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n        data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n        data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n        data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n        data.germany.battles += row.battles\r\n        data.germany.wins += row.wins\r\n        data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n        data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n        data.germany.max_planes_killed  = row.max_planes_killed > data.germany.max_planes_killed?row.max_planes_killed:data.germany.max_planes_killed ;\r\n        data.germany.ave_planes_killed = division((row.ave_planes_killed + data.germany.ave_planes_killed * data.germany.count),(data.germany.count+1))\r\n        data.germany.count ++;\r\n      }else if(row.nation === \"poland\"){\r\n        data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n        data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n        data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n        data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n        data.poland.battles += row.battles\r\n        data.poland.wins += row.wins\r\n        data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n        data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n        data.poland.max_planes_killed  = row.max_planes_killed > data.poland.max_planes_killed?row.max_planes_killed:data.poland.max_planes_killed ;\r\n        data.poland.ave_planes_killed = division((row.ave_planes_killed + data.poland.ave_planes_killed * data.poland.count),(data.poland.count+1))\r\n        data.poland.count ++;\r\n      }else if(row.nation === \"italy\"){\r\n        data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n        data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n        data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n        data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n        data.italy.battles += row.battles\r\n        data.italy.wins += row.wins\r\n        data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n        data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n        data.italy.max_planes_killed  = row.max_planes_killed > data.italy.max_planes_killed?row.max_planes_killed:data.italy.max_planes_killed ;\r\n        data.italy.ave_planes_killed = division((row.ave_planes_killed + data.italy.ave_planes_killed * data.italy.count),(data.italy.count+1))\r\n        data.italy.count ++;\r\n      }else if(row.nation === \"pan_asia\"){\r\n        data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n        data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n        data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n        data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.battles += row.battles\r\n        data.pan_asia.wins += row.wins\r\n        data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n        data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.max_planes_killed  = row.max_planes_killed > data.pan_asia.max_planes_killed?row.max_planes_killed:data.pan_asia.max_planes_killed ;\r\n        data.pan_asia.ave_planes_killed = division((row.ave_planes_killed + data.pan_asia.ave_planes_killed * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.count ++;\r\n      }else if(row.nation === \"commonwealth\"){\r\n        data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n        data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n        data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n        data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.battles += row.battles\r\n        data.commonwealth.wins += row.wins\r\n        data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n        data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.max_planes_killed  = row.max_planes_killed > data.commonwealth.max_planes_killed?row.max_planes_killed:data.commonwealth.max_planes_killed ;\r\n        data.commonwealth.ave_planes_killed = division((row.ave_planes_killed + data.commonwealth.ave_planes_killed * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.count ++;\r\n      }else if(row.nation === \"pan_america\"){\r\n        data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n        data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n        data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n        data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.battles += row.battles\r\n        data.pan_america.wins += row.wins\r\n        data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n        data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.max_planes_killed  = row.max_planes_killed > data.pan_america.max_planes_killed?row.max_planes_killed:data.pan_america.max_planes_killed ;\r\n        data.pan_america.ave_planes_killed = division((row.ave_planes_killed + data.pan_america.ave_planes_killed * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.count ++;\r\n      }\r\n    })\r\n    var arr = [];\r\n    for (const [nation, dat] of Object.entries(nationDict)) {\r\n      arr.push(\r\n        <Table.Row key={nation}>\r\n          <Table.Cell>{dat.text}</Table.Cell>\r\n          <Table.Cell>{data[nation].wins}</Table.Cell>\r\n          <Table.Cell>{data[nation].battles}</Table.Cell>\r\n          <Table.Cell>{data[nation].win_rate}</Table.Cell>\r\n          <Table.Cell>{data[nation].survival_rate}</Table.Cell>\r\n\r\n          <Table.Cell>{data[nation].max_xp}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_frags_battle}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_damage_dealt}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_planes_killed}</Table.Cell>\r\n\r\n          <Table.Cell>{data[nation].ave_xp}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_frags}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_damage_dealt}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_planes_killed}</Table.Cell>\r\n        </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Nation</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTypeTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.type === \"Destroyer\"){\r\n        data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n        data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n        data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n        data.destroyer.max_planes_killed = row.max_planes_killed > data.destroyer.max_planes_killed?row.max_planes_killed:data.destroyer.max_planes_killed ;\r\n        data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_planes_killed  = division((row.ave_planes_killed + data.destroyer.ave_planes_killed * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.battles += row.battles\r\n        data.destroyer.wins += row.wins\r\n        data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n        data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.count ++;\r\n      }else if(row.type === \"Cruiser\"){\r\n        data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n        data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n        data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n        data.cruiser.max_planes_killed = row.max_planes_killed > data.cruiser.max_planes_killed?row.max_planes_killed:data.cruiser.max_planes_killed ;\r\n        data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_planes_killed  = division((row.ave_planes_killed + data.cruiser.ave_planes_killed * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.battles += row.battles\r\n        data.cruiser.wins += row.wins\r\n        data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n        data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.count ++;\r\n      }else if(row.type === \"Battleship\"){\r\n        data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n        data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n        data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n        data.battleship.max_planes_killed = row.max_planes_killed > data.battleship.max_planes_killed?row.max_planes_killed:data.battleship.max_planes_killed ;\r\n        data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_planes_killed  = division((row.ave_planes_killed + data.battleship.ave_planes_killed * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.battles += row.battles\r\n        data.battleship.wins += row.wins\r\n        data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n        data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.count ++;\r\n      }else if(row.type === \"AirCarrier\"){\r\n        data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n        data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n        data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n        data.carrier.max_planes_killed = row.max_planes_killed > data.carrier.max_planes_killed?row.max_planes_killed:data.carrier.max_planes_killed ;\r\n        data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_planes_killed  = division((row.ave_planes_killed + data.carrier.ave_planes_killed * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.battles += row.battles\r\n        data.carrier.wins += row.wins\r\n        data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n        data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.count ++;\r\n      }\r\n    })\r\n    return[(\r\n    <Table.Row key={\"Destroyer\"}>\r\n      <Table.Cell>Destroyer</Table.Cell>\r\n      <Table.Cell>{data.destroyer.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Cruiser\"}>\r\n      <Table.Cell>Cruiser</Table.Cell>\r\n      <Table.Cell>{data.cruiser.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Battleship\"}>\r\n      <Table.Cell>Battleship</Table.Cell>\r\n      <Table.Cell>{data.battleship.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Carrier\"}>\r\n      <Table.Cell>Aircraft Carrier</Table.Cell>\r\n      <Table.Cell>{data.carrier.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>)];\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTableMobile\">\r\n        <Table.Header className=\"PlayerShipTypeTableMobileHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell >Type</Table.HeaderCell>\r\n          <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableMobileBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\nfunction romanize(num) {\r\n  var lookup = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},roman = '',i;\r\n  for ( i in lookup ) {\r\n    while ( num >= lookup[i] ) {\r\n      roman += i;\r\n      num -= lookup[i];\r\n    }\r\n  }\r\n  return roman;\r\n}\r\nexport default class PlayerShipTierTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    this.props.data.forEach((row)=>{\r\n      var tier = parseInt(row.tier);\r\n      data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n      data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n      data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n      data[tier-1].max_planes_killed  = row.max_planes_killed > data[tier-1].max_planes_killed?row.max_planes_killed:data[tier-1].max_planes_killed ;\r\n      data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_planes_killed = division((row.ave_planes_killed + data[tier-1].ave_planes_killed * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].battles += row.battles\r\n      data[tier-1].wins += row.wins\r\n      data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n      data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].count ++;\r\n    })\r\n    var arr = [];\r\n    for(var tier=0; tier<10; tier++){\r\n      arr.push(\r\n      <Table.Row key={tier+1}>\r\n        <Table.Cell>{romanize(tier+1)}</Table.Cell>\r\n        <Table.Cell>{data[tier].win_rate}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_damage_dealt}</Table.Cell>\r\n      </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell >Tier</Table.HeaderCell>\r\n            <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n            <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\n\r\nexport default class PlayerShipNationTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.nation === \"usa\"){\r\n        data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n        data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n        data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n        data.usa.max_planes_killed  = row.max_planes_killed > data.usa.max_planes_killed?row.max_planes_killed:data.usa.max_planes_killed ;\r\n        data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_planes_killed = division((row.ave_planes_killed + data.usa.ave_planes_killed * data.usa.count),(data.usa.count+1))\r\n        data.usa.battles += row.battles\r\n        data.usa.wins += row.wins\r\n        data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n        data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n        data.usa.count ++;\r\n      }else if(row.nation === \"ussr\"){\r\n        data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n        data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n        data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n        data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.battles += row.battles\r\n        data.ussr.wins += row.wins\r\n        data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n        data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.max_planes_killed  = row.max_planes_killed > data.ussr.max_planes_killed?row.max_planes_killed:data.ussr.max_planes_killed ;\r\n        data.ussr.ave_planes_killed = division((row.ave_planes_killed + data.ussr.ave_planes_killed * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.count ++;\r\n      }else if(row.nation === \"uk\"){\r\n        data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n        data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n        data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n        data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n        data.uk.battles += row.battles\r\n        data.uk.wins += row.wins\r\n        data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n        data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n        data.uk.max_planes_killed  = row.max_planes_killed > data.uk.max_planes_killed?row.max_planes_killed:data.uk.max_planes_killed ;\r\n        data.uk.ave_planes_killed = division((row.ave_planes_killed + data.uk.ave_planes_killed * data.uk.count),(data.uk.count+1))\r\n        data.uk.count ++;\r\n      }else if(row.nation === \"japan\"){\r\n        data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n        data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n        data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n        data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n        data.japan.battles += row.battles\r\n        data.japan.wins += row.wins\r\n        data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n        data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n        data.japan.max_planes_killed  = row.max_planes_killed > data.japan.max_planes_killed?row.max_planes_killed:data.japan.max_planes_killed ;\r\n        data.japan.ave_planes_killed = division((row.ave_planes_killed + data.japan.ave_planes_killed * data.japan.count),(data.japan.count+1))\r\n        data.japan.count ++;\r\n      }else if(row.nation === \"france\"){\r\n        data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n        data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n        data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n        data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n        data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n        data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n        data.france.battles += row.battles\r\n        data.france.wins += row.wins\r\n        data.france.win_rate = division(data.france.wins,data.france.battles);\r\n        data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n        data.france.max_planes_killed  = row.max_planes_killed > data.france.max_planes_killed?row.max_planes_killed:data.france.max_planes_killed ;\r\n        data.france.ave_planes_killed = division((row.ave_planes_killed + data.france.ave_planes_killed * data.france.count),(data.france.count+1))\r\n        data.france.count ++;\r\n      }else if(row.nation === \"germany\"){\r\n        data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n        data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n        data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n        data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n        data.germany.battles += row.battles\r\n        data.germany.wins += row.wins\r\n        data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n        data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n        data.germany.max_planes_killed  = row.max_planes_killed > data.germany.max_planes_killed?row.max_planes_killed:data.germany.max_planes_killed ;\r\n        data.germany.ave_planes_killed = division((row.ave_planes_killed + data.germany.ave_planes_killed * data.germany.count),(data.germany.count+1))\r\n        data.germany.count ++;\r\n      }else if(row.nation === \"poland\"){\r\n        data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n        data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n        data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n        data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n        data.poland.battles += row.battles\r\n        data.poland.wins += row.wins\r\n        data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n        data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n        data.poland.max_planes_killed  = row.max_planes_killed > data.poland.max_planes_killed?row.max_planes_killed:data.poland.max_planes_killed ;\r\n        data.poland.ave_planes_killed = division((row.ave_planes_killed + data.poland.ave_planes_killed * data.poland.count),(data.poland.count+1))\r\n        data.poland.count ++;\r\n      }else if(row.nation === \"italy\"){\r\n        data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n        data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n        data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n        data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n        data.italy.battles += row.battles\r\n        data.italy.wins += row.wins\r\n        data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n        data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n        data.italy.max_planes_killed  = row.max_planes_killed > data.italy.max_planes_killed?row.max_planes_killed:data.italy.max_planes_killed ;\r\n        data.italy.ave_planes_killed = division((row.ave_planes_killed + data.italy.ave_planes_killed * data.italy.count),(data.italy.count+1))\r\n        data.italy.count ++;\r\n      }else if(row.nation === \"pan_asia\"){\r\n        data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n        data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n        data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n        data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.battles += row.battles\r\n        data.pan_asia.wins += row.wins\r\n        data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n        data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.max_planes_killed  = row.max_planes_killed > data.pan_asia.max_planes_killed?row.max_planes_killed:data.pan_asia.max_planes_killed ;\r\n        data.pan_asia.ave_planes_killed = division((row.ave_planes_killed + data.pan_asia.ave_planes_killed * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.count ++;\r\n      }else if(row.nation === \"commonwealth\"){\r\n        data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n        data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n        data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n        data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.battles += row.battles\r\n        data.commonwealth.wins += row.wins\r\n        data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n        data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.max_planes_killed  = row.max_planes_killed > data.commonwealth.max_planes_killed?row.max_planes_killed:data.commonwealth.max_planes_killed ;\r\n        data.commonwealth.ave_planes_killed = division((row.ave_planes_killed + data.commonwealth.ave_planes_killed * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.count ++;\r\n      }else if(row.nation === \"pan_america\"){\r\n        data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n        data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n        data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n        data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.battles += row.battles\r\n        data.pan_america.wins += row.wins\r\n        data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n        data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.max_planes_killed  = row.max_planes_killed > data.pan_america.max_planes_killed?row.max_planes_killed:data.pan_america.max_planes_killed ;\r\n        data.pan_america.ave_planes_killed = division((row.ave_planes_killed + data.pan_america.ave_planes_killed * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.count ++;\r\n      }\r\n    })\r\n    var arr = [];\r\n    for (const [nation, dat] of Object.entries(nationDict)) {\r\n      arr.push(\r\n        <Table.Row key={nation}>\r\n          <Table.Cell>{dat.text}</Table.Cell>\r\n          <Table.Cell>{data[nation].win_rate}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_damage_dealt}</Table.Cell>\r\n        </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell >Nation</Table.HeaderCell>\r\n            <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n            <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTypeGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    if(this.props.data){\r\n      this.build(this.props.data);\r\n    }\r\n  }\r\n  build(input){\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    input.forEach((row)=>{\r\n      if(row.type === \"Destroyer\"){\r\n        data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n        data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n        data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n        data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.battles += row.battles\r\n        data.destroyer.wins += row.wins\r\n        data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n        data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.count ++;\r\n      }else if(row.type === \"Cruiser\"){\r\n        data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n        data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n        data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n        data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.battles += row.battles\r\n        data.cruiser.wins += row.wins\r\n        data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n        data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.count ++;\r\n      }else if(row.type === \"Battleship\"){\r\n        data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n        data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n        data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n        data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.battles += row.battles\r\n        data.battleship.wins += row.wins\r\n        data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n        data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.count ++;\r\n      }else if(row.type === \"AirCarrier\"){\r\n        data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n        data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n        data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n        data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.battles += row.battles\r\n        data.carrier.wins += row.wins\r\n        data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n        data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.count ++;\r\n      }\r\n    })\r\n\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data.destroyer.battles, label:\"Destroyer\"},\r\n      {Battles:this.state.data.cruiser.battles, label:\"Cruiser\"},\r\n      {Battles:this.state.data.battleship.battles, label:\"Battleship\"},\r\n      {Battles:this.state.data.carrier.battles, label:\"Aircraft Carrier\"},\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerShipNationGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    if(this.props.data){\r\n      this.build(this.props.data);\r\n    }\r\n  }\r\n  build(input){\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    input.forEach((row)=>{\r\n      if(row.nation === \"usa\"){\r\n        data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n        data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n        data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n        data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n        data.usa.battles += row.battles\r\n        data.usa.wins += row.wins\r\n        data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n        data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n        data.usa.count ++;\r\n      }else if(row.nation === \"ussr\"){\r\n        data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n        data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n        data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n        data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.battles += row.battles\r\n        data.ussr.wins += row.wins\r\n        data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n        data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.count ++;\r\n      }else if(row.nation === \"uk\"){\r\n        data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n        data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n        data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n        data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n        data.uk.battles += row.battles\r\n        data.uk.wins += row.wins\r\n        data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n        data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n        data.uk.count ++;\r\n      }else if(row.nation === \"japan\"){\r\n        data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n        data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n        data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n        data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n        data.japan.battles += row.battles\r\n        data.japan.wins += row.wins\r\n        data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n        data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n        data.japan.count ++;\r\n      }else if(row.nation === \"france\"){\r\n        data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n        data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n        data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n        data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n        data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n        data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n        data.france.battles += row.battles\r\n        data.france.wins += row.wins\r\n        data.france.win_rate = division(data.france.wins,data.france.battles);\r\n        data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n        data.france.count ++;\r\n      }else if(row.nation === \"germany\"){\r\n        data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n        data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n        data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n        data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n        data.germany.battles += row.battles\r\n        data.germany.wins += row.wins\r\n        data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n        data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n        data.germany.count ++;\r\n      }else if(row.nation === \"poland\"){\r\n        data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n        data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n        data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n        data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n        data.poland.battles += row.battles\r\n        data.poland.wins += row.wins\r\n        data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n        data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n        data.poland.count ++;\r\n      }else if(row.nation === \"italy\"){\r\n        data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n        data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n        data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n        data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n        data.italy.battles += row.battles\r\n        data.italy.wins += row.wins\r\n        data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n        data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n        data.italy.count ++;\r\n      }else if(row.nation === \"pan_asia\"){\r\n        data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n        data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n        data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n        data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.battles += row.battles\r\n        data.pan_asia.wins += row.wins\r\n        data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n        data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.count ++;\r\n      }else if(row.nation === \"commonwealth\"){\r\n        data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n        data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n        data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n        data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.battles += row.battles\r\n        data.commonwealth.wins += row.wins\r\n        data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n        data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.count ++;\r\n      }else if(row.nation === \"pan_america\"){\r\n        data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n        data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n        data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n        data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.battles += row.battles\r\n        data.pan_america.wins += row.wins\r\n        data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n        data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.count ++;\r\n      }\r\n    })\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data.usa.battles, label:\"'USA'\"},\r\n      {Battles:this.state.data.ussr.battles, label:\"USSR\"},\r\n      {Battles:this.state.data.uk.battles, label:\"UK\"},\r\n      {Battles:this.state.data.japan.battles, label:\"Japan\"},\r\n      {Battles:this.state.data.france.battles, label:\"France\"},\r\n      {Battles:this.state.data.germany.battles, label:\"Germany\"},\r\n      {Battles:this.state.data.poland.battles, label:\"Poland\"},\r\n      {Battles:this.state.data.pan_asia.battles, label:\"Pan Asia\"},\r\n      {Battles:this.state.data.italy.battles, label:\"Italy\"},\r\n      {Battles:this.state.data.commonwealth.battles, label:\"Common Wealth\"},\r\n      {Battles:this.state.data.pan_america.battles, label:\"Pan America\"},\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTierGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    if(this.props.data){\r\n      this.build(this.props.data);\r\n    }\r\n  }\r\n  build(input){\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    input.forEach((row)=>{\r\n      var tier = parseInt(row.tier);\r\n      data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n      data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n      data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n      data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].battles += row.battles\r\n      data[tier-1].wins += row.wins\r\n      data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n      data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].count ++;\r\n    })\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data[0].battles, label:\"I\"},\r\n      {Battles:this.state.data[1].battles, label:\"II\"},\r\n      {Battles:this.state.data[2].battles, label:\"III\"},\r\n      {Battles:this.state.data[3].battles, label:\"IV\"},\r\n      {Battles:this.state.data[4].battles, label:\"V\"},\r\n      {Battles:this.state.data[5].battles, label:\"VI\"},\r\n      {Battles:this.state.data[6].battles, label:\"VII\"},\r\n      {Battles:this.state.data[7].battles, label:\"VIII\"},\r\n      {Battles:this.state.data[8].battles, label:\"IX\"},\r\n      {Battles:this.state.data[9].battles, label:\"X\"},\r\n\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerShipTable from '../PlayerTable/PlayerShipTable.js';\r\nimport PlayerShipTableMobile from '../PlayerTable/PlayerShipTableMobile.js';\r\nimport PlayerRankTable from '../PlayerTable/PlayerRankTable.js';\r\nimport PlayerRankTableMobile from '../PlayerTable/PlayerRankTableMobile.js';\r\nimport PlayerShipTypeTable from '../PlayerTable/PlayerShipTypeTable.js';\r\nimport PlayerShipTierTable from '../PlayerTable/PlayerShipTierTable.js';\r\nimport PlayerShipNationTable from '../PlayerTable/PlayerShipNationTable.js';\r\nimport PlayerShipTypeTableMobile from '../PlayerTable/PlayerShipTypeTableMobile.js';\r\nimport PlayerShipTierTableMobile from '../PlayerTable/PlayerShipTierTableMobile.js';\r\nimport PlayerShipNationTableMobile from '../PlayerTable/PlayerShipNationTableMobile.js';\r\nimport PlayerShipTypeGraph from '../PlayerGraph/PlayerShipTypeGraph.js';\r\nimport PlayerShipNationGraph from '../PlayerGraph/PlayerShipNationGraph.js';\r\nimport PlayerShipTierGraph from '../PlayerGraph/PlayerShipTierGraph.js';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nconst achievementsDict = {\r\n    \"DOUBLE_KILL\":{'text':'Double Strike','image':'http://wiki.gcdn.co/images/f/f3/Icon_achievement_DOUBLE_KILL.png'},\r\n    \"MAIN_CALIBER\":{'text':'High Caliber','image':'http://wiki.gcdn.co/images/5/51/Icon_achievement_MAIN_CALIBER.png'},\r\n    \"LIQUIDATOR\":{'text':'Liquidator','image':'http://wiki.gcdn.co/images/3/3f/Icon_achievement_LIQUIDATOR.png'},\r\n    \"WITHERING\":{'text':'Witherer','image':'http://wiki.gcdn.co/images/5/5f/Icon_achievement_WITHERING.png'},\r\n    \"FIREPROOF\":{'text':'Fireproof','image':'http://wiki.gcdn.co/images/0/03/Icon_achievement_FIREPROOF.png'},\r\n    \"ARSONIST\":{'text':'Arsonist','image':'http://wiki.gcdn.co/images/5/57/Icon_achievement_ARSONIST.png'},\r\n    \"DETONATED\":{'text':'Detonation','image':'http://wiki.gcdn.co/images/f/f7/Icon_achievement_DETONATED.png'},\r\n    \"INSTANT_KILL\":{'text':'Devastating Strike','image':'http://wiki.gcdn.co/images/0/01/Icon_achievement_INSTANT_KILL.png'},\r\n    \"UNSINKABLE\":{'text':'Unsinkable','image':'http://wiki.gcdn.co/images/c/c0/Icon_achievement_UNSINKABLE.png'},\r\n    \"CLEAR_SKY\":{'text':'Clear Sky','image':'http://wiki.gcdn.co/images/e/e4/Icon_achievement_AIRKING.png'},\r\n    \"DREADNOUGHT\":{'text':'Dreadnought','image':'http://wiki.gcdn.co/images/2/24/Icon_achievement_DREADNOUGHT.png'},\r\n    \"FIRST_BLOOD\":{'text':'First Blood','image':'http://wiki.gcdn.co/images/f/f4/Icon_achievement_FIRST_BLOOD.png'},\r\n    \"HEADBUTT\":{'text':'Die-Hard','image':'http://wiki.gcdn.co/images/3/37/Icon_achievement_HEADBUTT.png'},\r\n    \"ONE_SOLDIER_IN_THE_FIELD\":{'text':'Solo Warrior','image':'http://wiki.gcdn.co/images/5/50/Icon_achievement_ONE_SOLDIER_IN_THE_FIELD.png'},\r\n    \"WARRIOR\":{'text':'Kraken Unleashed','image':'http://wiki.gcdn.co/images/0/0c/Icon_achievement_WARRIOR.png'},\r\n    \"SUPPORT\":{'text':'Confederate','image':'http://wiki.gcdn.co/images/3/32/Icon_achievement_SUPPORT.png'},\r\n    \"ATBA_CALIBER\":{'text':'Close Quarters Expert','image':'http://wiki.gcdn.co/images/1/1a/Icon_achievement_ATBA_CALIBER.png'},\r\n    \"RETRIBUTION\":{'text':\"It's Just A Flesh Wound!\",'image':'http://wiki.gcdn.co/images/4/4d/Icon_achievement_RETRIBUTION.png'},\r\n};\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport default class PlayerIndex extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id: '',\r\n      achievementsVisible: window.innerWidth>400?true:false,\r\n      playerTableVisible: window.innerWidth>=1920?true:false,\r\n      playerShipTableData: null,\r\n      playerRankTableData: null,\r\n      shipdetails: null,\r\n      shipnames: null,\r\n      rankshipnames: null,\r\n      seasonOptions: [{key: '0', value: 'all', text: ''}],\r\n      data: {\"last_battle_time\":0,\"account_id\":0,\"leveling_tier\":0,\"created_at\":1457320991,\"leveling_points\":12806,\"updated_at\":1555877501,\"private\":null,\"hidden_profile\":false,\"logout_at\":1555877490,\"karma\":null,\"statistics\":{\"distance\":496492,\"battles\":12716,\"pvp\":{\"max_xp\":6511,\"damage_to_buildings\":619131,\"main_battery\":{\"max_frags_battle\":8,\"frags\":9655,\"hits\":763954,\"max_frags_ship_id\":3765384944,\"shots\":2056909},\"max_ships_spotted_ship_id\":3751786288,\"max_damage_scouting\":334282,\"art_agro\":4000000001,\"max_xp_ship_id\":3760109008,\"ships_spotted\":14066,\"second_battery\":{\"max_frags_battle\":3,\"frags\":364,\"hits\":98556,\"max_frags_ship_id\":3751753712,\"shots\":488873},\"max_frags_ship_id\":4184815568,\"xp\":20988609,\"survived_battles\":5087,\"dropped_capture_points\":0,\"max_damage_dealt_to_buildings\":213600,\"torpedo_agro\":848533559,\"draws\":4,\"control_captured_points\":99320,\"battles_since_510\":9057,\"max_total_agro_ship_id\":4276041424,\"planes_killed\":48366,\"battles\":11055,\"max_ships_spotted\":12,\"max_suppressions_ship_id\":4276041424,\"survived_wins\":4322,\"frags\":14915,\"damage_scouting\":257570466,\"max_total_agro\":4793200,\"max_frags_battle\":8,\"capture_points\":0,\"ramming\":{\"max_frags_battle\":1,\"frags\":117,\"max_frags_ship_id\":3760109008},\"suppressions_count\":3,\"max_suppressions_count\":1,\"torpedoes\":{\"max_frags_battle\":4,\"frags\":1359,\"hits\":6254,\"max_frags_ship_id\":4282267344,\"shots\":82849},\"max_planes_killed_ship_id\":4288591856,\"aircraft\":{\"max_frags_battle\":7,\"frags\":1551,\"max_frags_ship_id\":3763320816},\"team_capture_points\":1112945,\"control_dropped_points\":64546,\"max_damage_dealt\":342198,\"max_damage_dealt_to_buildings_ship_id\":4282333168,\"max_damage_dealt_ship_id\":4276041424,\"wins\":6872,\"losses\":4179,\"damage_dealt\":892778787,\"max_planes_killed\":83,\"max_scouting_damage_ship_id\":4279219920,\"team_dropped_capture_points\":542979,\"battles_since_512\":8542}},\"nickname\":\"\",\"stats_updated_at\":1555877501},\r\n      clandata: {\"0\":{\"members_count\":46,\"name\":\"Hiryu Ride Face\",\"creator_name\":\"Aikun96\",\"clan_id\":0,\"created_at\":1484747968,\"updated_at\":1555210651,\"leader_name\":\"ChipsChan\",\"members_ids\":[1003333910],\"creator_id\":1016393566,\"tag\":\"KUMA\",\"old_name\":null,\"is_clan_disbanded\":false,\"renamed_at\":null,\"old_tag\":null,\"leader_id\":1013587959,\"description\":\"\"}},\r\n      achievements:{\"battle\":{\"FOOLSDAY_TROOPER\":9}},\r\n      clansummary: \"\",\r\n      rankdata:null,\r\n    }\r\n    this.buildAchievements = this.buildAchievements.bind(this);\r\n    this.buildRankSummary = this.buildRankSummary.bind(this);\r\n    this.buildSprintRankSummary = this.buildSprintRankSummary.bind(this);\r\n    this.reloadData = this.reloadData.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({account_id:nextProps.account_id});\r\n    this.reloadData(nextProps.account_id);\r\n  }\r\n  componentDidMount(){\r\n    this.reloadData(this.props.account_id);\r\n  }\r\n  reloadData(account_id){\r\n    axios.get(\"https://api.worldofwarships.com/wows/account/info/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        this.setState({data: response.data.data[account_id]});\r\n    })\r\n    .catch((error) => console.log(error));\r\n    axios.get(\"https://api.worldofwarships.com/wows/clans/accountinfo/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var clan_id = response.data.data[account_id].clan_id;\r\n        axios.get(\"  https://api.worldofwarships.com/wows/clans/info/?application_id=\" + application_id + \"&clan_id=\" + clan_id)\r\n        .then((response)=>{\r\n            this.setState({\r\n              clandata: response.data.data[clan_id],\r\n              clansummary: \"[\" + response.data.data[clan_id].tag + \"] \" + response.data.data[clan_id].name,\r\n            });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    })\r\n    .catch((error) => console.log(error));\r\n    axios.get(\"https://api.worldofwarships.com/wows/account/achievements/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        this.setState({achievements:response.data.data[account_id]})\r\n    })\r\n    .catch((error) => console.log(error));\r\n    axios.get(\"https://api.worldofwarships.com/wows/seasons/accountinfo/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        this.setState({rankdata:response.data.data[account_id].seasons})\r\n    })\r\n    .catch((error) => console.log(error));\r\n    var playerShipTableData = [];\r\n    var playerRankTableData = [];\r\n    var playerRankTableData = [];\r\n    var rankstatdata = {};\r\n    var rankship_ids = [];\r\n    var rankshipnames = [];\r\n    var seasonOptions = [];\r\n    var seasons = new Set();\r\n    var statdata = {};\r\n    var ship_ids = [];\r\n    var shipnames = [];\r\n    var shipdetails = [];\r\n    this.setState({playerShipTableData:null, playerRankTableData:null});\r\n    axios.get(\"https://api.worldofwarships.com/wows/ships/stats/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var res = response.data.data[account_id];\r\n        res.forEach((ship) => {\r\n          ship_ids.push(ship.ship_id);\r\n          statdata[ship.ship_id]={\r\n              ship_id: ship.ship_id,\r\n              wins: ship.pvp.wins,\r\n              battles: (ship.pvp.wins+ship.pvp.losses+ship.pvp.draws),\r\n              win_rate: division(ship.pvp.wins,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              survival_rate: division(ship.pvp.survived_battles,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              max_xp: ship.pvp.max_xp,\r\n              max_frags_battle: ship.pvp.max_frags_battle,\r\n              max_damage_dealt: ship.pvp.max_damage_dealt,\r\n              max_planes_killed: ship.pvp.max_planes_killed,\r\n\r\n              ave_xp: divisionWhole(ship.pvp.xp,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_frags: division(ship.pvp.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_damage_dealt: divisionWhole(ship.pvp.damage_dealt,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_planes_killed: division(ship.pvp.planes_killed,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              main_battery_max_frags_battle: ship.pvp.main_battery.max_frags_battle,\r\n              main_battery_frags: division(ship.pvp.main_battery.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              main_battery_hit_rate: division(ship.pvp.main_battery.hits,ship.pvp.main_battery.shots),\r\n\r\n              torpedoes_max_frags_battle: ship.pvp.torpedoes.max_frags_battle,\r\n              torpedoes_frags: division(ship.pvp.torpedoes.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              torpedoes_hit_rate: division(ship.pvp.torpedoes.hits,ship.pvp.torpedoes.shots),\r\n\r\n              second_battery_max_frags_battle: ship.pvp.second_battery.max_frags_battle,\r\n              second_battery_frags: division(ship.pvp.second_battery.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              second_battery_hit_rate: division(ship.pvp.second_battery.hits,ship.pvp.second_battery.shots),\r\n\r\n              aircraft_max_frags_battle: ship.pvp.aircraft.max_frags_battle,\r\n              aircraft_frags: division(ship.pvp.aircraft.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              ramming_max_frags_battle: ship.pvp.ramming.max_frags_battle,\r\n              ramming_frags: division(ship.pvp.ramming.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n\r\n              team_capture_points: ship.pvp.team_capture_points,\r\n              dropped_capture_points: ship.pvp.dropped_capture_points,\r\n              ships_spotted: ship.pvp.ships_spotted,\r\n              max_damage_scouting: ship.pvp.max_damage_scouting,\r\n              survived_wins: ship.pvp.survived_wins,\r\n          }\r\n        })\r\n    })\r\n    .then(()=>{\r\n      var slice = 99;\r\n      for(var i = 0; i < ship_ids.length/slice; i++){\r\n        var ship_id_strings = \"\";\r\n        if (i * slice + slice < ship_ids.length){\r\n          var limit = i * slice + slice;\r\n        }else{\r\n          var limit = ship_ids.length;\r\n        }\r\n        for(var j = i * slice; j < limit; j++){\r\n          ship_id_strings += ship_ids[j] + \",\";\r\n        }\r\n        axios.get(\"https://api.worldofwarships.com/wows/encyclopedia/ships/?application_id=\" + application_id,{params:{ship_id:ship_id_strings.substring(0,ship_id_strings.length-1)}})\r\n        .then((shipresponse)=>{\r\n          for (const [ship_id, shipres] of Object.entries(shipresponse.data.data)) {\r\n            if(shipres && statdata[ship_id.toString()]){\r\n              shipnames.push({key: shipres.name, value: shipres.name, text: shipres.name});\r\n              shipdetails.push({\r\n                ship_id: shipres.ship_id,\r\n                name: shipres.name,\r\n                image: shipres.images.small,\r\n                nation: shipres.nation,\r\n                tier: shipres.tier,\r\n                type: shipres.type,\r\n              });\r\n              playerShipTableData.push({\r\n                ship_id: shipres.ship_id,\r\n                name: shipres.name,\r\n                image: shipres.images.small,\r\n                nation: shipres.nation,\r\n                tier: shipres.tier,\r\n                type: shipres.type,\r\n\r\n                wins: statdata[ship_id.toString()].wins,\r\n                battles: statdata[ship_id.toString()].battles,\r\n                win_rate:statdata[ship_id.toString()].win_rate,\r\n                survival_rate: statdata[ship_id.toString()].survival_rate,\r\n\r\n                max_xp: statdata[ship_id.toString()].max_xp,\r\n                max_frags_battle: statdata[ship_id.toString()].max_frags_battle,\r\n                max_damage_dealt: statdata[ship_id.toString()].max_damage_dealt,\r\n                max_planes_killed: statdata[ship_id.toString()].max_planes_killed,\r\n\r\n                ave_xp: statdata[ship_id.toString()].ave_xp,\r\n                ave_frags: statdata[ship_id.toString()].ave_frags,\r\n                ave_damage_dealt: statdata[ship_id.toString()].ave_damage_dealt,\r\n                ave_planes_killed: statdata[ship_id.toString()].ave_planes_killed,\r\n\r\n                main_battery_max_frags_battle: statdata[ship_id.toString()].main_battery_max_frags_battle,\r\n                main_battery_frags: statdata[ship_id.toString()].main_battery_frags,\r\n                main_battery_hit_rate: statdata[ship_id.toString()].main_battery_hit_rate,\r\n\r\n                torpedoes_max_frags_battle: statdata[ship_id.toString()].torpedoes_max_frags_battl,\r\n                torpedoes_frags: statdata[ship_id.toString()].torpedoes_frags,\r\n                torpedoes_hit_rate: statdata[ship_id.toString()].torpedoes_hit_rate,\r\n\r\n                second_battery_max_frags_battle: statdata[ship_id.toString()].second_battery_max_frags_battle,\r\n                second_battery_frags: statdata[ship_id.toString()].second_battery_frags,\r\n                second_battery_hit_rate: statdata[ship_id.toString()].second_battery_hit_rate,\r\n\r\n                aircraft_max_frags_battle: statdata[ship_id.toString()].aircraft_max_frags_battle,\r\n                aircraft_frags: statdata[ship_id.toString()].aircraft_frags,\r\n\r\n                ramming_max_frags_battle: statdata[ship_id.toString()].ramming_max_frags_battle,\r\n                ramming_frags: statdata[ship_id.toString()].ramming_frags,\r\n\r\n\r\n                team_capture_points: statdata[ship_id.toString()].team_capture_points,\r\n                dropped_capture_points: statdata[ship_id.toString()].dropped_capture_points,\r\n                ships_spotted: statdata[ship_id.toString()].ships_spotted,\r\n                max_damage_scouting: statdata[ship_id.toString()].max_damage_scouting,\r\n                survived_wins: statdata[ship_id.toString()].survived_wins,\r\n              });\r\n            }\r\n          }\r\n          this.setState({playerShipTableData :playerShipTableData ,shipnames:shipnames,shipdetails:shipdetails});\r\n        })\r\n        .catch((error) => console.log(error));\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n    axios.get(\"https://api.worldofwarships.com/wows/seasons/shipstats/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var res = response.data.data[account_id];\r\n        res.forEach((ship) => {\r\n          rankship_ids.push(ship.ship_id);\r\n          for (const [season, data] of Object.entries(ship.seasons)) {\r\n            if(data.rank_solo){\r\n              seasons.add(season);\r\n              rankstatdata[ship.ship_id.toString()+\",\"+season.toString()]={\r\n                  ship_id: ship.ship_id,\r\n                  wins: data.rank_solo.wins,\r\n                  battles: (data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws),\r\n                  win_rate: division(data.rank_solo.wins,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  survival_rate: division(data.rank_solo.survived_battles,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  max_xp: data.rank_solo.max_xp,\r\n                  max_frags_battle: data.rank_solo.max_frags_battle,\r\n                  max_damage_dealt: data.rank_solo.max_damage_dealt,\r\n                  max_planes_killed: data.rank_solo.max_planes_killed,\r\n\r\n                  ave_xp: divisionWhole(data.rank_solo.xp,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_frags: division(data.rank_solo.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_damage_dealt: divisionWhole(data.rank_solo.damage_dealt,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_planes_killed: division(data.rank_solo.planes_killed,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  main_battery_max_frags_battle: data.rank_solo.main_battery.max_frags_battle,\r\n                  main_battery_frags: division(data.rank_solo.main_battery.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  main_battery_hit_rate: division(data.rank_solo.main_battery.hits,data.rank_solo.main_battery.shots),\r\n\r\n                  torpedoes_max_frags_battle: data.rank_solo.torpedoes.max_frags_battle,\r\n                  torpedoes_frags: division(data.rank_solo.torpedoes.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  torpedoes_hit_rate: division(data.rank_solo.torpedoes.hits,data.rank_solo.torpedoes.shots),\r\n\r\n                  second_battery_max_frags_battle: data.rank_solo.second_battery.max_frags_battle,\r\n                  second_battery_frags: division(data.rank_solo.second_battery.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  second_battery_hit_rate: division(data.rank_solo.second_battery.hits,data.rank_solo.second_battery.shots),\r\n\r\n                  aircraft_max_frags_battle: data.rank_solo.aircraft.max_frags_battle,\r\n                  aircraft_frags: division(data.rank_solo.aircraft.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  ramming_max_frags_battle: data.rank_solo.ramming.max_frags_battle,\r\n                  ramming_frags: division(data.rank_solo.ramming.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  survived_wins: data.rank_solo.survived_wins,\r\n              }\r\n            }\r\n          }\r\n        })\r\n    })\r\n    .then(()=>{\r\n      for (let season of seasons){\r\n        if (season >= 100){\r\n          seasonOptions.push({key: season, value: season, text: \"Season: Sprint \" + (parseInt(season)-100).toString()});\r\n        }else{\r\n          seasonOptions.push({key: season, value: season, text: \"Season: \" + season});\r\n        }\r\n      }\r\n      var slice = 99;\r\n      for(var i = 0; i < rankship_ids.length/slice; i++){\r\n        var ship_id_strings = \"\";\r\n        if (i * slice + slice < rankship_ids.length){\r\n          var limit = i * slice + slice;\r\n        }else{\r\n          var limit = rankship_ids.length;\r\n        }\r\n        for(var j = i * slice; j < limit; j++){\r\n          ship_id_strings += rankship_ids[j] + \",\";\r\n        }\r\n        axios.get(\"https://api.worldofwarships.com/wows/encyclopedia/ships/?application_id=\" + application_id,{params:{ship_id:ship_id_strings.substring(0,ship_id_strings.length-1)}})\r\n        .then((shipresponse)=>{\r\n          for (const [ship_id, shipres] of Object.entries(shipresponse.data.data)) {\r\n            if(shipres){\r\n              rankshipnames.push({key: shipres.name, value: shipres.name, text: shipres.name});\r\n              for (let season of seasons){\r\n                if(rankstatdata[ship_id.toString()+\",\"+season.toString()]){\r\n                  playerRankTableData.push({\r\n                    ship_id: shipres.ship_id,\r\n                    season: season,\r\n                    name: shipres.name,\r\n                    image: shipres.images.small,\r\n                    nation: shipres.nation,\r\n                    tier: shipres.tier,\r\n                    type: shipres.type,\r\n\r\n                    wins: rankstatdata[ship_id.toString()+\",\"+season.toString()].wins,\r\n                    battles: rankstatdata[ship_id.toString()+\",\"+season.toString()].battles,\r\n                    win_rate:rankstatdata[ship_id.toString()+\",\"+season.toString()].win_rate,\r\n                    survival_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].survival_rate,\r\n\r\n                    max_xp: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_xp,\r\n                    max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_frags_battle,\r\n                    max_damage_dealt: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_damage_dealt,\r\n                    max_planes_killed: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_planes_killed,\r\n\r\n                    ave_xp: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_xp,\r\n                    ave_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_frags,\r\n                    ave_damage_dealt: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_damage_dealt,\r\n                    ave_planes_killed: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_planes_killed,\r\n\r\n                    main_battery_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_max_frags_battle,\r\n                    main_battery_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_frags,\r\n                    main_battery_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_hit_rate,\r\n\r\n                    torpedoes_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_max_frags_battl,\r\n                    torpedoes_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_frags,\r\n                    torpedoes_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_hit_rate,\r\n\r\n                    second_battery_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_max_frags_battle,\r\n                    second_battery_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_frags,\r\n                    second_battery_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_hit_rate,\r\n\r\n                    aircraft_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].aircraft_max_frags_battle,\r\n                    aircraft_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].aircraft_frags,\r\n\r\n                    ramming_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].ramming_max_frags_battle,\r\n                    ramming_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].ramming_frags,\r\n\r\n                    survived_wins: rankstatdata[ship_id.toString()+\",\"+season.toString()].survived_wins,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.setState({playerRankTableData:playerRankTableData,rankshipnames:rankshipnames,seasonOptions:seasonOptions});\r\n        })\r\n        .catch((error) => console.log(error));\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  buildAchievements() {\r\n    var arr = [];\r\n    var achievements = this.state.achievements.battle;\r\n    for (const [name, number] of Object.entries(this.state.achievements.battle)) {\r\n      if(achievementsDict[name]){\r\n        arr.push(\r\n          <Card raised key={name}>\r\n            <Image src={achievementsDict[name].image} size={window.innerWidth>400?window.innerWidth>1080?'medium':'medium':'small'} />\r\n            <Card.Content key=\"cardcnt\"\r\n              style={{\r\n                padding: '0.5em',\r\n              }}\r\n            >\r\n              <Card.Header >{achievementsDict[name].text}</Card.Header>\r\n              <Card.Header >{number}</Card.Header>\r\n            </Card.Content>\r\n          </Card>\r\n        )\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  buildRankSummary() {\r\n    var arr = [];\r\n    if(this.state.rankdata){\r\n      for (const [season, data] of Object.entries(this.state.rankdata)) {\r\n        if(this.state.rankdata[season].rank_solo && parseInt(season) < 100){\r\n          arr.push(\r\n            <List.Item\r\n            key={season}\r\n            style={{\r\n              margin:'2.5em',\r\n            }}\r\n            >\r\n              <List.Content>\r\n                <List.Header>{\"Season \" + season + \": \"}</List.Header>\r\n                <Statistic color={this.state.rankdata[season].rank_info.rank<=5?'red':this.state.rankdata[season].rank_info.rank<=10?'green':this.state.rankdata[season].rank_info.rank<=15?'blue':'grey'}>\r\n                  <Statistic.Value>{this.state.rankdata[season].rank_info.rank}</Statistic.Value>\r\n                  <Statistic.Label>Rank: </Statistic.Label>\r\n                </Statistic>\r\n              </List.Content>\r\n            </List.Item>\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  buildSprintRankSummary() {\r\n    var arr = [];\r\n    if(this.state.rankdata){\r\n      for (const [season, data] of Object.entries(this.state.rankdata)) {\r\n        if(this.state.rankdata[season].rank_solo && parseInt(season) >= 100){\r\n          arr.push(\r\n            <List.Item\r\n            style={{\r\n              margin:'2.5em',\r\n            }}\r\n            key = {season}\r\n            >\r\n              <List.Content>\r\n                <List.Header>{\"Sprint \" + (parseInt(season)-100).toString() + \": \"}</List.Header>\r\n                <Statistic color={this.state.rankdata[season].rank_info.rank<=1?'red':this.state.rankdata[season].rank_info.rank<=3?'green':this.state.rankdata[season].rank_info.rank<=5?'blue':'grey'}>\r\n                  <Statistic.Value>{this.state.rankdata[season].rank_info.rank}</Statistic.Value>\r\n                  <Statistic.Label>Rank: </Statistic.Label>\r\n                </Statistic>\r\n              </List.Content>\r\n            </List.Item>\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container text>\r\n          <Icon name='user circle'\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'2em':'1em',\r\n            }}\r\n          />\r\n          <Header as='h1' content={this.state.data.nickname}\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n          <Header as='h2'\r\n            style={{\r\n              fontSize: window.innerWidth>860?'1.7em':'1.2em',\r\n              fontWeight: 'normal',\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n            >\r\n            <NavLink to={{pathname: '/clan',state: {clan_id: this.state.clandata.clan_id}}}>{this.state.clansummary}</NavLink>\r\n          </Header>\r\n        </Container>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '7em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'space-evenly',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.battles.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Battles</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_xp.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max XP</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_damage_dealt.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max Damage</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_frags_battle.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max Kills</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='id card outline' />\r\n            General Performance\r\n          </Header>\r\n        </Divider>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '4em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{(division(this.state.data.statistics.pvp.wins,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses)*100).toFixed(0) + \"%\"}</Statistic.Value>\r\n            <Statistic.Label>Win Rate</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{divisionWhole(this.state.data.statistics.pvp.xp,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average XP</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{divisionWhole(this.state.data.statistics.pvp.damage_dealt,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average Damage</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{division(this.state.data.statistics.pvp.frags,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average Kills</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{division(this.state.data.statistics.pvp.frags,this.state.data.statistics.pvp.battles-this.state.data.statistics.pvp.survived_battles)}</Statistic.Value>\r\n            <Statistic.Label>K/D</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4' onClick={() => this.setState({ playerTableVisible: !this.state.playerTableVisible })}>\r\n            <Icon name='trophy' />\r\n            Achievements\r\n          </Header>\r\n        </Divider>\r\n\r\n        <Container textAlign='center'\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Card.Group itemsPerRow={window.innerWidth>400?window.innerWidth>1080?9:4:2} centered>\r\n            {this.buildAchievements()}\r\n          </Card.Group>\r\n        </Container>\r\n\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='quidditch' />\r\n            Rank Summary\r\n          </Header>\r\n        </Divider>\r\n        <div\r\n        style={{\r\n          marginLeft: 'auto',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'flex-start',\r\n        }}\r\n        >\r\n          {this.buildRankSummary()}\r\n        </div>\r\n        <div\r\n        style={{\r\n          marginTop: '2em',\r\n          marginLeft: 'auto',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'flex-start',\r\n        }}\r\n        >\r\n          {this.buildSprintRankSummary()}\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='anchor' />\r\n            Ship Category Summary\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'space-evenly',\r\n          marginTop: '2.5em',\r\n        }}\r\n        >\r\n          <PlayerShipTypeGraph data={this.state.playerShipTableData}/>\r\n          <PlayerShipNationGraph data={this.state.playerShipTableData}/>\r\n          <PlayerShipTierGraph data={this.state.playerShipTableData}/>\r\n        </Container>\r\n\r\n        <Container\r\n        style={{\r\n          margin: 'auto',\r\n          display:window.innerWidth>=1080?'block':'none',\r\n        }}\r\n        >\r\n        <Tab menu={{ secondary: true, pointing: true }} panes={\r\n          [\r\n            { menuItem: 'Type', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n                <PlayerShipTypeTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Tier', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n                <PlayerShipTierTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Nation', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n                <PlayerShipNationTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n          ]} />\r\n        </Container>\r\n\r\n        <Container\r\n        style={{\r\n          margin: 'auto',\r\n          display:window.innerWidth>=1080?'none':'block',\r\n        }}\r\n        >\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n            <PlayerShipTypeTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n            <PlayerShipTierTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n            <PlayerShipNationTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n        </Container>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='bar chart' />\r\n            Detail Performance\r\n          </Header>\r\n        </Divider>\r\n        <div\r\n        style={{\r\n          display:this.state.playerTableVisible?'block':'none',\r\n        }}\r\n        >\r\n        <Tab menu={{ secondary: true, pointing: true }} panes={\r\n          [\r\n            { menuItem: 'Random', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <PlayerShipTable account_id = {this.state.account_id} data={this.state.playerShipTableData} shipnames={this.state.shipnames}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Rank', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <PlayerRankTable account_id = {this.state.account_id} data={this.state.playerRankTableData} rankshipnames={this.state.rankshipnames} seasonOptions={this.state.seasonOptions}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n          ]} />\r\n        </div>\r\n\r\n        <div\r\n        style={{\r\n          display:this.state.playerTableVisible?'none':'block',\r\n        }}\r\n        >\r\n        <Container fluid textAlign='center'>\r\n          <PlayerShipTableMobile account_id = {this.state.account_id} data={this.state.playerShipTableData} shipnames={this.state.shipnames}/>\r\n        </Container>\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='bar chart' />\r\n            Rank Performance\r\n          </Header>\r\n        </Divider>\r\n        <Container fluid textAlign='center'>\r\n          <PlayerRankTableMobile account_id = {this.state.account_id} data={this.state.playerRankTableData} rankshipnames={this.state.rankshipnames} seasonOptions={this.state.seasonOptions}/>\r\n        </Container>\r\n        </div>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n/*\r\n<Button secondary onClick={() => this.setState({ playerTableVisible: this.state.playerTableVisible?false:true })}>\r\n\r\n</Button>*/\r\n","import React, { Component } from 'react'\r\nimport {  Message, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder,  Checkbox, Form  } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst server = \"http://localhost:4000/\"\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"TeaInTea\",\r\n      password: \"\",\r\n      loggedin: false,\r\n      wrongusername: false,\r\n      wrongpassword: false,\r\n      hide: false,\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  login(){\r\n    var password = this.state.password;\r\n    this.setState({wrongusername: false, wrongpassword: false, password: \"\"});\r\n    axios.get(server + 'api/users/?where={\"name\":\"' + this.state.username + '\"}')\r\n    .then((response)=>{\r\n        if (response.data.data.length === 0){\r\n          this.setState({wrongusername: true});\r\n        }else if (response.data.data[0].password === password){\r\n          this.setState({loggedin: true});\r\n        }else{\r\n          this.setState({wrongpassword: true});\r\n        }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Segment\r\n        style={{\r\n          width:\"300px\",\r\n          margin:\"auto\"\r\n        }}\r\n        >\r\n          <Header as=\"h1\">Login</Header>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Username</label>\r\n              <Input fluid label={{ icon: 'tag' }} labelPosition='left corner' error={this.state.wrongusername} placeholder='username' value={this.state.username} onChange={(e,{value})=>this.setState({username:value})}/>\r\n              <Message style={{display:this.state.wrongusername?\"block\":\"none\"}} error header='Username Wrong' content='Please try again.'/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.wrongpassword} placeholder='password' value={this.state.password} onChange={(e,{value})=>this.setState({password:value})}/>\r\n              <Message style={{display:this.state.wrongpassword?\"block\":\"none\"}} error header='Password Wrong' content='Please try again.'/>\r\n            </Form.Field>\r\n            <Button onClick={() => this.login()}>Login</Button>\r\n          </Form>\r\n        </Segment>\r\n        <p>Logged In: {this.state.loggedin.toString()}</p>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\nimport {  Message, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder,  Checkbox, Form  } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst server = \"http://localhost:4000/\"\r\nclass Register extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"TeaInTea\",\r\n      password: \"\",\r\n      loggedin: false,\r\n      wrongusername: false,\r\n      hide: false,\r\n    }\r\n    this.register = this.register.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  register(){\r\n    this.setState({wrongusername: false, wrongpassword: false});\r\n    axios.get(server + 'api/users/?where={\"name\":\"' + this.state.username + '\"}')\r\n    .then((response)=>{\r\n        if (response.data.data.length !== 0){\r\n            this.setState({wrongusername: true});\r\n        }else{\r\n            axios.post(server + \"api/users/\",{name:this.state.username,password:this.state.password})\r\n            .then((response)=>{\r\n                if (response.data.data[0]){\r\n                    this.setState({loggedin: true});\r\n                }\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Segment\r\n          style={{\r\n            width:\"300px\",\r\n            margin:\"auto\"\r\n          }}\r\n        >\r\n          <Header as=\"h1\">Register</Header>\r\n          <Form>\r\n            <Form.Field required>\r\n              <label>Username</label>\r\n              <Input fluid label={{ icon: 'tag' }} labelPosition='left corner' error={this.state.wrongusername} placeholder='username' value={this.state.username} onChange={(e,{value})=>this.setState({username:value})}/>\r\n              <Message style={{display:this.state.wrongusername?\"block\":\"none\"}} error header='Username Exists' content='Please try again.'/>\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label>Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.wrongpassword} placeholder='password' value={this.state.password} onChange={(e,{value})=>this.setState({password:value})}/>\r\n            </Form.Field>\r\n            <Button onClick={() => this.register()}>Register</Button>\r\n          </Form>\r\n        </Segment>\r\n        <p>Logged In: {this.state.loggedin.toString()}</p>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport PlayerIndex from './PlayerIndex.js';\r\nimport Login from '../../User/Login.js'\r\nimport Register from '../../User/Register.js'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\n\r\nconst resultRenderer = ({title, account_id}) => <Header as='h4' key={account_id}><Icon name='user circle'/><Header.Content>{title}</Header.Content></Header>\r\nresultRenderer.propTypes = {\r\n  nickname: PropTypes.string,\r\n  account_id: PropTypes.string,\r\n}\r\n\r\nconst trigger = (\r\n  <span>\r\n    <Icon name='user' /> Hello, xxx\r\n  </span>\r\n)\r\n\r\nclass PlayerHeader extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id: '',\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      showLogin: false,\r\n      Register: false,\r\n    };\r\n    this.resetComponent = this.resetComponent.bind(this);\r\n    this.handleResultSelect = this.handleResultSelect.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.LoginClick = this.LoginClick.bind(this);\r\n    this.RegisterClick = this.RegisterClick.bind(this);\r\n    this.LogoutClick = this.LogoutClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    this.resetComponent();\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  resetComponent(){\r\n    this.setState({ isLoading: false, results: [], value: '' });\r\n  }\r\n\r\n  handleResultSelect(e, { result }){\r\n    this.setState({ account_id: result.account_id, value: result.nickname });\r\n    if(result && result.account_id){\r\n      this.props.set_account_id(result.account_id);\r\n    }\r\n  }\r\n\r\n  handleSearchChange(e, { value }){\r\n    this.setState({value: value })\r\n    if(value.length > 3) {\r\n      this.setState({isLoading: true})\r\n      axios.get(\"https://api.worldofwarships.com/wows/account/list/?application_id=\" + application_id + \"&search=\" + value)\r\n      .then((response)=>{\r\n          var results = [];\r\n          response.data.data.forEach((row)=>{\r\n            results.push({title:row.nickname,account_id:row.account_id});\r\n          })\r\n          this.setState({isLoading: false, results:results})\r\n      })\r\n      .catch((error) => console.log(error));\r\n    }\r\n  }\r\n\r\n  LoginClick(){\r\n    this.setState({showLogin: true});\r\n  }\r\n  RegisterClick(){\r\n    this.setState({showRegister: true});\r\n  }\r\n  LogoutClick(){\r\n    alert(\"Loggedt out!\")\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <Menu inverted stackable size='large'>\r\n        <Container fluid>\r\n          <Menu.Item as='a' inverted href='/'><Icon name='home'/>Home</Menu.Item>\r\n          <Menu.Item as='a' inverted href='/#/ship'><Icon name='anchor'/>Ship</Menu.Item>\r\n          <Menu.Item as='a' inverted active href='/#/player'><Icon name='user'/>Player</Menu.Item>\r\n          <Menu.Item as='a' inverted href='/#/clan'><Icon name='group'/>Clan</Menu.Item>\r\n          <Menu.Item position='right'>\r\n            <Search\r\n              selectFirstResult\r\n              minCharacters = {4}\r\n              fluid\r\n              loading={this.state.isLoading}\r\n              onResultSelect={this.handleResultSelect}\r\n              onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                leading: true,\r\n              })}\r\n              results={this.state.results}\r\n              value={this.state.value}\r\n              resultRenderer={resultRenderer}\r\n              />\r\n          </Menu.Item>\r\n          <Menu.Item >\r\n          <Dropdown trigger={trigger} options={\r\n            [{\r\n                key: 'user',\r\n                text: (\r\n                  <span>\r\n                    Signed in as <strong>xxx</strong>\r\n                  </span>\r\n                ),\r\n                disabled: true,\r\n              },\r\n              { key: 'sign-in', text: 'Sign In' , icon:'sign in', onClick:()=>{this.LoginClick()} },\r\n              { key: 'register', text: 'Register', icon:'pencil alternate', onClick:()=>{this.RegisterClick()} },\r\n              { key: 'sign-out', text: 'Sign Out', icon:'log out', onClick:()=>{this.LogoutClick()} },\r\n            ]\r\n          } />\r\n          </Menu.Item>\r\n        </Container>\r\n      </Menu>\r\n      <Modal closeIcon  open={this.state.showLogin} onClose={()=>this.setState({showLogin:false})}><Modal.Content><Login/></Modal.Content></Modal>\r\n      <Modal closeIcon  open={this.state.showRegister} onClose={()=>this.setState({showRegister:false})}><Modal.Content><Register/></Modal.Content></Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Player extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id: '',\r\n    };\r\n    this.set_account_id = this.set_account_id.bind(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.account_id !== nextState.account_id) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  set_account_id(id){\r\n    this.setState({account_id:id});\r\n  }\r\n  render(){\r\n    if(this.state.account_id && this.state.account_id !== ''){\r\n      return(\r\n        <Container fluid>\r\n          <PlayerHeader set_account_id={this.set_account_id}/>\r\n          <PlayerIndex account_id={this.state.account_id}/>\r\n        </Container>\r\n      )\r\n    }else if(this.props.location && this.props.location.state && this.props.location.state.account_id){\r\n      return(\r\n        <Container fluid>\r\n          <PlayerHeader set_account_id={this.set_account_id}/>\r\n          <PlayerIndex account_id={this.props.location.state.account_id}/>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container fluid>\r\n          <PlayerHeader set_account_id={this.set_account_id}/>\r\n          <Placeholder fluid>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Player);\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail } from 'semantic-ui-react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\n\r\nfunction division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nfunction divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nfunction time(input) {\r\n    var date = new Date(parseInt(input.toString()+\"000\"));\r\n    return (date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + (date.getDate()))\r\n}\r\n\r\nexport default class ClanIndex extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clan_id: '',\r\n      playerlist: [],\r\n      data: {\"members_count\":0,\"name\":\"\",\"creator_name\":\"\",\"clan_id\":1000043952,\"created_at\":1484747968,\"updated_at\":1555905684,\"leader_name\":\"\",\"members_ids\":[],\"creator_id\":0,\"tag\":\"\",\"old_name\":null,\"is_clan_disbanded\":false,\"renamed_at\":null,\"old_tag\":null,\"leader_id\":0,\"description\":\"\"},\r\n    }\r\n    this.reloadData = this.reloadData.bind(this);\r\n    this.buildMembers = this.buildMembers.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({clan_id:nextProps.clan_id});\r\n    this.reloadData(nextProps.clan_id);\r\n  }\r\n  componentDidMount(){\r\n    this.reloadData(this.props.clan_id);\r\n  }\r\n  reloadData(clan_id){\r\n    axios.get(\"https://api.worldofwarships.com/wows/clans/info/?application_id=\" + application_id + \"&clan_id=\" + clan_id)\r\n    .then((response)=>{\r\n        this.setState({data: response.data.data[clan_id]});\r\n        var playerlist = [];\r\n        var slice = 23;\r\n        for(var i = 0; i < response.data.data[clan_id].members_ids.length/slice; i++){\r\n          var account_id_strings = \"\";\r\n          if (i * slice + slice < response.data.data[clan_id].members_ids.length){\r\n            var limit = i * slice + slice;\r\n          }else{\r\n            var limit = response.data.data[clan_id].members_ids.length;\r\n          }\r\n          for(var j = i * slice; j < limit; j++){\r\n            account_id_strings += response.data.data[clan_id].members_ids[j] + \",\";\r\n          }\r\n          axios.get(\"https://api.worldofwarships.com/wows/account/info/?application_id=\" + application_id,{params:{account_id:account_id_strings.substring(0,account_id_strings.length-1)}})\r\n          .then((playerresponse)=>{\r\n            for (const [account_id, playerres] of Object.entries(playerresponse.data.data)) {\r\n              if(playerres){\r\n                playerlist.push(playerres);\r\n                this.setState({playerlist: playerlist});\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.log(error));\r\n        }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n  buildMembers(){\r\n    var arr = [];\r\n    this.state.playerlist.forEach((row)=>{\r\n        if(row.statistics){\r\n          arr.push(\r\n            (\r\n              <div key={row.nickname}>\r\n                <div\r\n                  style={{\r\n                    display:\"flex\",\r\n                    flexWrap: 'wrap',\r\n                    justifyContent : 'space-between',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'row',\r\n                  }}\r\n                >\r\n                  <div style={{margin: '1.5em'}}>\r\n                    <Icon name='user circle' size='large'/>\r\n                    <NavLink to={{pathname: '/player',state: {account_id: row.account_id}}}>{row.nickname}</NavLink>\r\n                  </div>\r\n                  <div style={{margin: '1.5em'}}\r\n                    style={{\r\n                      display:\"flex\",\r\n                      flexWrap: 'wrap',\r\n                      justifyContent : 'space-between',\r\n                      alignItems: 'flex-start',\r\n                      flexDirection: 'row',\r\n                    }}\r\n                  >\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{(division(row.statistics.pvp.wins,row.statistics.pvp.wins+row.statistics.pvp.draws+row.statistics.pvp.losses)*100).toFixed(0) + \"%\"}</Statistic.Value>\r\n                      <Statistic.Label>Win Rate</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{division(row.statistics.pvp.frags,row.statistics.pvp.battles-row.statistics.pvp.survived_battles)}</Statistic.Value>\r\n                      <Statistic.Label>K/D</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{divisionWhole(row.statistics.pvp.damage_dealt,row.statistics.pvp.wins+row.statistics.pvp.draws+row.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n                      <Statistic.Label>Average Damage</Statistic.Label>\r\n                    </Statistic>\r\n                  </div>\r\n                </div>\r\n                <Divider/>\r\n              </div>\r\n            )\r\n          )\r\n        }else{\r\n          arr.push(\r\n            (\r\n              <div key={row.nickname}>\r\n                <div\r\n                  style={{\r\n                    display:\"flex\",\r\n                    flexWrap: 'wrap',\r\n                    justifyContent : 'space-between',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'row',\r\n                  }}\r\n                >\r\n                  <div style={{margin: '1.5em'}}>\r\n                    <Icon name='user circle' size='large'/>\r\n                    <NavLink to={{pathname: '/player',state: {account_id: row.account_id}}}>{row.nickname}</NavLink>\r\n                  </div>\r\n                  <div style={{margin: '1.5em'}}\r\n                    style={{\r\n                      display:\"flex\",\r\n                      flexWrap: 'wrap',\r\n                      justifyContent : 'space-between',\r\n                      alignItems: 'flex-start',\r\n                      flexDirection: 'row',\r\n                    }}\r\n                  >\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>Win Rate</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>K/D</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>Average Damage</Statistic.Label>\r\n                    </Statistic>\r\n                  </div>\r\n                </div>\r\n                <Divider/>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n\r\n    })\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container text>\r\n          <Icon name='group'\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'2em':'1em',\r\n            }}\r\n          />\r\n          <Header as='h1' content={this.state.data.name}\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n          <Header as='h2' content={this.state.data.tag}\r\n            style={{\r\n              fontSize: window.innerWidth>860?'1.7em':'1.2em',\r\n              fontWeight: 'normal',\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n        </Container>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '7em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'space-evenly',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.members_count.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Members</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{time(this.state.data.created_at)}</Statistic.Value>\r\n            <Statistic.Label>Since</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4' onClick={() => this.setState({ playerTableVisible: !this.state.playerTableVisible })}>\r\n            <Icon name='align justify' />\r\n            Description\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n          style={{\r\n              marginTop: '5em',\r\n            }}\r\n        >\r\n          <Header as=\"h6\">{this.state.data.description}</Header>\r\n        </Container>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4' onClick={() => this.setState({ playerTableVisible: !this.state.playerTableVisible })}>\r\n            <Icon name='user' />\r\n            Members\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n        style={{\r\n            marginTop: '2.5em',\r\n            marginBottom: '2.5em',\r\n          }}\r\n        >\r\n          <Container>\r\n            {this.buildMembers()}\r\n          </Container>\r\n        </Container>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport ClanIndex from './ClanIndex.js';\r\nimport Login from '../../User/Login.js'\r\nimport Register from '../../User/Register.js'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\n\r\nconst resultRenderer = ({title, clan_id, tag}) => <Header as='h4' key={clan_id}><Icon name='group'/><Header.Content>{'[' + tag + ']' + title}</Header.Content></Header>\r\nresultRenderer.propTypes = {\r\n  name: PropTypes.string,\r\n  clan_id: PropTypes.string,\r\n  tag: PropTypes.string,\r\n}\r\n\r\nconst trigger = (\r\n  <span>\r\n    <Icon name='user' /> Hello, xxx\r\n  </span>\r\n)\r\n\r\nclass ClanHeader extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clan_id: '',\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      showLogin: false,\r\n      Register: false,\r\n    };\r\n    this.resetComponent = this.resetComponent.bind(this);\r\n    this.handleResultSelect = this.handleResultSelect.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.LoginClick = this.LoginClick.bind(this);\r\n    this.RegisterClick = this.RegisterClick.bind(this);\r\n    this.LogoutClick = this.LogoutClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    this.resetComponent();\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  resetComponent(){\r\n    this.setState({ isLoading: false, results: [], value: '' });\r\n  }\r\n\r\n  handleResultSelect(e, { result }){\r\n    this.setState({ clan_id: result.clan_id, value: result.name });\r\n    if(result && result.clan_id){\r\n      this.props.set_clan_id(result.clan_id);\r\n    }\r\n  }\r\n\r\n  handleSearchChange(e, { value }){\r\n    this.setState({value: value })\r\n    if(value.length > 1) {\r\n      this.setState({isLoading: true})\r\n      axios.get(\"https://api.worldofwarships.com/wows/clans/list/?application_id=\" + application_id + \"&search=\" + value)\r\n      .then((response)=>{\r\n          var results = [];\r\n          response.data.data.forEach((row)=>{\r\n            results.push({title:row.name,clan_id:row.clan_id,tag:row.tag});\r\n          })\r\n          this.setState({isLoading: false, results:results})\r\n      })\r\n      .catch((error) => console.log(error));\r\n    }\r\n  }\r\n\r\n  LoginClick(){\r\n    this.setState({showLogin: true});\r\n  }\r\n  RegisterClick(){\r\n    this.setState({showRegister: true});\r\n  }\r\n  LogoutClick(){\r\n    alert(\"Loggedt out!\")\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n      <Menu inverted stackable size='large'>\r\n        <Container fluid>\r\n          <Menu.Item as='a' inverted href='/'><Icon name='home'/>Home</Menu.Item>\r\n          <Menu.Item as='a' inverted href='/#/ship'><Icon name='anchor'/>Ship</Menu.Item>\r\n          <Menu.Item as='a' inverted href='/#/player'><Icon name='user'/>Player</Menu.Item>\r\n          <Menu.Item as='a' inverted active href='/#/clan'><Icon name='group'/>Clan</Menu.Item>\r\n          <Menu.Item position='right'>\r\n            <Search\r\n              selectFirstResult\r\n              minCharacters = {4}\r\n              fluid\r\n              loading={this.state.isLoading}\r\n              onResultSelect={this.handleResultSelect}\r\n              onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                leading: true,\r\n              })}\r\n              results={this.state.results}\r\n              value={this.state.value}\r\n              resultRenderer={resultRenderer}\r\n              />\r\n          </Menu.Item>\r\n          <Menu.Item >\r\n          <Dropdown trigger={trigger} options={\r\n            [{\r\n                key: 'user',\r\n                text: (\r\n                  <span>\r\n                    Signed in as <strong>xxx</strong>\r\n                  </span>\r\n                ),\r\n                disabled: true,\r\n              },\r\n              { key: 'sign-in', text: 'Sign In' , icon:'sign in', onClick:()=>{this.LoginClick()} },\r\n              { key: 'register', text: 'Register', icon:'pencil alternate', onClick:()=>{this.RegisterClick()} },\r\n              { key: 'sign-out', text: 'Sign Out', icon:'log out', onClick:()=>{this.LogoutClick()} },\r\n            ]\r\n          } />\r\n          </Menu.Item>\r\n        </Container>\r\n      </Menu>\r\n      <Modal closeIcon  open={this.state.showLogin} onClose={()=>this.setState({showLogin:false})}><Modal.Content><Login/></Modal.Content></Modal>\r\n      <Modal closeIcon  open={this.state.showRegister} onClose={()=>this.setState({showRegister:false})}><Modal.Content><Register/></Modal.Content></Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Clan extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clan_id: '',\r\n    };\r\n    this.set_clan_id = this.set_clan_id.bind(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.clan_id !== nextState.clan_id) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  set_clan_id(id){\r\n    this.setState({clan_id:id});\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.clan_id && this.state.clan_id !== ''){\r\n      return(\r\n        <Container fluid>\r\n          <ClanHeader set_clan_id={this.set_clan_id}/>\r\n          <ClanIndex clan_id={this.state.clan_id}/>\r\n        </Container>\r\n      )\r\n    }else if(this.props.location && this.props.location.state && this.props.location.state.clan_id){\r\n      return(\r\n        <Container fluid>\r\n          <ClanHeader set_clan_id={this.set_clan_id}/>\r\n          <ClanIndex clan_id={this.props.location.state.clan_id}/>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container fluid>\r\n          <ClanHeader set_clan_id={this.set_clan_id}/>\r\n          <Placeholder fluid>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Clan);\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail } from 'semantic-ui-react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\n\r\nexport default class ShipIndex extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            ship_id: '',\r\n            icon_url: '',\r\n            data: undefined,\r\n            }\r\n        this.reloadData = this.reloadData.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ship_id :nextProps.ship_id});\r\n        this.reloadData(nextProps.ship_id);\r\n    }\r\n    componentDidMount(){\r\n        this.reloadData(this.props.ship_id);\r\n    }\r\n\r\n    async reloadData(ship_id){\r\n        console.log(ship_id)\r\n        await axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/ships/?application_id=\" + application_id + \"&language=en\" + \"&ship_id=\" + ship_id)\r\n            .then((response)=>{\r\n                let key = Object.keys(response.data.data)\r\n                this.setState({data: response.data.data[key[0]]})\r\n                console.log(response.data.data[key[0]])\r\n            })\r\n\r\n        axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/info/?application_id=\" + application_id + \"&language=en\" + \"&fields=ship_type_images\")\r\n            .then((response)=>{\r\n                let icons = response.data.data.ship_type_images;\r\n                let icon = this.state.data.is_premium ? icons[this.state.data.type].image_premium : icons[this.state.data.type].image\r\n                this.setState({icon_url: icon})\r\n                console.log(icons)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data != undefined ){\r\n            return (\r\n                <Container fluid>\r\n                    <Container text>\r\n                        <Image src={this.state.data.images.large}  />\r\n                        <Header as='h1' content={this.state.data.name}\r\n                                style={{\r\n                                    fontSize: window.innerWidth>860?'4em':'3em',\r\n                                    fontWeight: 'normal',\r\n                                    marginBottom: 0,\r\n                                    marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n                                }}\r\n                        />\r\n                        <div>\r\n                            <Image avatar src={this.state.icon_url}  />\r\n                            <Header as='span' content={\"Tier \"+this.state.data.tier+\" \"+this.state.data.nation+\" \"+this.state.data.type}\r\n                                    style={{\r\n                                        fontSize: window.innerWidth>860?'1.7em':'1.2em',\r\n                                        fontWeight: 'normal',\r\n                                        marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n                                    }}\r\n                            />\r\n                        </div>\r\n                    </Container>\r\n\r\n                    <Divider horizontal\r\n                             style={{\r\n                                 marginTop: '5em',\r\n                             }}\r\n                    >\r\n                        <Header as='h4'>\r\n                            <Icon name='align justify' />\r\n                            Description\r\n                        </Header>\r\n                    </Divider>\r\n                    <Container\r\n                        style={{\r\n                            marginTop: '5em',\r\n                        }}\r\n                    >\r\n                        <Header as=\"h6\">{this.state.data.description}</Header>\r\n                    </Container>\r\n                </Container>\r\n            );\r\n        }\r\n        else return (\r\n            <Container fluid>\r\n                <br/>\r\n                <Loader active inline='centered' />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport ShipIndex from './ShipIndex.js';\r\nimport Login from '../../User/Login.js'\r\nimport Register from '../../User/Register.js'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\n\r\nconst resultRenderer = ({title, ship_id, tag}) => <Header as='h4' key={ship_id}><Icon name='group'/><Header.Content>{'[' + tag + ']' + title}</Header.Content></Header>\r\nresultRenderer.propTypes = {\r\n  name: PropTypes.string,\r\n  ship_id: PropTypes.string,\r\n  tag: PropTypes.string,\r\n}\r\n\r\nconst trigger = (\r\n    <span>\r\n    <Icon name='user' /> Hello, xxx\r\n  </span>\r\n)\r\n\r\nclass ShipHeader extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      shipList: [],\r\n      ship_id: '',\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      showLogin: false,\r\n      Register: false,\r\n    };\r\n    this.resetComponent = this.resetComponent.bind(this);\r\n    this.handleResultSelect = this.handleResultSelect.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.LoginClick = this.LoginClick.bind(this);\r\n    this.RegisterClick = this.RegisterClick.bind(this);\r\n    this.LogoutClick = this.LogoutClick.bind(this);\r\n    this.getShipList = this.getShipList.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.scrollTo(0, 0);\r\n    this.resetComponent();\r\n  }\r\n  componentWillUnmount(){\r\n    window.scrollTo(0, 0);\r\n  }\r\n  resetComponent(){\r\n    this.setState({ isLoading: false, results: [], value: '' });\r\n  }\r\n\r\n  handleResultSelect(e, { result }){\r\n    this.setState({ ship_id: result.title, value: result.title});\r\n    this.props.set_ship_id(result.ship_id)\r\n  }\r\n\r\n  handleSearchChange(e, { value }){\r\n    this.setState({value: value })\r\n    if(value.length > 1) {\r\n      this.setState({isLoading: true})\r\n      var results = [];\r\n      let filtered = this.state.shipList.filter(ship => ship.name.toLowerCase().includes(value.toLowerCase()))\r\n      //console.log(filtered)\r\n      filtered.forEach((ship)=>{\r\n        results.push({title:ship.name, image:ship.images.small, description:\"Tier \"+ship.tier+\" \"+ship.nation+\" \"+ship.type, ship_id: ship.ship_id});\r\n      })\r\n      this.setState({isLoading: false, results:results})\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getShipList();\r\n  }\r\n\r\n  /*\r\n   * Load basic info of all the ships by nations from api\r\n   */\r\n  getShipList() {\r\n    this.setState({isLoading: true})\r\n    axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/info/?application_id=\" + application_id + \"&language=en\" + \"&fields=ship_nations\")\r\n        .then((response)=>{\r\n          var results = [];\r\n          let ship_nations = Object.keys(response.data.data.ship_nations);\r\n          let ship_promise = ship_nations.map(nation => new Promise(function (resolve, reject) {\r\n            axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/ships/?application_id=\" + application_id + \"&language=en\" + \"&nation=\" + nation + \"&fields=name,images.small,nation,tier,type,ship_id\")\r\n                .then((response)=>{\r\n                  resolve(response.data.data)\r\n                })\r\n                .catch((error) => reject(error));\r\n          }));\r\n          Promise.all(ship_promise).then(values => {\r\n            let shipList = {}\r\n            values.forEach( curr => {\r\n              if (curr == undefined){\r\n                return;\r\n              }\r\n              shipList = Object.assign(shipList,curr)\r\n            })\r\n            let keys = Object.keys(shipList);\r\n            let vals = keys.map(key => shipList[key])\r\n            this.setState({shipList:vals})\r\n            this.setState({isLoading: false})\r\n            //console.log(vals)\r\n          })\r\n        })\r\n\r\n  }\r\n\r\n  LoginClick(){\r\n    this.setState({showLogin: true});\r\n  }\r\n  RegisterClick(){\r\n    this.setState({showRegister: true});\r\n  }\r\n  LogoutClick(){\r\n    alert(\"Loggedt out!\")\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n          <Menu inverted stackable size='large'>\r\n            <Container fluid>\r\n              <Menu.Item as='a' inverted href='/'><Icon name='home'/>Home</Menu.Item>\r\n              <Menu.Item as='a' inverted active href='/#/ship'><Icon name='anchor'/>Ship</Menu.Item>\r\n              <Menu.Item as='a' inverted href='/#/player'><Icon name='user'/>Player</Menu.Item>\r\n              <Menu.Item as='a' inverted href='/#/ship'><Icon name='group'/>Clan</Menu.Item>\r\n              <Menu.Item position='right'>\r\n                <Search\r\n                    selectFirstResult\r\n                    minCharacters = {3}\r\n                    fluid\r\n                    loading={this.state.isLoading}\r\n                    onResultSelect={this.handleResultSelect}\r\n                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                      leading: true,\r\n                    })}\r\n                    results={this.state.results}\r\n                    value={this.state.value}\r\n                />\r\n              </Menu.Item>\r\n              <Menu.Item >\r\n                <Dropdown trigger={trigger} options={\r\n                  [{\r\n                    key: 'user',\r\n                    text: (\r\n                        <span>\r\n                    Signed in as <strong>xxx</strong>\r\n                  </span>\r\n                    ),\r\n                    disabled: true,\r\n                  },\r\n                    { key: 'sign-in', text: 'Sign In' , icon:'sign in', onClick:()=>{this.LoginClick()} },\r\n                    { key: 'register', text: 'Register', icon:'pencil alternate', onClick:()=>{this.RegisterClick()} },\r\n                    { key: 'sign-out', text: 'Sign Out', icon:'log out', onClick:()=>{this.LogoutClick()} },\r\n                  ]\r\n                } />\r\n              </Menu.Item>\r\n            </Container>\r\n          </Menu>\r\n          <Modal closeIcon  open={this.state.showLogin} onClose={()=>this.setState({showLogin:false})}><Modal.Content><Login/></Modal.Content></Modal>\r\n          <Modal closeIcon  open={this.state.showRegister} onClose={()=>this.setState({showRegister:false})}><Modal.Content><Register/></Modal.Content></Modal>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Ship extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      ship_id: '',\r\n    };\r\n    this.set_ship_id = this.set_ship_id.bind(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.ship_id !== nextState.ship_id) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  set_ship_id(id){\r\n    this.setState({ship_id: id});\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.ship_id && this.state.ship_id !== ''){\r\n      return(\r\n          <Container fluid>\r\n            <ShipHeader set_ship_id={this.set_ship_id}/>\r\n            <ShipIndex ship_id={this.state.ship_id}/>\r\n          </Container>\r\n      )\r\n    }else if(this.props.location && this.props.location.state && this.props.location.state.ship_id){\r\n      return(\r\n          <Container fluid>\r\n            <ShipHeader set_ship_id={this.set_ship_id}/>\r\n            <ShipIndex ship_id={this.props.location.state.ship_id}/>\r\n          </Container>\r\n      )\r\n    }else{\r\n      return(\r\n          <Container fluid>\r\n            <ShipHeader set_ship_id={this.set_ship_id}/>\r\n            <Placeholder fluid>\r\n              <Placeholder.Header>\r\n                <Placeholder.Line length='full' />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line length='full' />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Ship);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport IndexPage from './IndexPage/IndexPage'\r\nimport Player from './Player/PlayerIndex/PlayerHeader.js'\r\nimport Clan from './Clan/ClanIndex/ClanHeader'\r\nimport Login from './User/Login.js'\r\nimport Register from './User/Register.js'\r\nimport Ship from './Ship/ShipIndex/ShipHeader'\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Router>\r\n              <div>\r\n                  <Route path={\"/\"} exact component={IndexPage} />\r\n                  <Route path={\"/player\"} exact\r\n                         component={() => <Player/>}  />\r\n                  <Route path={\"/clan\"} exact\r\n                          component={() => <Clan/>}  />\r\n                  <Route path={\"/Ship\"} exact\r\n                         component={() => <Ship/>}  />\r\n                  <Route path={\"/login\"} exact\r\n                         component={() => <Login/>}  />\r\n                  <Route path={\"/register\"} exact\r\n                        component={() => <Register/>}  />\r\n              </div>\r\n          </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}