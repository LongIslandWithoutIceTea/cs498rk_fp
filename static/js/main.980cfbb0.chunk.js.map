{"version":3,"sources":["assets/wows-icon.png","IndexPage/IndexPage.js","Common/utlity.js","Player/PlayerTable/PlayerWeaponTable.js","Player/PlayerTable/PlayerShipTable.js","Player/PlayerTable/PlayerShipTablePad.js","Player/PlayerTable/PlayerShipTableMobile.js","Player/PlayerTable/PlayerRankTable.js","Player/PlayerTable/PlayerRankTableMobile.js","Player/PlayerTable/PlayerRankTablePad.js","Player/PlayerTable/PlayerShipTypeTable.js","Player/PlayerTable/PlayerShipTierTable.js","Player/PlayerTable/PlayerShipNationTable.js","Player/PlayerTable/PlayerShipTypeTableMobile.js","Player/PlayerTable/PlayerShipTierTableMobile.js","Player/PlayerTable/PlayerShipNationTableMobile.js","Player/PlayerGraph/PlayerShipTypeGraph.js","Player/PlayerGraph/PlayerShipNationGraph.js","Player/PlayerGraph/PlayerShipTierGraph.js","Common/ToTopButton.js","Player/PlayerIndex/PlayerIndex.js","Common/cookie.js","User/Login.js","User/Register.js","Common/HeaderMenu.js","Player/PlayerIndex/PlayerHeader.js","Clan/ClanIndex/ClanIndex.js","Clan/ClanIndex/ClanHeader.js","Ship/DiscussionThread/Discussion.js","Ship/ShipIndex/ShipIndex.js","Ship/ShipIndex/ShipHeader.js","User/ChangePassword.js","User/UserIndex.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","IndexPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","version","_this2","document","title","axios","get","then","response","setState","data","game_version","react_default","a","createElement","Segment","inverted","textAlign","vertical","Header","className","as","Image","avatar","src","logo","size","verticalAlign","Container","text","Divider","react_router_dom","to","Button","primary","Icon","name","Component","application_id","server","division","b","Math","round","divisionWhole","romanize","num","i","lookup","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","roman","PlayerWeaponTable","Table","celled","structured","striped","collapsing","unstackable","Row","key","HeaderCell","colSpan","Body","selectedShipData","ship_id","Cell","main_battery_max_frags_battle","main_battery_frags","main_battery_hit_rate","torpedoes_max_frags_battle","torpedoes_frags","torpedoes_hit_rate","second_battery_max_frags_battle","second_battery_frags","second_battery_hit_rate","aircraft_max_frags_battle","aircraft_frags","ramming_max_frags_battle","ramming_frags","nationOptions","value","image","nationDict","usa","ussr","uk","japan","france","germany","poland","pan_asia","italy","commonwealth","pan_america","typeOptions","typeDict","Destroyer","Cruiser","Battleship","AirCarrier","tierOptions","tierDict","1","2","3","4","5","6","7","8","9","10","PlayerShipTableBody","build","bind","assertThisInitialized","page","selectedName","selectedNation","selectedType","selectedTier","rows","length","row","push","id","toString","onClick","e","handleselectedShipID","currentTarget","selectable","style","color","pathname","alt","height","nation","type","tier","wins","battles","win_rate","survival_rate","max_xp","max_frags_battle","max_damage_dealt","max_planes_killed","ave_xp","ave_frags","ave_damage_dealt","ave_planes_killed","PlayerShipTable","_this3","column","shipData","selectedData","direction","ship_ids","shipnames","showModal","handleSort","setPage","nextPage","prevPage","handleFilter","handleFilterRaw","selected","clickedColumn","_this4","forEach","_","sortBy","reverse","_this5","selectedShipID","_this6","parseInt","substring","_ref","pages","totalpage","Menu","Item","active","abs","_this7","sortable","sorted","rowSpan","width","Dropdown","fluid","clearable","placeholder","search","selection","options","onChange","_ref2","_ref3","_ref4","_ref5","PlayerShipTable_PlayerShipTableBody","Footer","floated","pagination","icon","ceil","Modal","open","onClose","closeIcon","Content","PlayerWeaponTable_PlayerWeaponTable","PlayerShipTablePadBody","PlayerShipTablePad","PlayerShipTablePad_PlayerShipTablePadBody","PlayerShipTableMobileBody","PlayerShipTableMobile","PlayerShipTableMobile_PlayerShipTableMobileBody","season","PlayerRankTable","account_id","seasonOptions","selectedSeason","rankshipnames","sort","input","str","loc","charAt","_this8","_ref6","PlayerRankTable_PlayerShipTableBody","PlayerRankTableMobile","PlayerRankTableMobile_PlayerShipTableBody","PlayerRankTablePad","PlayerRankTablePad_PlayerShipTableBody","PlayerShipTypeTable","destroyer","count","cruiser","battleship","carrier","buildrows","PlayerShipTierTable","arr","PlayerShipNationTable","_i","_Object$entries","entries","slicedToArray","dat","PlayerShipTypeTableMobile","PlayerShipNationTableMobile","PlayerShipTypeGraph","values","Battles","label","margin","rel","href","es","innerRadius","radius","getAngle","d","padAngle","onValueMouseOver","v","onSeriesMouseOut","Statistic","horizontal","Value","toLocaleString","Label","PlayerShipNationGraph","PlayerShipTierGraph","ToTopButton","intervalId","window","pageYOffset","clearInterval","scroll","scrollStepInPx","setInterval","scrollStep","delayInMs","circular","position","bottom","right","scrollToTop","React","achievementsDict","DOUBLE_KILL","MAIN_CALIBER","LIQUIDATOR","WITHERING","FIREPROOF","ARSONIST","DETONATED","INSTANT_KILL","UNSINKABLE","CLEAR_SKY","DREADNOUGHT","FIRST_BLOOD","HEADBUTT","ONE_SOLDIER_IN_THE_FIELD","WARRIOR","SUPPORT","ATBA_CALIBER","RETRIBUTION","PlayerIndex","windowwidth","innerWidth","playerShipTableData","playerRankTableData","shipdetails","last_battle_time","leveling_tier","created_at","leveling_points","updated_at","private","hidden_profile","logout_at","karma","statistics","distance","pvp","damage_to_buildings","main_battery","frags","hits","max_frags_ship_id","shots","max_ships_spotted_ship_id","max_damage_scouting","art_agro","max_xp_ship_id","ships_spotted","second_battery","xp","survived_battles","dropped_capture_points","max_damage_dealt_to_buildings","torpedo_agro","draws","control_captured_points","battles_since_510","max_total_agro_ship_id","planes_killed","max_ships_spotted","max_suppressions_ship_id","survived_wins","damage_scouting","max_total_agro","capture_points","ramming","suppressions_count","max_suppressions_count","torpedoes","max_planes_killed_ship_id","aircraft","team_capture_points","control_dropped_points","max_damage_dealt_to_buildings_ship_id","max_damage_dealt_ship_id","losses","damage_dealt","max_scouting_damage_ship_id","team_dropped_capture_points","battles_since_512","nickname","stats_updated_at","clandata","0","members_count","creator_name","clan_id","leader_name","members_ids","creator_id","tag","old_name","is_clan_disbanded","renamed_at","old_tag","leader_id","description","achievements","battle","","clansummary","rankdata","buildAchievements","buildRankSummary","buildSprintRankSummary","reloadData","updateDimensions","nextProps","addEventListener","catch","error","console","log","seasons","statdata","ship","ship_id_strings","limit","j","params","shipresponse","shipres","images","small","torpedoes_max_frags_battl","rankstatdata","rankship_ids","Set","_i2","_Object$entries2","rank_solo","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_i3","_Object$entries3","_ref9","_ref8","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEventListener","_i4","_Object$entries4","_ref12","_ref11","number","Card","raised","padding","_i5","_Object$entries5","_ref15","_ref14","List","rank_info","rank","_i6","_Object$entries6","_ref18","_ref17","fontSize","fontWeight","marginBottom","marginTop","content","marginLeft","display","flexWrap","justifyContent","alignItems","toFixed","Group","itemsPerRow","centered","PlayerShipTypeGraph_PlayerShipTypeGraph","PlayerShipNationGraph_PlayerShipNationGraph","PlayerShipTierGraph_PlayerShipTierGraph","Tab","menu","secondary","pointing","panes","menuItem","render","Pane","attached","PlayerShipTypeTable_PlayerShipTypeTable","PlayerShipTierTable_PlayerShipTierTable","PlayerShipNationTable_PlayerShipNationTable","PlayerShipTypeTableMobile_PlayerShipTypeTableMobile","PlayerShipTierTableMobile_PlayerShipTierTable","PlayerShipNationTableMobile_PlayerShipNationTableMobile","PlayerShipTable_PlayerShipTable","PlayerRankTable_PlayerRankTable","PlayerShipTablePad_PlayerShipTablePad","PlayerRankTablePad_PlayerRankTablePad","PlayerShipTableMobile_PlayerShipTableMobile","PlayerRankTableMobile_PlayerRankTableMobile","ToTopButton_ToTopButton","setCookie","cname","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","ca","decodeURIComponent","split","c","indexOf","Login","username","password","loggedin","loginfail","hide","login","post","success","loginCallBack","Form","Field","Input","labelPosition","iconPosition","link","Message","header","Register","registerfail","register","registerCallBack","required","wrongpassword","resultRendererPlayer","resultRendererShip","Subheader","resultRendererClan","HeaderMenu","shipList","mode","isLoading","results","showLogin","greeting","cookieModalOpen","resetComponent","handleResultSelect","handleSearchChange","LoginClick","RegisterClick","LogoutClick","getShipList","scrollTo","result","set_ship_id","set_account_id","set_clan_id","filter","toLowerCase","includes","ship_promise","keys","ship_nations","map","Promise","resolve","reject","all","curr","assign","vals","showRegister","location","reload","stackable","Search","selectFirstResult","minCharacters","loading","onResultSelect","onSearchChange","debounce","leading","resultRenderer","trigger","disabled","history","User_Login","User_Register","basic","Actions","withRouter","Player","Common_HeaderMenu","PlayerIndex_PlayerIndex","Placeholder","Line","Paragraph","ClanIndex","playerlist","playerclanlist","clans_roles","executive_officer","recruitment_officer","commander","buildMembers","account_id_strings","playerresponse","playerres","playerclanresponse","playerclanres","role","glossaryresponse","flexDirection","Popup","defineProperty","date","getFullYear","getMonth","getDate","time","playerTableVisible","Clan","ClanIndex_ClanIndex","Discussion","Comment","threaded","dividing","Avatar","Author","Metadata","Text","reply","TextArea","ShipIndex","icon_url","upgrades","modules_tag","modules_data","getColorByValue","icons","ship_type_images","is_premium","image_premium","upgrades_id","upg_data","modules_id","modules","modules_promise","id_arr","list","profile","idx","price_credit","bulleted","engine","max_speed","torp_bomber","torpedo_bomber","cruise_speed","max_damage","torpedo_max_speed","fighter","max_health","hull","anti_aircraft_barrels","atba_barrels","health","planes_amount","torpedoes_barrels","artillery","gun_rate","max_damage_AP","max_damage_HE","rotation_time","shot_speed","torpedo_speed","fire_control","distance_increase","flight_control","bomber_squadrons","fighter_squadrons","torpedo_squadrons","dive_bomber","accuracy","min","max","bomb_burn_probability","large","Grid","Column","Progress","percent","default_profile","armour","total","progress","weaponry","anti_aircraft","mobility","concealment","divided","columns","Discussion_Discussion","Loader","inline","Ship","ShipIndex_ShipIndex","ChangePassword","oldpassword","old_password","new_password","changepassCallBack","alert","wrongusername","wrongoldpassword","UserIndex","showChangePass","User_ChangePassword","App","react_router","path","exact","component","ShipHeader","PlayerHeader","ClanHeader","User_UserIndex","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.980cfbb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wows-icon.95cf5cf6.png\";","import React, { Component } from 'react'\nimport {\n    Button,\n    Container,\n    Divider,\n    Header,\n    Icon,\n    Segment,\n    Image,\n} from 'semantic-ui-react'\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport logo from '../assets/wows-icon.png'\nimport './index.scss'\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\n\nclass IndexPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            version: '',\n        }\n    }\n    componentDidMount() {\n        document.title = \"USS Illini mkII\";\n        axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/info/?application_id=\" + application_id + \"&language=en&fields=game_version\")\n            .then((response)=>{\n                this.setState({version : response.data.data.game_version})\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Segment inverted textAlign='center' vertical>\n                    <Header className=\"title\" as='h1' inverted>\n                        <Image avatar src={logo} size='large' verticalAlign='middle'/>\n                        <span>USS illini mkII</span>\n                    </Header>\n                    <Container className=\"index\" text>\n                        <Header as='h2' inverted>\n                            A wiki site for World of Warships\n                        </Header>\n                        <Divider/>\n                        <Header as='h2' inverted>\n                            Game Version: {this.state.version}\n                        </Header>\n                    </Container>\n                    <Link to={'/player'}>\n                        <Button primary>\n                            Get Started\n                            <Icon name='right arrow' />\n                        </Button>\n                    </Link>\n                </Segment>\n\n            </div>\n        );\n    }\n}\n\nexport default IndexPage;","export const application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\r\nexport const server = \"https://cs498rkfp.herokuapp.com/api\"\r\nexport function division(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b * 100) / 100;\r\n  }\r\n}\r\n\r\nexport function divisionWhole(a,b){\r\n  if (b === 0){\r\n    return 0;\r\n  }else{\r\n    return Math.round(a / b);\r\n  }\r\n}\r\n\r\nexport function time(input) {\r\n    var date = new Date(parseInt(input.toString()+\"000\"));\r\n    return (date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + (date.getDate()))\r\n}\r\n\r\nexport function romanize(num) {\r\n  var lookup = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},roman = '',i;\r\n  for ( i in lookup ) {\r\n    while ( num >= lookup[i] ) {\r\n      roman += i;\r\n      num -= lookup[i];\r\n    }\r\n  }\r\n  return roman;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerWeaponTable extends Component {\r\n  render() {\r\n    return (\r\n      <Table celled structured striped collapsing unstackable className=\"PlayerWeaponTable\">\r\n        <Table.Header className=\"PlayerWeaponTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell colSpan='3'>Main Battery</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='3'>Torpedos</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='3'>Secondary Battery</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='2'>Aircraft</Table.HeaderCell>\r\n            <Table.HeaderCell colSpan='2'>Ramming</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Hit Rate</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell>Max Kills</Table.HeaderCell>\r\n            <Table.HeaderCell>Average Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerWeaponTableBody\">\r\n          <Table.Row key={this.props.selectedShipData.ship_id}>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.main_battery_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.torpedoes_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_frags}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.second_battery_hit_rate}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.aircraft_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.aircraft_frags}</Table.Cell>\r\n\r\n            <Table.Cell>{this.props.selectedShipData.ramming_max_frags_battle}</Table.Cell>\r\n            <Table.Cell>{this.props.selectedShipData.ramming_frags}</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id} id={\"PlayerShipTable\"+row.ship_id.toString()} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell ><img src={row.image} alt=\"404\" height=\"35\"/></Table.Cell>\r\n                <Table.Cell ><img src={nationDict[row.nation].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell ><img src={typeDict[row.type].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.wins}</Table.Cell>\r\n                <Table.Cell >{row.battles}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.survival_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.max_xp}</Table.Cell>\r\n                <Table.Cell >{row.max_frags_battle}</Table.Cell>\r\n                <Table.Cell >{row.max_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.max_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell collapsing><Icon name=\"ellipsis horizontal\"/></Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.props.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(data){\r\n      this.setState({selectedData:data, page: 0});\r\n    }else{\r\n      this.setState({selectedData:[], page: 0});\r\n    }\r\n  }\r\n\r\n  handleFilter(selectedName,selectedNation,selectedType,selectedTier){\r\n    if(this.props.data){\r\n      var selectedData = [];\r\n      this.props.data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleselectedShipID(selectedShipID){\r\n    var selectedShipID = parseInt(selectedShipID.substring(15,selectedShipID.length))\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row key=\"header1\">\r\n                <Table.HeaderCell colSpan='2'>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'wins' ? this.state.direction : null} onClick={() => this.handleSort('wins')} rowSpan='2'>Wins</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'battles' ? this.state.direction : null} onClick={() => this.handleSort('battles')} rowSpan='2'>Battles</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'survival_rate' ? this.state.direction : null} onClick={() => this.handleSort('survival_rate')} rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n                <Table.HeaderCell rowSpan='2'></Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_xp' ? this.state.direction : null} onClick={() => this.handleSort('max_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_frags_battle' ? this.state.direction : null} onClick={() => this.handleSort('max_frags_battle')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('max_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('max_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='20'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item  key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTablePadBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id} id={\"PlayerShipTablePad\"+row.ship_id.toString()} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTablePadBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTablePad extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.props.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(data){\r\n      this.setState({selectedData:data, page: 0});\r\n    }else{\r\n      this.setState({selectedData:[], page: 0});\r\n    }\r\n  }\r\n\r\n  handleFilter(selectedName,selectedNation,selectedType,selectedTier){\r\n    if(this.props.data){\r\n      var selectedData = [];\r\n      this.props.data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleselectedShipID(selectedShipID){\r\n    var selectedShipID = parseInt(selectedShipID.substring(15,selectedShipID.length))\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTablePad\">\r\n            <Table.Header className=\"PlayerShipTablePadHeader\">\r\n              <Table.Row key=\"header1\">\r\n                <Table.HeaderCell colSpan='1'>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='1' sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='1' sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell colSpan='1' width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell colSpan='1' width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell colSpan='1' width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTablePadBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTablePadFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='15'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item  key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTableMobileBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id} id={\"PlayerShipTableMobile\"+row.ship_id.toString()} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableMobileBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerShipTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.setState({data:this.props.data,shipnames:this.props.shipnames});\r\n    this.handleFilterRaw(this.props.data,null,\"all\",\"all\",\"all\");\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.props.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(data){\r\n      this.setState({selectedData:data, page: 0});\r\n    }else{\r\n      this.setState({selectedData:[], page: 0});\r\n    }\r\n  }\r\n\r\n  handleFilter(selectedName,selectedNation,selectedType,selectedTier){\r\n    if(this.props.data){\r\n      var selectedData = [];\r\n      this.props.data.forEach((row)=>{\r\n        if(this.selected(row,selectedName,selectedNation,selectedType,selectedTier)){\r\n          selectedData.push(row);\r\n        }\r\n      })\r\n      this.setState({selectedData:selectedData, page: 0});\r\n    }\r\n  }\r\n\r\n  handleselectedShipID(selectedShipID){\r\n    var selectedShipID = parseInt(selectedShipID.substring(15,selectedShipID.length))\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 2;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage - 1 ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = this.state.page; i < this.state.page+2; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTableMobile\">\r\n            <Table.Header className=\"PlayerShipTableMobileHeader\">\r\n              <Table.Row key=\"header1\">\r\n                <Table.HeaderCell >Ship</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Ave Dmg</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableMobileBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableMobileFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='20'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item  key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          var seasonName = \"\";\r\n          if (parseInt(row.season) < 100){\r\n            seasonName = row.season;\r\n          }else{\r\n            seasonName = \"Sprint \" + (parseInt(row.season)-100).toString()\r\n          }\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id.toString()+'/'+row.season} id={\"PlayerRankTable\"+row.ship_id.toString()+'/'+row.season} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell ><img src={row.image} alt=\"404\" height=\"35\"/></Table.Cell>\r\n                <Table.Cell ><img src={nationDict[row.nation].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell ><img src={typeDict[row.type].image} alt=\"404\" height=\"25\"/></Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.wins}</Table.Cell>\r\n                <Table.Cell >{row.battles}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.survival_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.max_xp}</Table.Cell>\r\n                <Table.Cell >{row.max_frags_battle}</Table.Cell>\r\n                <Table.Cell >{row.max_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.max_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n\r\n                <Table.Cell collapsing><Icon name=\"ellipsis horizontal\"/></Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerRankTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id:\"\",\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n      seasonOptions:[{key: '0', value: 'all', text: ''}],\r\n      selectedSeason: null,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n  componentWillReceiveProps(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.state.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(data){\r\n       data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n   }\r\n\r\n  handleFilter(selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(this.props.data){\r\n       this.props.data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n  }\r\n\r\n  handleselectedShipID(input){\r\n    var str = input.substring(15,input.length)\r\n    var loc = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      if(str.charAt(i)==='/'){\r\n        loc = i;\r\n      }\r\n    }\r\n    var selectedShipID = parseInt(str.substring(0,loc));\r\n    var season = str.substring(loc+1,str.length);\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID && row.season === season){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if(selectedSeason && selectedSeason !== \"all\" && selectedSeason !== \"\"){\r\n      if(row.season !== selectedSeason){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Dropdown fluid clearable placeholder='Select Season' selection options={this.state.seasonOptions.sort((a,b)=>a.key-b.key)} value={this.state.selectedSeason} onChange={(e,{value}) => {this.setState({selectedSeason: value, selectedName:null,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value, null,\"all\",\"all\",\"all\")}}/>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row  key=\"header1\">\r\n                <Table.HeaderCell colSpan='2'>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='2' sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'wins' ? this.state.direction : null} onClick={() => this.handleSort('wins')} rowSpan='2'>Wins</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'battles' ? this.state.direction : null} onClick={() => this.handleSort('battles')} rowSpan='2'>Battles</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'survival_rate' ? this.state.direction : null} onClick={() => this.handleSort('survival_rate')} rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n                <Table.HeaderCell rowSpan='2'></Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell colSpan='2' width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(this.state.selectedSeason, value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell colSpan='2'width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell colSpan='2'width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_xp' ? this.state.direction : null} onClick={() => this.handleSort('max_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_frags_battle' ? this.state.direction : null} onClick={() => this.handleSort('max_frags_battle')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('max_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'max_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('max_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='21'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  {key: 'uk', value: 'uk', image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  {key: 'japan', value: 'japan', image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  {key: 'france', value: 'france', image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  {key: 'germany', value: 'germany', image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  {key: 'poland', value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship', image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier', image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          var seasonName = \"\";\r\n          if (parseInt(row.season) < 100){\r\n            seasonName = row.season;\r\n          }else{\r\n            seasonName = \"Sprint \" + (parseInt(row.season)-100).toString()\r\n          }\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id.toString()+'/'+row.season} id={\"PlayerRankTableMobile\"+row.ship_id.toString()+'/'+row.season} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerRankTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id:\"\",\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n      seasonOptions:[{key: '0', value: 'all', text: ''}],\r\n      selectedSeason: null,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n  componentWillReceiveProps(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.state.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(data){\r\n       data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n   }\r\n\r\n  handleFilter(selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(this.props.data){\r\n       this.props.data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n  }\r\n\r\n  handleselectedShipID(input){\r\n    var str = input.substring(15,input.length)\r\n    var loc = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      if(str.charAt(i)==='/'){\r\n        loc = i;\r\n      }\r\n    }\r\n    var selectedShipID = parseInt(str.substring(0,loc));\r\n    var season = str.substring(loc+1,str.length);\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID && row.season === season){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if(selectedSeason && selectedSeason !== \"all\" && selectedSeason !== \"\"){\r\n      if(row.season !== selectedSeason){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 2;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage - 1 ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = this.state.page; i < this.state.page+2; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Dropdown fluid clearable placeholder='Select Season' selection options={this.state.seasonOptions} value={this.state.selectedSeason} onChange={(e,{value}) => {this.setState({selectedSeason: value, selectedName:null,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value, null,\"all\",\"all\",\"all\")}}/>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row  key=\"header1\">\r\n                <Table.HeaderCell >Ship</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')}>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Ave Dmg</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='21'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Container } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerWeaponTable from './PlayerWeaponTable.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst perpage = 10;\r\nconst nationOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'usa', value: 'usa', text: 'USA'},\r\n  {key: 'ussr', value: 'ussr', text: 'USSR'},\r\n  {key: 'uk', value: 'uk', text: 'UK'},\r\n  {key: 'japan', value: 'japan', text: 'Japan'},\r\n  {key: 'france', value: 'france',text: 'France'},\r\n  {key: 'germany', value: 'germany', text: 'Germany'},\r\n  {key: 'poland', value: 'poland', text: 'Poland'},\r\n  {key: 'pan_asia', value: 'pan_asia',  text: 'Pan Asia'},\r\n  {key: 'italy', value: 'italy', text: 'Italy'},\r\n  {key: 'commonwealth', value: 'commonwealth', text: 'Com. Wealth'},\r\n  {key: 'pan_america', value: 'pan_america', text: 'Pan America'}\r\n];\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{value: 'poland', image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{ value: 'pan_asia', image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{ value: 'italy', image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\nconst typeOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: 'Destroyer', value: 'Destroyer', text: 'Destroyer'},\r\n  {key: 'Cruiser', value: 'Cruiser', text: 'Cruiser'},\r\n  {key: 'Battleship', value: 'Battleship',text: 'Battleship'},\r\n  {key: 'AirCarrier', value: 'AirCarrier',text: 'Carrier'}\r\n];\r\nconst typeDict={\r\n   'Destroyer':{image: 'http://wiki.gcdn.co/images/d/d2/Wows-destroyer-icon.png', text: 'Destroyer'},\r\n   'Cruiser':{image: 'http://wiki.gcdn.co/images/f/f5/Wows-cruiser-icon.png', text: 'Cruiser'},\r\n   'Battleship':{image: 'http://wiki.gcdn.co/images/2/24/Wows-battleship-icon.png', text: 'Battleship'},\r\n   'AirCarrier':{image: 'http://wiki.gcdn.co/images/d/d8/Wows-aircarrier-icon.png', text: 'Carrier'}\r\n}\r\nconst tierOptions=[\r\n  {key: 'all', value: 'all', text: ''},\r\n  {key: '1', value: '1', text: 'I'},\r\n  {key: '2', value: '2', text: 'II'},\r\n  {key: '3', value: '3', text: 'III'},\r\n  {key: '4', value: '4', text: 'IV'},\r\n  {key: '5', value: '5', text: 'V'},\r\n  {key: '6', value: '6', text: 'VI'},\r\n  {key: '7', value: '7', text: 'VII'},\r\n  {key: '8', value: '8', text: 'VIII'},\r\n  {key: '9', value: '9', text: 'IX'},\r\n  {key: '10', value: '10', text: 'X'},\r\n];\r\nconst tierDict={\r\n  '1': 'I',\r\n  '2': 'II',\r\n  '3': 'III',\r\n  '4': 'IV',\r\n  '5': 'V',\r\n  '6': 'VI',\r\n  '7': 'VII',\r\n  '8':'VIII',\r\n  '9': 'IX',\r\n  '10': 'X',\r\n}\r\n\r\nclass PlayerShipTableBody extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n\r\n  build(data,page,selectedName,selectedNation,selectedType,selectedTier){\r\n    var rows = [];\r\n    if(data){\r\n      for (var i = page * perpage; i < data.length; i++){\r\n        var row = data[i];\r\n        if (i < page * perpage + perpage){\r\n          var seasonName = \"\";\r\n          if (parseInt(row.season) < 100){\r\n            seasonName = row.season;\r\n          }else{\r\n            seasonName = \"Sprint \" + (parseInt(row.season)-100).toString()\r\n          }\r\n          rows.push(\r\n              (\r\n              <Table.Row key={row.ship_id.toString()+'/'+row.season} id={\"PlayerRankTablePad\"+row.ship_id.toString()+'/'+row.season} onClick={(e)=>{this.props.handleselectedShipID(e.currentTarget.id)}}>\r\n                <Table.Cell selectable><NavLink style={{color:\"cornflowerblue\"}} to={{pathname: '/ship',state: {ship_id: row.ship_id}}}>{row.name}</NavLink></Table.Cell>\r\n                <Table.Cell >{nationDict[row.nation].text}</Table.Cell>\r\n                <Table.Cell >{typeDict[row.type].text}</Table.Cell>\r\n                <Table.Cell >{tierDict[row.tier]}</Table.Cell>\r\n                <Table.Cell >{row.win_rate}</Table.Cell>\r\n\r\n                <Table.Cell >{row.ave_xp}</Table.Cell>\r\n                <Table.Cell >{row.ave_frags}</Table.Cell>\r\n                <Table.Cell >{row.ave_damage_dealt}</Table.Cell>\r\n                <Table.Cell >{row.ave_planes_killed}</Table.Cell>\r\n              </Table.Row>\r\n            )\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table.Body className=\"PlayerShipTableBody\">\r\n        {this.build(this.props.data,this.props.page,this.props.selectedName,this.props.selectedNation,this.props.selectedType,this.props.selectedTier)}\r\n      </Table.Body>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class PlayerRankTablePad extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id:\"\",\r\n      column: null,\r\n      data: null,\r\n      shipData: null,\r\n      selectedData:null,\r\n      direction: null,\r\n      page: 0,\r\n      selectedName: \"all\",\r\n      selectedNation: \"all\",\r\n      selectedType: \"all\",\r\n      selectedTier: \"all\",\r\n      selectedShipData: null,\r\n      ship_ids: [],\r\n      shipnames: [{key: 'all', value: 'all', text: ''}],\r\n      showModal: false,\r\n      seasonOptions:[{key: '0', value: 'all', text: ''}],\r\n      selectedSeason: null,\r\n    }\r\n    this.handleSort = this.handleSort.bind(this);\r\n    this.build = this.build.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n    this.prevPage = this.prevPage.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.handleFilterRaw = this.handleFilterRaw.bind(this);\r\n    this.selected = this.selected.bind(this);\r\n    this.handleselectedShipID = this.handleselectedShipID.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n  componentWillReceiveProps(){\r\n    if(this.props.seasonOptions){\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames,seasonOptions:this.props.seasonOptions.sort((a,b)=>a.key-b.key)});\r\n    }else{\r\n      this.setState({account_id:this.props.account_id, data:this.props.data,shipnames:this.props.rankshipnames});\r\n    }\r\n\r\n    this.handleFilterRaw(this.props.data,null,null,\"all\",\"all\",\"all\")\r\n  }\r\n\r\n  handleSort(clickedColumn){\r\n    var selectedData = [];\r\n    this.state.data.forEach((row)=>{\r\n      if(this.selected(row,this.state.selectedName,this.state.selectedNation,this.state.selectedType,this.state.selectedTier)){\r\n        selectedData.push(row);\r\n      }\r\n    })\r\n    if (this.state.column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n        direction: 'ascending',\r\n        page: 0,\r\n      })\r\n    }else{\r\n      if(this.state.direction === 'ascending'){\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]).reverse(),\r\n          direction: 'descending',\r\n          page: 0,\r\n        })\r\n      }else{\r\n        this.setState({\r\n          selectedData: _.sortBy(selectedData, [clickedColumn]),\r\n          direction: 'ascending',\r\n          page: 0,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterRaw(data,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(data){\r\n       data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n   }\r\n\r\n  handleFilter(selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n     var selectedData = [];\r\n     if(this.props.data){\r\n       this.props.data.forEach((row)=>{\r\n         if(this.selected(row,selectedSeason,selectedName,selectedNation,selectedType,selectedTier)){\r\n           selectedData.push(row);\r\n         }\r\n       })\r\n     }\r\n     this.setState({selectedData:selectedData, page: 0});\r\n  }\r\n\r\n  handleselectedShipID(input){\r\n    var str = input.substring(15,input.length)\r\n    var loc = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      if(str.charAt(i)==='/'){\r\n        loc = i;\r\n      }\r\n    }\r\n    var selectedShipID = parseInt(str.substring(0,loc));\r\n    var season = str.substring(loc+1,str.length);\r\n    var selectedShipData = {};\r\n    if(this.state.selectedData){\r\n      this.state.selectedData.forEach((row)=>{\r\n        if(row.ship_id === selectedShipID && row.season === season){\r\n            selectedShipData.ship_id = row.ship_id;\r\n            selectedShipData.main_battery_max_frags_battle = row.main_battery_max_frags_battle;\r\n            selectedShipData.main_battery_frags = row.main_battery_frags;\r\n            selectedShipData.main_battery_hit_rate = row.main_battery_hit_rate;\r\n\r\n            selectedShipData.torpedoes_max_frags_battle = row.torpedoes_max_frags_battle;\r\n            selectedShipData.torpedoes_frags = row.torpedoes_frags;\r\n            selectedShipData.torpedoes_hit_rate = row.torpedoes_hit_rate;\r\n\r\n            selectedShipData.second_battery_max_frags_battle = row.second_battery_max_frags_battle;\r\n            selectedShipData.second_battery_frags = row.second_battery_frags;\r\n            selectedShipData.second_battery_hit_rate = row.second_battery_hit_rate;\r\n\r\n            selectedShipData.aircraft_max_frags_battle = row.aircraft_max_frags_battle;\r\n            selectedShipData.aircraft_frags = row.aircraft_frags;\r\n\r\n            selectedShipData.ramming_max_frags_battle = row.ramming_max_frags_battle;\r\n            selectedShipData.ramming_frags = row.ramming_frags;\r\n\r\n            this.setState({showModal:true, selectedShipData:selectedShipData});\r\n            return;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  selected(row,selectedSeason, selectedName,selectedNation,selectedType,selectedTier){\r\n    if(selectedName && selectedName !== \"all\" && selectedName !== \"\"){\r\n      if(row.name !== selectedName){\r\n        return false;\r\n      }\r\n    }else{\r\n      if(selectedName && selectedNation !== \"all\" && selectedName !== \"\"){\r\n        if(row.nation !== selectedNation){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedType !== \"all\" && selectedName !== \"\"){\r\n        if(row.type !== selectedType){\r\n          return false;\r\n        }\r\n      }\r\n      if(selectedName && selectedTier !== \"all\" && selectedName !== \"\"){\r\n        if(row.tier !== parseInt(selectedTier)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if(selectedSeason && selectedSeason !== \"all\" && selectedSeason !== \"\"){\r\n      if(row.season !== selectedSeason){\r\n        return false;\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  setPage(e, { name }){\r\n    this.setState({page:parseInt(name)})\r\n  }\r\n\r\n  nextPage(){\r\n    var page = this.state.page;\r\n    if(page < this.state.selectedData.length/perpage - 1){\r\n      this.setState({\r\n        page: page + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  prevPage(){\r\n    var page = this.state.page;\r\n    if(page > 0){\r\n      this.setState({\r\n        page: page - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  build(data){\r\n    var totalpage = 5;\r\n    var pages = [];\r\n    if(data){\r\n      if(data.length/perpage > totalpage){\r\n        if(this.state.page < Math.round(totalpage/2)){\r\n          for (var i = 0; i < totalpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n\r\n          }\r\n        }else if(this.state.page > data.length/perpage - Math.round(totalpage/2)){\r\n          for (var i = Math.round(data.length/perpage)-totalpage; i < data.length/perpage ; i++){\r\n            pages.push((\r\n              <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n            ))\r\n          }\r\n        }else{\r\n          for (var i = 0; i < data.length/perpage ; i++){\r\n            if(Math.abs(i - this.state.page) < Math.round(totalpage/2)){\r\n              pages.push((\r\n                <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n              ))\r\n            }\r\n          }\r\n        }\r\n      }else{\r\n        for (var i = 0; i < data.length/perpage ; i++){\r\n          pages.push((\r\n            <Menu.Item as='a' key={i.toString()} name={i.toString()} active={this.state.page===i} onClick={this.setPage}>{i + 1}</Menu.Item>\r\n          ))\r\n        }\r\n      }\r\n    }\r\n    return pages;\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.data){\r\n      return (<div/>)\r\n    }\r\n    return (\r\n      <div>\r\n        <Dropdown fluid clearable placeholder='Select Season' selection options={this.state.seasonOptions.sort((a,b)=>a.key-b.key)} value={this.state.selectedSeason} onChange={(e,{value}) => {this.setState({selectedSeason: value, selectedName:null,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(value, null,\"all\",\"all\",\"all\")}}/>\r\n        <Table sortable selectable celled structured striped unstackable className=\"PlayerShipTable\">\r\n            <Table.Header className=\"PlayerShipTableHeader\">\r\n              <Table.Row  key=\"header1\">\r\n                <Table.HeaderCell>Ship</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'nation' ? this.state.direction : null} onClick={() => this.handleSort('nation')}>Nation</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'type' ? this.state.direction : null} onClick={() => this.handleSort('type')}>Type</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'tier' ? this.state.direction : null} onClick={() => this.handleSort('tier')}>Tier</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'win_rate' ? this.state.direction : null} onClick={() => this.handleSort('win_rate')} rowSpan='2'>Win Rate</Table.HeaderCell>\r\n                <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n              </Table.Row>\r\n              <Table.Row  key=\"header2\">\r\n                <Table.Cell width=\"5\"><Dropdown fluid clearable placeholder='Select Ship' search selection options={this.state.shipnames} value={this.state.selectedName} onChange={(e,{value}) => {this.setState({selectedName:value,selectedNation: \"all\",selectedType: \"all\",selectedTier: \"all\"}); this.handleFilter(this.state.selectedSeason, value,\"all\",\"all\",\"all\")}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Nation' selection options={nationOptions} value={this.state.selectedNation} onChange={(e,{value}) => {this.setState({selectedNation:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",value,this.state.selectedType,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Type' selection options={typeOptions} value={this.state.selectedType} onChange={(e,{value}) => {this.setState({selectedType:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,value,this.state.selectedTier)}}/></Table.Cell>\r\n                <Table.Cell width=\"5\"><Dropdown fluid placeholder='Select Tier ' selection options={tierOptions} value={this.state.selectedTier} onChange={(e,{value}) => {this.setState({selectedTier:value,selectedName:\"all\"}); this.handleFilter(this.state.selectedSeason,\"all\",this.state.selectedNation,this.state.selectedType,value)}}/></Table.Cell>\r\n\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_xp' ? this.state.direction : null} onClick={() => this.handleSort('ave_xp')}>XP</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_frags' ? this.state.direction : null} onClick={() => this.handleSort('ave_frags')}>Kills</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_damage_dealt' ? this.state.direction : null} onClick={() => this.handleSort('ave_damage_dealt')}>Damage</Table.HeaderCell>\r\n                <Table.HeaderCell sorted={this.state.column === 'ave_planes_killed' ? this.state.direction : null} onClick={() => this.handleSort('ave_planes_killed')}>Plane Kills</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <PlayerShipTableBody data={this.state.selectedData} page={this.state.page} handleselectedShipID={this.handleselectedShipID}/>\r\n\r\n            <Table.Footer className=\"PlayerShipTableFooter\">\r\n              <Table.Row  key=\"header3\">\r\n                <Table.HeaderCell colSpan='21'>\r\n                  <Menu floated='right' pagination>\r\n                    <Menu.Item key=\"menu1\" as='a' icon onClick={()=>this.setState({page:0})}>\r\n                      <Icon name='angle double left' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu2\" as='a' icon onClick={this.prevPage}>\r\n                      <Icon name='angle left' />\r\n                    </Menu.Item>\r\n                    {this.build(this.state.selectedData)}\r\n                    <Menu.Item key=\"menu3\" as='a' icon onClick={this.nextPage}>\r\n                      <Icon name='angle right' />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"menu4\" as='a' icon onClick={()=>this.setState({page:Math.ceil(this.state.selectedData.length/perpage-1)})}>\r\n                      <Icon name='angle double right' />\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n        </Table>\r\n\r\n        <Modal open={this.state.showModal} size=\"large\" onClose={()=>this.setState({showModal:false})} closeIcon>\r\n          <Modal.Content>\r\n            <PlayerWeaponTable selectedShipData={this.state.selectedShipData}/>\r\n          </Modal.Content>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTypeTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.type === \"Destroyer\"){\r\n        data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n        data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n        data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n        data.destroyer.max_planes_killed = row.max_planes_killed > data.destroyer.max_planes_killed?row.max_planes_killed:data.destroyer.max_planes_killed ;\r\n        data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_planes_killed  = division((row.ave_planes_killed + data.destroyer.ave_planes_killed * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.battles += row.battles\r\n        data.destroyer.wins += row.wins\r\n        data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n        data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.count ++;\r\n      }else if(row.type === \"Cruiser\"){\r\n        data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n        data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n        data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n        data.cruiser.max_planes_killed = row.max_planes_killed > data.cruiser.max_planes_killed?row.max_planes_killed:data.cruiser.max_planes_killed ;\r\n        data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_planes_killed  = division((row.ave_planes_killed + data.cruiser.ave_planes_killed * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.battles += row.battles\r\n        data.cruiser.wins += row.wins\r\n        data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n        data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.count ++;\r\n      }else if(row.type === \"Battleship\"){\r\n        data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n        data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n        data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n        data.battleship.max_planes_killed = row.max_planes_killed > data.battleship.max_planes_killed?row.max_planes_killed:data.battleship.max_planes_killed ;\r\n        data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_planes_killed  = division((row.ave_planes_killed + data.battleship.ave_planes_killed * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.battles += row.battles\r\n        data.battleship.wins += row.wins\r\n        data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n        data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.count ++;\r\n      }else if(row.type === \"AirCarrier\"){\r\n        data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n        data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n        data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n        data.carrier.max_planes_killed = row.max_planes_killed > data.carrier.max_planes_killed?row.max_planes_killed:data.carrier.max_planes_killed ;\r\n        data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_planes_killed  = division((row.ave_planes_killed + data.carrier.ave_planes_killed * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.battles += row.battles\r\n        data.carrier.wins += row.wins\r\n        data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n        data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.count ++;\r\n      }\r\n    })\r\n    return[(\r\n    <Table.Row key={\"Destroyer\"}>\r\n      <Table.Cell>Destroyer</Table.Cell>\r\n      <Table.Cell>{data.destroyer.wins}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.battles}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.destroyer.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.destroyer.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Cruiser\"}>\r\n      <Table.Cell>Cruiser</Table.Cell>\r\n      <Table.Cell>{data.cruiser.wins}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.battles}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.cruiser.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.cruiser.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Battleship\"}>\r\n      <Table.Cell>Battleship</Table.Cell>\r\n      <Table.Cell>{data.battleship.wins}</Table.Cell>\r\n      <Table.Cell>{data.battleship.battles}</Table.Cell>\r\n      <Table.Cell>{data.battleship.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.battleship.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.battleship.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.battleship.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.battleship.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Carrier\"}>\r\n      <Table.Cell>Aircraft Carrier</Table.Cell>\r\n      <Table.Cell>{data.carrier.wins}</Table.Cell>\r\n      <Table.Cell>{data.carrier.battles}</Table.Cell>\r\n      <Table.Cell>{data.carrier.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.carrier.survival_rate}</Table.Cell>\r\n\r\n      <Table.Cell>{data.carrier.max_xp}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_frags_battle}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.carrier.max_planes_killed}</Table.Cell>\r\n\r\n      <Table.Cell>{data.carrier.ave_xp}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_frags}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_damage_dealt}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_planes_killed}</Table.Cell>\r\n    </Table.Row>)];\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Type</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id, romanize} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTierTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    this.props.data.forEach((row)=>{\r\n      var tier = parseInt(row.tier);\r\n      data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n      data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n      data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n      data[tier-1].max_planes_killed  = row.max_planes_killed > data[tier-1].max_planes_killed?row.max_planes_killed:data[tier-1].max_planes_killed ;\r\n      data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_planes_killed = division((row.ave_planes_killed + data[tier-1].ave_planes_killed * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].battles += row.battles\r\n      data[tier-1].wins += row.wins\r\n      data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n      data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].count ++;\r\n    })\r\n    var arr = [];\r\n    for(var tier=0; tier<10; tier++){\r\n      arr.push(\r\n      <Table.Row key={tier+1}>\r\n        <Table.Cell>{romanize(tier+1)}</Table.Cell>\r\n        <Table.Cell>{data[tier].wins}</Table.Cell>\r\n        <Table.Cell>{data[tier].battles}</Table.Cell>\r\n        <Table.Cell>{data[tier].win_rate}</Table.Cell>\r\n        <Table.Cell>{data[tier].survival_rate}</Table.Cell>\r\n\r\n        <Table.Cell>{data[tier].max_xp}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_frags_battle}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_damage_dealt}</Table.Cell>\r\n        <Table.Cell>{data[tier].max_planes_killed}</Table.Cell>\r\n\r\n        <Table.Cell>{data[tier].ave_xp}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_frags}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_damage_dealt}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_planes_killed}</Table.Cell>\r\n      </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Tier</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\n\r\nexport default class PlayerShipNationTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.nation === \"usa\"){\r\n        data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n        data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n        data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n        data.usa.max_planes_killed  = row.max_planes_killed > data.usa.max_planes_killed?row.max_planes_killed:data.usa.max_planes_killed ;\r\n        data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_planes_killed = division((row.ave_planes_killed + data.usa.ave_planes_killed * data.usa.count),(data.usa.count+1))\r\n        data.usa.battles += row.battles\r\n        data.usa.wins += row.wins\r\n        data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n        data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n        data.usa.count ++;\r\n      }else if(row.nation === \"ussr\"){\r\n        data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n        data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n        data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n        data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.battles += row.battles\r\n        data.ussr.wins += row.wins\r\n        data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n        data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.max_planes_killed  = row.max_planes_killed > data.ussr.max_planes_killed?row.max_planes_killed:data.ussr.max_planes_killed ;\r\n        data.ussr.ave_planes_killed = division((row.ave_planes_killed + data.ussr.ave_planes_killed * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.count ++;\r\n      }else if(row.nation === \"uk\"){\r\n        data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n        data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n        data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n        data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n        data.uk.battles += row.battles\r\n        data.uk.wins += row.wins\r\n        data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n        data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n        data.uk.max_planes_killed  = row.max_planes_killed > data.uk.max_planes_killed?row.max_planes_killed:data.uk.max_planes_killed ;\r\n        data.uk.ave_planes_killed = division((row.ave_planes_killed + data.uk.ave_planes_killed * data.uk.count),(data.uk.count+1))\r\n        data.uk.count ++;\r\n      }else if(row.nation === \"japan\"){\r\n        data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n        data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n        data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n        data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n        data.japan.battles += row.battles\r\n        data.japan.wins += row.wins\r\n        data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n        data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n        data.japan.max_planes_killed  = row.max_planes_killed > data.japan.max_planes_killed?row.max_planes_killed:data.japan.max_planes_killed ;\r\n        data.japan.ave_planes_killed = division((row.ave_planes_killed + data.japan.ave_planes_killed * data.japan.count),(data.japan.count+1))\r\n        data.japan.count ++;\r\n      }else if(row.nation === \"france\"){\r\n        data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n        data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n        data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n        data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n        data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n        data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n        data.france.battles += row.battles\r\n        data.france.wins += row.wins\r\n        data.france.win_rate = division(data.france.wins,data.france.battles);\r\n        data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n        data.france.max_planes_killed  = row.max_planes_killed > data.france.max_planes_killed?row.max_planes_killed:data.france.max_planes_killed ;\r\n        data.france.ave_planes_killed = division((row.ave_planes_killed + data.france.ave_planes_killed * data.france.count),(data.france.count+1))\r\n        data.france.count ++;\r\n      }else if(row.nation === \"germany\"){\r\n        data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n        data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n        data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n        data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n        data.germany.battles += row.battles\r\n        data.germany.wins += row.wins\r\n        data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n        data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n        data.germany.max_planes_killed  = row.max_planes_killed > data.germany.max_planes_killed?row.max_planes_killed:data.germany.max_planes_killed ;\r\n        data.germany.ave_planes_killed = division((row.ave_planes_killed + data.germany.ave_planes_killed * data.germany.count),(data.germany.count+1))\r\n        data.germany.count ++;\r\n      }else if(row.nation === \"poland\"){\r\n        data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n        data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n        data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n        data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n        data.poland.battles += row.battles\r\n        data.poland.wins += row.wins\r\n        data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n        data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n        data.poland.max_planes_killed  = row.max_planes_killed > data.poland.max_planes_killed?row.max_planes_killed:data.poland.max_planes_killed ;\r\n        data.poland.ave_planes_killed = division((row.ave_planes_killed + data.poland.ave_planes_killed * data.poland.count),(data.poland.count+1))\r\n        data.poland.count ++;\r\n      }else if(row.nation === \"italy\"){\r\n        data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n        data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n        data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n        data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n        data.italy.battles += row.battles\r\n        data.italy.wins += row.wins\r\n        data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n        data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n        data.italy.max_planes_killed  = row.max_planes_killed > data.italy.max_planes_killed?row.max_planes_killed:data.italy.max_planes_killed ;\r\n        data.italy.ave_planes_killed = division((row.ave_planes_killed + data.italy.ave_planes_killed * data.italy.count),(data.italy.count+1))\r\n        data.italy.count ++;\r\n      }else if(row.nation === \"pan_asia\"){\r\n        data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n        data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n        data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n        data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.battles += row.battles\r\n        data.pan_asia.wins += row.wins\r\n        data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n        data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.max_planes_killed  = row.max_planes_killed > data.pan_asia.max_planes_killed?row.max_planes_killed:data.pan_asia.max_planes_killed ;\r\n        data.pan_asia.ave_planes_killed = division((row.ave_planes_killed + data.pan_asia.ave_planes_killed * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.count ++;\r\n      }else if(row.nation === \"commonwealth\"){\r\n        data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n        data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n        data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n        data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.battles += row.battles\r\n        data.commonwealth.wins += row.wins\r\n        data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n        data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.max_planes_killed  = row.max_planes_killed > data.commonwealth.max_planes_killed?row.max_planes_killed:data.commonwealth.max_planes_killed ;\r\n        data.commonwealth.ave_planes_killed = division((row.ave_planes_killed + data.commonwealth.ave_planes_killed * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.count ++;\r\n      }else if(row.nation === \"pan_america\"){\r\n        data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n        data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n        data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n        data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.battles += row.battles\r\n        data.pan_america.wins += row.wins\r\n        data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n        data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.max_planes_killed  = row.max_planes_killed > data.pan_america.max_planes_killed?row.max_planes_killed:data.pan_america.max_planes_killed ;\r\n        data.pan_america.ave_planes_killed = division((row.ave_planes_killed + data.pan_america.ave_planes_killed * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.count ++;\r\n      }\r\n    })\r\n    var arr = [];\r\n    for (const [nation, dat] of Object.entries(nationDict)) {\r\n      arr.push(\r\n        <Table.Row key={nation}>\r\n          <Table.Cell>{dat.text}</Table.Cell>\r\n          <Table.Cell>{data[nation].wins}</Table.Cell>\r\n          <Table.Cell>{data[nation].battles}</Table.Cell>\r\n          <Table.Cell>{data[nation].win_rate}</Table.Cell>\r\n          <Table.Cell>{data[nation].survival_rate}</Table.Cell>\r\n\r\n          <Table.Cell>{data[nation].max_xp}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_frags_battle}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_damage_dealt}</Table.Cell>\r\n          <Table.Cell>{data[nation].max_planes_killed}</Table.Cell>\r\n\r\n          <Table.Cell>{data[nation].ave_xp}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_frags}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_damage_dealt}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_planes_killed}</Table.Cell>\r\n        </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell rowSpan='2'>Nation</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Wins</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Battles</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell rowSpan='2'>Survival Rate</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Max</Table.HeaderCell>\r\n          <Table.HeaderCell colSpan='4'>Average</Table.HeaderCell>\r\n          </Table.Row>\r\n          <Table.Row  key=\"header2\">\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n\r\n            <Table.HeaderCell >XP</Table.HeaderCell>\r\n            <Table.HeaderCell >Kills</Table.HeaderCell>\r\n            <Table.HeaderCell >Damage</Table.HeaderCell>\r\n            <Table.HeaderCell >Plane Kills</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTypeTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.type === \"Destroyer\"){\r\n        data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n        data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n        data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n        data.destroyer.max_planes_killed = row.max_planes_killed > data.destroyer.max_planes_killed?row.max_planes_killed:data.destroyer.max_planes_killed ;\r\n        data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.ave_planes_killed  = division((row.ave_planes_killed + data.destroyer.ave_planes_killed * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.battles += row.battles\r\n        data.destroyer.wins += row.wins\r\n        data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n        data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n        data.destroyer.count ++;\r\n      }else if(row.type === \"Cruiser\"){\r\n        data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n        data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n        data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n        data.cruiser.max_planes_killed = row.max_planes_killed > data.cruiser.max_planes_killed?row.max_planes_killed:data.cruiser.max_planes_killed ;\r\n        data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.ave_planes_killed  = division((row.ave_planes_killed + data.cruiser.ave_planes_killed * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.battles += row.battles\r\n        data.cruiser.wins += row.wins\r\n        data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n        data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n        data.cruiser.count ++;\r\n      }else if(row.type === \"Battleship\"){\r\n        data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n        data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n        data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n        data.battleship.max_planes_killed = row.max_planes_killed > data.battleship.max_planes_killed?row.max_planes_killed:data.battleship.max_planes_killed ;\r\n        data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.ave_planes_killed  = division((row.ave_planes_killed + data.battleship.ave_planes_killed * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.battles += row.battles\r\n        data.battleship.wins += row.wins\r\n        data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n        data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n        data.battleship.count ++;\r\n      }else if(row.type === \"AirCarrier\"){\r\n        data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n        data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n        data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n        data.carrier.max_planes_killed = row.max_planes_killed > data.carrier.max_planes_killed?row.max_planes_killed:data.carrier.max_planes_killed ;\r\n        data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.ave_planes_killed  = division((row.ave_planes_killed + data.carrier.ave_planes_killed * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.battles += row.battles\r\n        data.carrier.wins += row.wins\r\n        data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n        data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n        data.carrier.count ++;\r\n      }\r\n    })\r\n    return[(\r\n    <Table.Row key={\"Destroyer\"}>\r\n      <Table.Cell>Destroyer</Table.Cell>\r\n      <Table.Cell>{data.destroyer.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.destroyer.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Cruiser\"}>\r\n      <Table.Cell>Cruiser</Table.Cell>\r\n      <Table.Cell>{data.cruiser.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.cruiser.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Battleship\"}>\r\n      <Table.Cell>Battleship</Table.Cell>\r\n      <Table.Cell>{data.battleship.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.battleship.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>),(\r\n    <Table.Row key={\"Carrier\"}>\r\n      <Table.Cell>Aircraft Carrier</Table.Cell>\r\n      <Table.Cell>{data.carrier.win_rate}</Table.Cell>\r\n      <Table.Cell>{data.carrier.ave_damage_dealt}</Table.Cell>\r\n    </Table.Row>)];\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTableMobile\">\r\n        <Table.Header className=\"PlayerShipTypeTableMobileHeader\">\r\n          <Table.Row  key=\"header1\">\r\n          <Table.HeaderCell >Type</Table.HeaderCell>\r\n          <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n          <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableMobileBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id, romanize} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTierTable extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    this.props.data.forEach((row)=>{\r\n      var tier = parseInt(row.tier);\r\n      data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n      data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n      data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n      data[tier-1].max_planes_killed  = row.max_planes_killed > data[tier-1].max_planes_killed?row.max_planes_killed:data[tier-1].max_planes_killed ;\r\n      data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].ave_planes_killed = division((row.ave_planes_killed + data[tier-1].ave_planes_killed * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].battles += row.battles\r\n      data[tier-1].wins += row.wins\r\n      data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n      data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n      data[tier-1].count ++;\r\n    })\r\n    var arr = [];\r\n    for(var tier=0; tier<10; tier++){\r\n      arr.push(\r\n      <Table.Row key={tier+1}>\r\n        <Table.Cell>{romanize(tier+1)}</Table.Cell>\r\n        <Table.Cell>{data[tier].win_rate}</Table.Cell>\r\n        <Table.Cell>{data[tier].ave_damage_dealt}</Table.Cell>\r\n      </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable>\r\n        <Table.Header>\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell >Tier</Table.HeaderCell>\r\n            <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n            <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst nationDict={\r\n  'usa':{image: 'http://wiki.gcdn.co/images/f/f2/Wows_flag_USA.png', text: 'USA'},\r\n  'ussr':{image: 'http://wiki.gcdn.co/images/0/04/Wows_flag_Russian_Empire_and_USSR.png',text: 'USSR'},\r\n  'uk':{image: 'http://wiki.gcdn.co/images/3/34/Wows_flag_UK.png',text: 'UK'},\r\n  'japan':{image: 'http://wiki.gcdn.co/images/5/5b/Wows_flag_Japan.png',text: 'Japan'},\r\n  'france':{image: 'http://wiki.gcdn.co/images/7/71/Wows_flag_France.png', text: 'France'},\r\n  'germany':{image: 'http://wiki.gcdn.co/images/6/6b/Wows_flag_Germany.png',text: 'Germany'},\r\n  'poland':{image: 'http://wiki.gcdn.co/images/5/5f/Wows_flag_Poland.png', text: 'Poland'},\r\n  'pan_asia':{image: 'http://wiki.gcdn.co/images/3/33/Wows_flag_Pan_Asia.png', text: 'Pan Asia'},\r\n  'italy':{image: 'http://wiki.gcdn.co/images/d/d1/Wows_flag_Italy.png', text: 'Italy'},\r\n  'commonwealth':{image: 'http://wiki.gcdn.co/images/3/3e/Wows_flag_Commonwealth.PNG', text: 'Common Wealth'},\r\n  'pan_america':{image: 'http://wiki.gcdn.co/images/9/9e/Wows_flag_Pan_America.png', text: 'Pan America'}\r\n}\r\n\r\nexport default class PlayerShipNationTableMobile extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.buildrows = this.buildrows.bind(this);\r\n  }\r\n  buildrows(){\r\n    if(!this.props.data){return <Table.Row/>;}\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    this.props.data.forEach((row)=>{\r\n      if(row.nation === \"usa\"){\r\n        data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n        data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n        data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n        data.usa.max_planes_killed  = row.max_planes_killed > data.usa.max_planes_killed?row.max_planes_killed:data.usa.max_planes_killed ;\r\n        data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n        data.usa.ave_planes_killed = division((row.ave_planes_killed + data.usa.ave_planes_killed * data.usa.count),(data.usa.count+1))\r\n        data.usa.battles += row.battles\r\n        data.usa.wins += row.wins\r\n        data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n        data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n        data.usa.count ++;\r\n      }else if(row.nation === \"ussr\"){\r\n        data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n        data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n        data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n        data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.battles += row.battles\r\n        data.ussr.wins += row.wins\r\n        data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n        data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.max_planes_killed  = row.max_planes_killed > data.ussr.max_planes_killed?row.max_planes_killed:data.ussr.max_planes_killed ;\r\n        data.ussr.ave_planes_killed = division((row.ave_planes_killed + data.ussr.ave_planes_killed * data.ussr.count),(data.ussr.count+1))\r\n        data.ussr.count ++;\r\n      }else if(row.nation === \"uk\"){\r\n        data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n        data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n        data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n        data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n        data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n        data.uk.battles += row.battles\r\n        data.uk.wins += row.wins\r\n        data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n        data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n        data.uk.max_planes_killed  = row.max_planes_killed > data.uk.max_planes_killed?row.max_planes_killed:data.uk.max_planes_killed ;\r\n        data.uk.ave_planes_killed = division((row.ave_planes_killed + data.uk.ave_planes_killed * data.uk.count),(data.uk.count+1))\r\n        data.uk.count ++;\r\n      }else if(row.nation === \"japan\"){\r\n        data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n        data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n        data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n        data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n        data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n        data.japan.battles += row.battles\r\n        data.japan.wins += row.wins\r\n        data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n        data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n        data.japan.max_planes_killed  = row.max_planes_killed > data.japan.max_planes_killed?row.max_planes_killed:data.japan.max_planes_killed ;\r\n        data.japan.ave_planes_killed = division((row.ave_planes_killed + data.japan.ave_planes_killed * data.japan.count),(data.japan.count+1))\r\n        data.japan.count ++;\r\n      }else if(row.nation === \"france\"){\r\n        data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n        data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n        data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n        data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n        data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n        data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n        data.france.battles += row.battles\r\n        data.france.wins += row.wins\r\n        data.france.win_rate = division(data.france.wins,data.france.battles);\r\n        data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n        data.france.max_planes_killed  = row.max_planes_killed > data.france.max_planes_killed?row.max_planes_killed:data.france.max_planes_killed ;\r\n        data.france.ave_planes_killed = division((row.ave_planes_killed + data.france.ave_planes_killed * data.france.count),(data.france.count+1))\r\n        data.france.count ++;\r\n      }else if(row.nation === \"germany\"){\r\n        data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n        data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n        data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n        data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n        data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n        data.germany.battles += row.battles\r\n        data.germany.wins += row.wins\r\n        data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n        data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n        data.germany.max_planes_killed  = row.max_planes_killed > data.germany.max_planes_killed?row.max_planes_killed:data.germany.max_planes_killed ;\r\n        data.germany.ave_planes_killed = division((row.ave_planes_killed + data.germany.ave_planes_killed * data.germany.count),(data.germany.count+1))\r\n        data.germany.count ++;\r\n      }else if(row.nation === \"poland\"){\r\n        data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n        data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n        data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n        data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n        data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n        data.poland.battles += row.battles\r\n        data.poland.wins += row.wins\r\n        data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n        data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n        data.poland.max_planes_killed  = row.max_planes_killed > data.poland.max_planes_killed?row.max_planes_killed:data.poland.max_planes_killed ;\r\n        data.poland.ave_planes_killed = division((row.ave_planes_killed + data.poland.ave_planes_killed * data.poland.count),(data.poland.count+1))\r\n        data.poland.count ++;\r\n      }else if(row.nation === \"italy\"){\r\n        data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n        data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n        data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n        data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n        data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n        data.italy.battles += row.battles\r\n        data.italy.wins += row.wins\r\n        data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n        data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n        data.italy.max_planes_killed  = row.max_planes_killed > data.italy.max_planes_killed?row.max_planes_killed:data.italy.max_planes_killed ;\r\n        data.italy.ave_planes_killed = division((row.ave_planes_killed + data.italy.ave_planes_killed * data.italy.count),(data.italy.count+1))\r\n        data.italy.count ++;\r\n      }else if(row.nation === \"pan_asia\"){\r\n        data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n        data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n        data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n        data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.battles += row.battles\r\n        data.pan_asia.wins += row.wins\r\n        data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n        data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.max_planes_killed  = row.max_planes_killed > data.pan_asia.max_planes_killed?row.max_planes_killed:data.pan_asia.max_planes_killed ;\r\n        data.pan_asia.ave_planes_killed = division((row.ave_planes_killed + data.pan_asia.ave_planes_killed * data.pan_asia.count),(data.pan_asia.count+1))\r\n        data.pan_asia.count ++;\r\n      }else if(row.nation === \"commonwealth\"){\r\n        data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n        data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n        data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n        data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.battles += row.battles\r\n        data.commonwealth.wins += row.wins\r\n        data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n        data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.max_planes_killed  = row.max_planes_killed > data.commonwealth.max_planes_killed?row.max_planes_killed:data.commonwealth.max_planes_killed ;\r\n        data.commonwealth.ave_planes_killed = division((row.ave_planes_killed + data.commonwealth.ave_planes_killed * data.commonwealth.count),(data.commonwealth.count+1))\r\n        data.commonwealth.count ++;\r\n      }else if(row.nation === \"pan_america\"){\r\n        data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n        data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n        data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n        data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.battles += row.battles\r\n        data.pan_america.wins += row.wins\r\n        data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n        data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.max_planes_killed  = row.max_planes_killed > data.pan_america.max_planes_killed?row.max_planes_killed:data.pan_america.max_planes_killed ;\r\n        data.pan_america.ave_planes_killed = division((row.ave_planes_killed + data.pan_america.ave_planes_killed * data.pan_america.count),(data.pan_america.count+1))\r\n        data.pan_america.count ++;\r\n      }\r\n    })\r\n    var arr = [];\r\n    for (const [nation, dat] of Object.entries(nationDict)) {\r\n      arr.push(\r\n        <Table.Row key={nation}>\r\n          <Table.Cell>{dat.text}</Table.Cell>\r\n          <Table.Cell>{data[nation].win_rate}</Table.Cell>\r\n          <Table.Cell>{data[nation].ave_damage_dealt}</Table.Cell>\r\n        </Table.Row>\r\n      )\r\n    }\r\n    return arr;\r\n  }\r\n  render() {\r\n    return (\r\n      <Table celled structured striped unstackable className=\"PlayerShipTypeTable\">\r\n        <Table.Header className=\"PlayerShipTypeTableHeader\">\r\n          <Table.Row  key=\"header1\">\r\n            <Table.HeaderCell >Nation</Table.HeaderCell>\r\n            <Table.HeaderCell >Win Rate</Table.HeaderCell>\r\n            <Table.HeaderCell >Ave Dmg</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"PlayerShipTypeTableBody\">\r\n          {this.buildrows()}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTypeGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        destroyer:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        cruiser:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        battleship:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        carrier:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.build(this.props.data);\r\n  }\r\n  build(input){\r\n    var data = {\r\n      destroyer:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      cruiser:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags :0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      battleship:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle :0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      carrier:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    if(input){\r\n      input.forEach((row)=>{\r\n        if(row.type === \"Destroyer\"){\r\n          data.destroyer.max_damage_dealt = row.max_damage_dealt > data.destroyer.max_damage_dealt?row.max_damage_dealt:data.destroyer.max_damage_dealt;\r\n          data.destroyer.max_frags_battle  = row.max_frags_battle > data.destroyer.max_frags_battle?row.max_frags_battle:data.destroyer.max_frags_battle ;\r\n          data.destroyer.max_xp  = row.max_xp > data.destroyer.max_xp?row.max_xp:data.destroyer.max_xp ;\r\n          data.destroyer.ave_xp = divisionWhole((row.ave_xp + data.destroyer.ave_xp * data.destroyer.count),(data.destroyer.count+1))\r\n          data.destroyer.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.destroyer.ave_damage_dealt * data.destroyer.count),(data.destroyer.count+1))\r\n          data.destroyer.ave_frags = division((row.ave_frags + data.destroyer.ave_frags * data.destroyer.count),(data.destroyer.count+1))\r\n          data.destroyer.battles += row.battles\r\n          data.destroyer.wins += row.wins\r\n          data.destroyer.win_rate = division(data.destroyer.wins,data.destroyer.battles);\r\n          data.destroyer.survival_rate = division((row.survival_rate + data.destroyer.survival_rate * data.destroyer.count),(data.destroyer.count+1))\r\n          data.destroyer.count ++;\r\n        }else if(row.type === \"Cruiser\"){\r\n          data.cruiser.max_damage_dealt = row.max_damage_dealt > data.cruiser.max_damage_dealt?row.max_damage_dealt:data.cruiser.max_damage_dealt;\r\n          data.cruiser.max_frags_battle  = row.max_frags_battle > data.cruiser.max_frags_battle?row.max_frags_battle:data.cruiser.max_frags_battle ;\r\n          data.cruiser.max_xp  = row.max_xp > data.cruiser.max_xp?row.max_xp:data.cruiser.max_xp ;\r\n          data.cruiser.ave_xp = divisionWhole((row.ave_xp + data.cruiser.ave_xp * data.cruiser.count),(data.cruiser.count+1))\r\n          data.cruiser.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.cruiser.ave_damage_dealt * data.cruiser.count),(data.cruiser.count+1))\r\n          data.cruiser.ave_frags = division((row.ave_frags + data.cruiser.ave_frags * data.cruiser.count),(data.cruiser.count+1))\r\n          data.cruiser.battles += row.battles\r\n          data.cruiser.wins += row.wins\r\n          data.cruiser.win_rate = division(data.cruiser.wins,data.cruiser.battles);\r\n          data.cruiser.survival_rate = division((row.survival_rate + data.cruiser.survival_rate * data.cruiser.count),(data.cruiser.count+1))\r\n          data.cruiser.count ++;\r\n        }else if(row.type === \"Battleship\"){\r\n          data.battleship.max_damage_dealt = row.max_damage_dealt > data.battleship.max_damage_dealt?row.max_damage_dealt:data.battleship.max_damage_dealt;\r\n          data.battleship.max_frags_battle  = row.max_frags_battle > data.battleship.max_frags_battle?row.max_frags_battle:data.battleship.max_frags_battle ;\r\n          data.battleship.max_xp  = row.max_xp > data.battleship.max_xp?row.max_xp:data.battleship.max_xp ;\r\n          data.battleship.ave_xp = divisionWhole((row.ave_xp + data.battleship.ave_xp * data.battleship.count),(data.battleship.count+1))\r\n          data.battleship.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.battleship.ave_damage_dealt * data.battleship.count),(data.battleship.count+1))\r\n          data.battleship.ave_frags = division((row.ave_frags + data.battleship.ave_frags * data.battleship.count),(data.battleship.count+1))\r\n          data.battleship.battles += row.battles\r\n          data.battleship.wins += row.wins\r\n          data.battleship.win_rate = division(data.battleship.wins,data.battleship.battles);\r\n          data.battleship.survival_rate = division((row.survival_rate + data.battleship.survival_rate * data.battleship.count),(data.battleship.count+1))\r\n          data.battleship.count ++;\r\n        }else if(row.type === \"AirCarrier\"){\r\n          data.carrier.max_damage_dealt = row.max_damage_dealt > data.carrier.max_damage_dealt?row.max_damage_dealt:data.carrier.max_damage_dealt;\r\n          data.carrier.max_frags_battle  = row.max_frags_battle > data.carrier.max_frags_battle?row.max_frags_battle:data.carrier.max_frags_battle ;\r\n          data.carrier.max_xp  = row.max_xp > data.carrier.max_xp?row.max_xp:data.carrier.max_xp ;\r\n          data.carrier.ave_xp = divisionWhole((row.ave_xp + data.carrier.ave_xp * data.carrier.count),(data.carrier.count+1))\r\n          data.carrier.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.carrier.ave_damage_dealt * data.carrier.count),(data.carrier.count+1))\r\n          data.carrier.ave_frags = division((row.ave_frags + data.carrier.ave_frags * data.carrier.count),(data.carrier.count+1))\r\n          data.carrier.battles += row.battles\r\n          data.carrier.wins += row.wins\r\n          data.carrier.win_rate = division(data.carrier.wins,data.carrier.battles);\r\n          data.carrier.survival_rate = division((row.survival_rate + data.carrier.survival_rate * data.carrier.count),(data.carrier.count+1))\r\n          data.carrier.count ++;\r\n        }\r\n      })\r\n    }\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data.destroyer.battles, label:\"Destroyer\"},\r\n      {Battles:this.state.data.cruiser.battles, label:\"Cruiser\"},\r\n      {Battles:this.state.data.battleship.battles, label:\"Battleship\"},\r\n      {Battles:this.state.data.carrier.battles, label:\"Aircraft Carrier\"},\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipNationGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data: {\r\n        usa:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ussr:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        uk:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        japan:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        france:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        germany:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        poland:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_asia:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        italy:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        commonwealth:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        pan_america:{\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        }\r\n      }\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.build(this.props.data);\r\n  }\r\n  build(input){\r\n    var data = {\r\n      usa:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      ussr:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      uk:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      japan:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      france:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      germany:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      poland:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_asia:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      italy:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      commonwealth:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      pan_america:{\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      }\r\n    }\r\n    if(input){\r\n      input.forEach((row)=>{\r\n        if(row.nation === \"usa\"){\r\n          data.usa.max_damage_dealt = row.max_damage_dealt > data.usa.max_damage_dealt?row.max_damage_dealt:data.usa.max_damage_dealt;\r\n          data.usa.max_frags_battle  = row.max_frags_battle > data.usa.max_frags_battle?row.max_frags_battle:data.usa.max_frags_battle ;\r\n          data.usa.max_xp  = row.max_xp > data.usa.max_xp?row.max_xp:data.usa.max_xp ;\r\n          data.usa.ave_xp = divisionWhole((row.ave_xp + data.usa.ave_xp * data.usa.count),(data.usa.count+1))\r\n          data.usa.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.usa.ave_damage_dealt * data.usa.count),(data.usa.count+1))\r\n          data.usa.ave_frags = division((row.ave_frags + data.usa.ave_frags * data.usa.count),(data.usa.count+1))\r\n          data.usa.battles += row.battles\r\n          data.usa.wins += row.wins\r\n          data.usa.win_rate = division(data.usa.wins,data.usa.battles);\r\n          data.usa.survival_rate = division((row.survival_rate + data.usa.survival_rate * data.usa.count),(data.usa.count+1))\r\n          data.usa.count ++;\r\n        }else if(row.nation === \"ussr\"){\r\n          data.ussr.max_damage_dealt = row.max_damage_dealt > data.ussr.max_damage_dealt?row.max_damage_dealt:data.ussr.max_damage_dealt;\r\n          data.ussr.max_frags_battle  = row.max_frags_battle > data.ussr.max_frags_battle?row.max_frags_battle:data.ussr.max_frags_battle ;\r\n          data.ussr.max_xp  = row.max_xp > data.ussr.max_xp?row.max_xp:data.ussr.max_xp ;\r\n          data.ussr.ave_xp = divisionWhole((row.ave_xp + data.ussr.ave_xp * data.ussr.count),(data.ussr.count+1))\r\n          data.ussr.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.ussr.ave_damage_dealt * data.ussr.count),(data.ussr.count+1))\r\n          data.ussr.ave_frags = division((row.ave_frags + data.ussr.ave_frags * data.ussr.count),(data.ussr.count+1))\r\n          data.ussr.battles += row.battles\r\n          data.ussr.wins += row.wins\r\n          data.ussr.win_rate = division(data.ussr.wins,data.ussr.battles);\r\n          data.ussr.survival_rate = division((row.survival_rate + data.ussr.survival_rate * data.ussr.count),(data.ussr.count+1))\r\n          data.ussr.count ++;\r\n        }else if(row.nation === \"uk\"){\r\n          data.uk.max_damage_dealt = row.max_damage_dealt > data.uk.max_damage_dealt?row.max_damage_dealt:data.uk.max_damage_dealt;\r\n          data.uk.max_frags_battle  = row.max_frags_battle > data.uk.max_frags_battle?row.max_frags_battle:data.uk.max_frags_battle ;\r\n          data.uk.max_xp  = row.max_xp > data.uk.max_xp?row.max_xp:data.uk.max_xp ;\r\n          data.uk.ave_xp = divisionWhole((row.ave_xp + data.uk.ave_xp * data.uk.count),(data.uk.count+1))\r\n          data.uk.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.uk.ave_damage_dealt * data.uk.count),(data.uk.count+1))\r\n          data.uk.ave_frags = division((row.ave_frags + data.uk.ave_frags * data.uk.count),(data.uk.count+1))\r\n          data.uk.battles += row.battles\r\n          data.uk.wins += row.wins\r\n          data.uk.win_rate = division(data.uk.wins,data.uk.battles);\r\n          data.uk.survival_rate = division((row.survival_rate + data.uk.survival_rate * data.uk.count),(data.uk.count+1))\r\n          data.uk.count ++;\r\n        }else if(row.nation === \"japan\"){\r\n          data.japan.max_damage_dealt = row.max_damage_dealt > data.japan.max_damage_dealt?row.max_damage_dealt:data.japan.max_damage_dealt;\r\n          data.japan.max_frags_battle  = row.max_frags_battle > data.japan.max_frags_battle?row.max_frags_battle:data.japan.max_frags_battle ;\r\n          data.japan.max_xp  = row.max_xp > data.japan.max_xp?row.max_xp:data.japan.max_xp ;\r\n          data.japan.ave_xp = divisionWhole((row.ave_xp + data.japan.ave_xp * data.japan.count),(data.japan.count+1))\r\n          data.japan.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.japan.ave_damage_dealt * data.japan.count),(data.japan.count+1))\r\n          data.japan.ave_frags = division((row.ave_frags + data.japan.ave_frags * data.japan.count),(data.japan.count+1))\r\n          data.japan.battles += row.battles\r\n          data.japan.wins += row.wins\r\n          data.japan.win_rate = division(data.japan.wins,data.japan.battles);\r\n          data.japan.survival_rate = division((row.survival_rate + data.japan.survival_rate * data.japan.count),(data.japan.count+1))\r\n          data.japan.count ++;\r\n        }else if(row.nation === \"france\"){\r\n          data.france.max_damage_dealt = row.max_damage_dealt > data.france.max_damage_dealt?row.max_damage_dealt:data.france.max_damage_dealt;\r\n          data.france.max_frags_battle  = row.max_frags_battle > data.france.max_frags_battle?row.max_frags_battle:data.france.max_frags_battle ;\r\n          data.france.max_xp  = row.max_xp > data.france.max_xp?row.max_xp:data.france.max_xp ;\r\n          data.france.ave_xp = divisionWhole((row.ave_xp + data.france.ave_xp * data.france.count),(data.france.count+1))\r\n          data.france.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.france.ave_damage_dealt * data.france.count),(data.france.count+1))\r\n          data.france.ave_frags = division((row.ave_frags + data.france.ave_frags * data.france.count),(data.france.count+1))\r\n          data.france.battles += row.battles\r\n          data.france.wins += row.wins\r\n          data.france.win_rate = division(data.france.wins,data.france.battles);\r\n          data.france.survival_rate = division((row.survival_rate + data.france.survival_rate * data.france.count),(data.france.count+1))\r\n          data.france.count ++;\r\n        }else if(row.nation === \"germany\"){\r\n          data.germany.max_damage_dealt = row.max_damage_dealt > data.germany.max_damage_dealt?row.max_damage_dealt:data.germany.max_damage_dealt;\r\n          data.germany.max_frags_battle  = row.max_frags_battle > data.germany.max_frags_battle?row.max_frags_battle:data.germany.max_frags_battle ;\r\n          data.germany.max_xp  = row.max_xp > data.germany.max_xp?row.max_xp:data.germany.max_xp ;\r\n          data.germany.ave_xp = divisionWhole((row.ave_xp + data.germany.ave_xp * data.germany.count),(data.germany.count+1))\r\n          data.germany.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.germany.ave_damage_dealt * data.germany.count),(data.germany.count+1))\r\n          data.germany.ave_frags = division((row.ave_frags + data.germany.ave_frags * data.germany.count),(data.germany.count+1))\r\n          data.germany.battles += row.battles\r\n          data.germany.wins += row.wins\r\n          data.germany.win_rate = division(data.germany.wins,data.germany.battles);\r\n          data.germany.survival_rate = division((row.survival_rate + data.germany.survival_rate * data.germany.count),(data.germany.count+1))\r\n          data.germany.count ++;\r\n        }else if(row.nation === \"poland\"){\r\n          data.poland.max_damage_dealt = row.max_damage_dealt > data.poland.max_damage_dealt?row.max_damage_dealt:data.poland.max_damage_dealt;\r\n          data.poland.max_frags_battle  = row.max_frags_battle > data.poland.max_frags_battle?row.max_frags_battle:data.poland.max_frags_battle ;\r\n          data.poland.max_xp  = row.max_xp > data.poland.max_xp?row.max_xp:data.poland.max_xp ;\r\n          data.poland.ave_xp = divisionWhole((row.ave_xp + data.poland.ave_xp * data.poland.count),(data.poland.count+1))\r\n          data.poland.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.poland.ave_damage_dealt * data.poland.count),(data.poland.count+1))\r\n          data.poland.ave_frags = division((row.ave_frags + data.poland.ave_frags * data.poland.count),(data.poland.count+1))\r\n          data.poland.battles += row.battles\r\n          data.poland.wins += row.wins\r\n          data.poland.win_rate = division(data.poland.wins,data.poland.battles);\r\n          data.poland.survival_rate = division((row.survival_rate + data.poland.survival_rate * data.poland.count),(data.poland.count+1))\r\n          data.poland.count ++;\r\n        }else if(row.nation === \"italy\"){\r\n          data.italy.max_damage_dealt = row.max_damage_dealt > data.italy.max_damage_dealt?row.max_damage_dealt:data.italy.max_damage_dealt;\r\n          data.italy.max_frags_battle  = row.max_frags_battle > data.italy.max_frags_battle?row.max_frags_battle:data.italy.max_frags_battle ;\r\n          data.italy.max_xp  = row.max_xp > data.italy.max_xp?row.max_xp:data.italy.max_xp ;\r\n          data.italy.ave_xp = divisionWhole((row.ave_xp + data.italy.ave_xp * data.italy.count),(data.italy.count+1))\r\n          data.italy.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.italy.ave_damage_dealt * data.italy.count),(data.italy.count+1))\r\n          data.italy.ave_frags = division((row.ave_frags + data.italy.ave_frags * data.italy.count),(data.italy.count+1))\r\n          data.italy.battles += row.battles\r\n          data.italy.wins += row.wins\r\n          data.italy.win_rate = division(data.italy.wins,data.italy.battles);\r\n          data.italy.survival_rate = division((row.survival_rate + data.italy.survival_rate * data.italy.count),(data.italy.count+1))\r\n          data.italy.count ++;\r\n        }else if(row.nation === \"pan_asia\"){\r\n          data.pan_asia.max_damage_dealt = row.max_damage_dealt > data.pan_asia.max_damage_dealt?row.max_damage_dealt:data.pan_asia.max_damage_dealt;\r\n          data.pan_asia.max_frags_battle  = row.max_frags_battle > data.pan_asia.max_frags_battle?row.max_frags_battle:data.pan_asia.max_frags_battle ;\r\n          data.pan_asia.max_xp  = row.max_xp > data.pan_asia.max_xp?row.max_xp:data.pan_asia.max_xp ;\r\n          data.pan_asia.ave_xp = divisionWhole((row.ave_xp + data.pan_asia.ave_xp * data.pan_asia.count),(data.pan_asia.count+1))\r\n          data.pan_asia.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_asia.ave_damage_dealt * data.pan_asia.count),(data.pan_asia.count+1))\r\n          data.pan_asia.ave_frags = division((row.ave_frags + data.pan_asia.ave_frags * data.pan_asia.count),(data.pan_asia.count+1))\r\n          data.pan_asia.battles += row.battles\r\n          data.pan_asia.wins += row.wins\r\n          data.pan_asia.win_rate = division(data.pan_asia.wins,data.pan_asia.battles);\r\n          data.pan_asia.survival_rate = division((row.survival_rate + data.pan_asia.survival_rate * data.pan_asia.count),(data.pan_asia.count+1))\r\n          data.pan_asia.count ++;\r\n        }else if(row.nation === \"commonwealth\"){\r\n          data.commonwealth.max_damage_dealt = row.max_damage_dealt > data.commonwealth.max_damage_dealt?row.max_damage_dealt:data.commonwealth.max_damage_dealt;\r\n          data.commonwealth.max_frags_battle  = row.max_frags_battle > data.commonwealth.max_frags_battle?row.max_frags_battle:data.commonwealth.max_frags_battle ;\r\n          data.commonwealth.max_xp  = row.max_xp > data.commonwealth.max_xp?row.max_xp:data.commonwealth.max_xp ;\r\n          data.commonwealth.ave_xp = divisionWhole((row.ave_xp + data.commonwealth.ave_xp * data.commonwealth.count),(data.commonwealth.count+1))\r\n          data.commonwealth.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.commonwealth.ave_damage_dealt * data.commonwealth.count),(data.commonwealth.count+1))\r\n          data.commonwealth.ave_frags = division((row.ave_frags + data.commonwealth.ave_frags * data.commonwealth.count),(data.commonwealth.count+1))\r\n          data.commonwealth.battles += row.battles\r\n          data.commonwealth.wins += row.wins\r\n          data.commonwealth.win_rate = division(data.commonwealth.wins,data.commonwealth.battles);\r\n          data.commonwealth.survival_rate = division((row.survival_rate + data.commonwealth.survival_rate * data.commonwealth.count),(data.commonwealth.count+1))\r\n          data.commonwealth.count ++;\r\n        }else if(row.nation === \"pan_america\"){\r\n          data.pan_america.max_damage_dealt = row.max_damage_dealt > data.pan_america.max_damage_dealt?row.max_damage_dealt:data.pan_america.max_damage_dealt;\r\n          data.pan_america.max_frags_battle  = row.max_frags_battle > data.pan_america.max_frags_battle?row.max_frags_battle:data.pan_america.max_frags_battle ;\r\n          data.pan_america.max_xp  = row.max_xp > data.pan_america.max_xp?row.max_xp:data.pan_america.max_xp ;\r\n          data.pan_america.ave_xp = divisionWhole((row.ave_xp + data.pan_america.ave_xp * data.pan_america.count),(data.pan_america.count+1))\r\n          data.pan_america.ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data.pan_america.ave_damage_dealt * data.pan_america.count),(data.pan_america.count+1))\r\n          data.pan_america.ave_frags = division((row.ave_frags + data.pan_america.ave_frags * data.pan_america.count),(data.pan_america.count+1))\r\n          data.pan_america.battles += row.battles\r\n          data.pan_america.wins += row.wins\r\n          data.pan_america.win_rate = division(data.pan_america.wins,data.pan_america.battles);\r\n          data.pan_america.survival_rate = division((row.survival_rate + data.pan_america.survival_rate * data.pan_america.count),(data.pan_america.count+1))\r\n          data.pan_america.count ++;\r\n        }\r\n      })\r\n    }\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data.usa.battles, label:\"USA\"},\r\n      {Battles:this.state.data.ussr.battles, label:\"USSR\"},\r\n      {Battles:this.state.data.uk.battles, label:\"UK\"},\r\n      {Battles:this.state.data.japan.battles, label:\"Japan\"},\r\n      {Battles:this.state.data.france.battles, label:\"France\"},\r\n      {Battles:this.state.data.germany.battles, label:\"Germany\"},\r\n      {Battles:this.state.data.poland.battles, label:\"Poland\"},\r\n      {Battles:this.state.data.pan_asia.battles, label:\"Pan Asia\"},\r\n      {Battles:this.state.data.italy.battles, label:\"Italy\"},\r\n      {Battles:this.state.data.commonwealth.battles, label:\"Common Wealth\"},\r\n      {Battles:this.state.data.pan_america.battles, label:\"Pan America\"},\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Label, Menu, Table, Segment, Statistic, Header } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {RadialChart, Hint} from 'react-vis';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class PlayerShipTierGraph extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: false,\r\n      data:[\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        {\r\n          wins:0,\r\n          battles:0,\r\n          win_rate:0,\r\n          survival_rate: 0,\r\n          max_xp:0,\r\n          max_frags_battle:0,\r\n          max_damage_dealt:0,\r\n          max_planes_killed:0,\r\n          ave_xp:0,\r\n          ave_frags:0,\r\n          ave_damage_dealt:0,\r\n          ave_planes_killed:0,\r\n          count: 0,\r\n        },\r\n        ],\r\n    }\r\n    this.build = this.build.bind(this);\r\n  }\r\n  componentWillReceiveProps() {\r\n    this.build(this.props.data);\r\n  }\r\n  build(input){\r\n    var data = [\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n      {\r\n        wins:0,\r\n        battles:0,\r\n        win_rate:0,\r\n        survival_rate: 0,\r\n        max_xp:0,\r\n        max_frags_battle:0,\r\n        max_damage_dealt:0,\r\n        max_planes_killed:0,\r\n        ave_xp:0,\r\n        ave_frags:0,\r\n        ave_damage_dealt:0,\r\n        ave_planes_killed:0,\r\n        count: 0,\r\n      },\r\n    ];\r\n    if(input){\r\n      input.forEach((row)=>{\r\n        var tier = parseInt(row.tier);\r\n        data[tier-1].max_damage_dealt = row.max_damage_dealt > data[tier-1].max_damage_dealt?row.max_damage_dealt:data[tier-1].max_damage_dealt;\r\n        data[tier-1].max_frags_battle  = row.max_frags_battle > data[tier-1].max_frags_battle?row.max_frags_battle:data[tier-1].max_frags_battle ;\r\n        data[tier-1].max_xp  = row.max_xp > data[tier-1].max_xp?row.max_xp:data[tier-1].max_xp ;\r\n        data[tier-1].ave_xp = divisionWhole((row.ave_xp + data[tier-1].ave_xp * data[tier-1].count),(data[tier-1].count+1))\r\n        data[tier-1].ave_damage_dealt = divisionWhole((row.ave_damage_dealt + data[tier-1].ave_damage_dealt * data[tier-1].count),(data[tier-1].count+1))\r\n        data[tier-1].ave_frags = division((row.ave_frags + data[tier-1].ave_frags * data[tier-1].count),(data[tier-1].count+1))\r\n        data[tier-1].battles += row.battles\r\n        data[tier-1].wins += row.wins\r\n        data[tier-1].win_rate = division(data[tier-1].wins,data[tier-1].battles);\r\n        data[tier-1].survival_rate = division((row.survival_rate + data[tier-1].survival_rate * data[tier-1].count),(data[tier-1].count+1))\r\n        data[tier-1].count ++;\r\n      })\r\n    }\r\n    this.setState({data:data});\r\n  }\r\n  render() {\r\n    var values = [\r\n      {Battles:this.state.data[0].battles, label:\"I\"},\r\n      {Battles:this.state.data[1].battles, label:\"II\"},\r\n      {Battles:this.state.data[2].battles, label:\"III\"},\r\n      {Battles:this.state.data[3].battles, label:\"IV\"},\r\n      {Battles:this.state.data[4].battles, label:\"V\"},\r\n      {Battles:this.state.data[5].battles, label:\"VI\"},\r\n      {Battles:this.state.data[6].battles, label:\"VII\"},\r\n      {Battles:this.state.data[7].battles, label:\"VIII\"},\r\n      {Battles:this.state.data[8].battles, label:\"IX\"},\r\n      {Battles:this.state.data[9].battles, label:\"X\"},\r\n\r\n    ];\r\n    return (\r\n      <div>\r\n      <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/react-vis/dist/style.css\"/>\r\n      <RadialChart\r\n        innerRadius={60}\r\n        radius={100}\r\n        getAngle={d => d.Battles}\r\n        data={values}\r\n        width={300}\r\n        height={300}\r\n        padAngle={0.04}\r\n        onValueMouseOver={v => this.setState({value: v})}\r\n        onSeriesMouseOut={v => this.setState({value: false})}\r\n      >\r\n        {this.state.value !== false &&\r\n          <Hint value={this.state.value}>\r\n          <Segment>\r\n            <Statistic horizontal>\r\n              <Statistic.Value>{this.state.value.Battles.toLocaleString()}</Statistic.Value>\r\n              <Statistic.Label>{this.state.value.label}</Statistic.Label>\r\n            </Statistic>\r\n          </Segment>\r\n          </Hint>}\r\n      </RadialChart>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nexport default class ToTopButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        intervalId: 0\r\n    };\r\n  }\r\n\r\n  scrollStep() {\r\n    if (window.pageYOffset === 0) {\r\n        clearInterval(this.state.intervalId);\r\n    }\r\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\r\n  }\r\n\r\n  scrollToTop() {\r\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  render () {\r\n      return <Button\r\n              size=\"massive\"\r\n              circular\r\n              icon ='angle double up'\r\n              color=\"blue\"\r\n              style={{\r\n                position: \"fixed\",\r\n                bottom: \"50px\",\r\n                right: \"50px\",\r\n              }}\r\n              onClick={ () => { this.scrollToTop(); }}>\r\n              </Button>;\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport PlayerShipTable from '../PlayerTable/PlayerShipTable.js';\r\nimport PlayerShipTablePad from '../PlayerTable/PlayerShipTablePad.js';\r\nimport PlayerShipTableMobile from '../PlayerTable/PlayerShipTableMobile.js';\r\nimport PlayerRankTable from '../PlayerTable/PlayerRankTable.js';\r\nimport PlayerRankTableMobile from '../PlayerTable/PlayerRankTableMobile.js';\r\nimport PlayerRankTablePad from '../PlayerTable/PlayerRankTablePad.js';\r\nimport PlayerShipTypeTable from '../PlayerTable/PlayerShipTypeTable.js';\r\nimport PlayerShipTierTable from '../PlayerTable/PlayerShipTierTable.js';\r\nimport PlayerShipNationTable from '../PlayerTable/PlayerShipNationTable.js';\r\nimport PlayerShipTypeTableMobile from '../PlayerTable/PlayerShipTypeTableMobile.js';\r\nimport PlayerShipTierTableMobile from '../PlayerTable/PlayerShipTierTableMobile.js';\r\nimport PlayerShipNationTableMobile from '../PlayerTable/PlayerShipNationTableMobile.js';\r\nimport PlayerShipTypeGraph from '../PlayerGraph/PlayerShipTypeGraph.js';\r\nimport PlayerShipNationGraph from '../PlayerGraph/PlayerShipNationGraph.js';\r\nimport PlayerShipTierGraph from '../PlayerGraph/PlayerShipTierGraph.js';\r\nimport ToTopButton from '../../Common/ToTopButton.js';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nconst achievementsDict = {\r\n    \"DOUBLE_KILL\":{'text':'Double Strike','image':'http://wiki.gcdn.co/images/f/f3/Icon_achievement_DOUBLE_KILL.png'},\r\n    \"MAIN_CALIBER\":{'text':'High Caliber','image':'http://wiki.gcdn.co/images/5/51/Icon_achievement_MAIN_CALIBER.png'},\r\n    \"LIQUIDATOR\":{'text':'Liquidator','image':'http://wiki.gcdn.co/images/3/3f/Icon_achievement_LIQUIDATOR.png'},\r\n    \"WITHERING\":{'text':'Witherer','image':'http://wiki.gcdn.co/images/5/5f/Icon_achievement_WITHERING.png'},\r\n    \"FIREPROOF\":{'text':'Fireproof','image':'http://wiki.gcdn.co/images/0/03/Icon_achievement_FIREPROOF.png'},\r\n    \"ARSONIST\":{'text':'Arsonist','image':'http://wiki.gcdn.co/images/5/57/Icon_achievement_ARSONIST.png'},\r\n    \"DETONATED\":{'text':'Detonation','image':'http://wiki.gcdn.co/images/f/f7/Icon_achievement_DETONATED.png'},\r\n    \"INSTANT_KILL\":{'text':'Devastating Strike','image':'http://wiki.gcdn.co/images/0/01/Icon_achievement_INSTANT_KILL.png'},\r\n    \"UNSINKABLE\":{'text':'Unsinkable','image':'http://wiki.gcdn.co/images/c/c0/Icon_achievement_UNSINKABLE.png'},\r\n    \"CLEAR_SKY\":{'text':'Clear Sky','image':'http://wiki.gcdn.co/images/e/e4/Icon_achievement_AIRKING.png'},\r\n    \"DREADNOUGHT\":{'text':'Dreadnought','image':'http://wiki.gcdn.co/images/2/24/Icon_achievement_DREADNOUGHT.png'},\r\n    \"FIRST_BLOOD\":{'text':'First Blood','image':'http://wiki.gcdn.co/images/f/f4/Icon_achievement_FIRST_BLOOD.png'},\r\n    \"HEADBUTT\":{'text':'Die-Hard','image':'http://wiki.gcdn.co/images/3/37/Icon_achievement_HEADBUTT.png'},\r\n    \"ONE_SOLDIER_IN_THE_FIELD\":{'text':'Solo Warrior','image':'http://wiki.gcdn.co/images/5/50/Icon_achievement_ONE_SOLDIER_IN_THE_FIELD.png'},\r\n    \"WARRIOR\":{'text':'Kraken Unleashed','image':'http://wiki.gcdn.co/images/0/0c/Icon_achievement_WARRIOR.png'},\r\n    \"SUPPORT\":{'text':'Confederate','image':'http://wiki.gcdn.co/images/3/32/Icon_achievement_SUPPORT.png'},\r\n    \"ATBA_CALIBER\":{'text':'Close Quarters Expert','image':'http://wiki.gcdn.co/images/1/1a/Icon_achievement_ATBA_CALIBER.png'},\r\n    \"RETRIBUTION\":{'text':\"It's Just A Flesh Wound!\",'image':'http://wiki.gcdn.co/images/4/4d/Icon_achievement_RETRIBUTION.png'},\r\n};\r\n\r\nexport default class PlayerIndex extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id: '',\r\n      windowwidth: window.innerWidth,\r\n      playerShipTableData: null,\r\n      playerRankTableData: null,\r\n      shipdetails: null,\r\n      shipnames: null,\r\n      rankshipnames: null,\r\n      seasonOptions: [{key: '0', value: 'all', text: ''}],\r\n      data: {\"last_battle_time\":0,\"account_id\":0,\"leveling_tier\":0,\"created_at\":1457320991,\"leveling_points\":12806,\"updated_at\":1555877501,\"private\":null,\"hidden_profile\":false,\"logout_at\":1555877490,\"karma\":null,\"statistics\":{\"distance\":496492,\"battles\":12716,\"pvp\":{\"max_xp\":6511,\"damage_to_buildings\":619131,\"main_battery\":{\"max_frags_battle\":8,\"frags\":9655,\"hits\":763954,\"max_frags_ship_id\":3765384944,\"shots\":2056909},\"max_ships_spotted_ship_id\":3751786288,\"max_damage_scouting\":334282,\"art_agro\":4000000001,\"max_xp_ship_id\":3760109008,\"ships_spotted\":14066,\"second_battery\":{\"max_frags_battle\":3,\"frags\":364,\"hits\":98556,\"max_frags_ship_id\":3751753712,\"shots\":488873},\"max_frags_ship_id\":4184815568,\"xp\":20988609,\"survived_battles\":5087,\"dropped_capture_points\":0,\"max_damage_dealt_to_buildings\":213600,\"torpedo_agro\":848533559,\"draws\":4,\"control_captured_points\":99320,\"battles_since_510\":9057,\"max_total_agro_ship_id\":4276041424,\"planes_killed\":48366,\"battles\":11055,\"max_ships_spotted\":12,\"max_suppressions_ship_id\":4276041424,\"survived_wins\":4322,\"frags\":14915,\"damage_scouting\":257570466,\"max_total_agro\":4793200,\"max_frags_battle\":8,\"capture_points\":0,\"ramming\":{\"max_frags_battle\":1,\"frags\":117,\"max_frags_ship_id\":3760109008},\"suppressions_count\":3,\"max_suppressions_count\":1,\"torpedoes\":{\"max_frags_battle\":4,\"frags\":1359,\"hits\":6254,\"max_frags_ship_id\":4282267344,\"shots\":82849},\"max_planes_killed_ship_id\":4288591856,\"aircraft\":{\"max_frags_battle\":7,\"frags\":1551,\"max_frags_ship_id\":3763320816},\"team_capture_points\":1112945,\"control_dropped_points\":64546,\"max_damage_dealt\":342198,\"max_damage_dealt_to_buildings_ship_id\":4282333168,\"max_damage_dealt_ship_id\":4276041424,\"wins\":6872,\"losses\":4179,\"damage_dealt\":892778787,\"max_planes_killed\":83,\"max_scouting_damage_ship_id\":4279219920,\"team_dropped_capture_points\":542979,\"battles_since_512\":8542}},\"nickname\":\"\",\"stats_updated_at\":1555877501},\r\n      clandata: {\"0\":{\"members_count\":46,\"name\":\"Hiryu Ride Face\",\"creator_name\":\"Aikun96\",\"clan_id\":0,\"created_at\":1484747968,\"updated_at\":1555210651,\"leader_name\":\"ChipsChan\",\"members_ids\":[1003333910],\"creator_id\":1016393566,\"tag\":\"KUMA\",\"old_name\":null,\"is_clan_disbanded\":false,\"renamed_at\":null,\"old_tag\":null,\"leader_id\":1013587959,\"description\":\"\"}},\r\n      achievements:{\"battle\":{\"\":0}},\r\n      clansummary: \"\",\r\n      rankdata:null,\r\n    }\r\n    this.buildAchievements = this.buildAchievements.bind(this);\r\n    this.buildRankSummary = this.buildRankSummary.bind(this);\r\n    this.buildSprintRankSummary = this.buildSprintRankSummary.bind(this);\r\n    this.reloadData = this.reloadData.bind(this);\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({account_id:nextProps.account_id});\r\n    this.reloadData(nextProps.account_id);\r\n  }\r\n  componentDidMount(){\r\n    this.reloadData(this.props.account_id);\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n  reloadData(account_id){\r\n    axios.get(\"https://api.worldofwarships.com/wows/account/info/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n      this.setState({data: response.data.data[account_id]});\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    this.setState({\r\n      clandata: {\"0\":{\"members_count\":46,\"name\":\"Hiryu Ride Face\",\"creator_name\":\"Aikun96\",\"clan_id\":0,\"created_at\":1484747968,\"updated_at\":1555210651,\"leader_name\":\"ChipsChan\",\"members_ids\":[1003333910],\"creator_id\":1016393566,\"tag\":\"KUMA\",\"old_name\":null,\"is_clan_disbanded\":false,\"renamed_at\":null,\"old_tag\":null,\"leader_id\":1013587959,\"description\":\"\"}},\r\n      clansummary: \"\",\r\n    });\r\n    axios.get(\"https://api.worldofwarships.com/wows/clans/accountinfo/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var clan_id = response.data.data[account_id].clan_id;\r\n        axios.get(\"  https://api.worldofwarships.com/wows/clans/info/?application_id=\" + application_id + \"&clan_id=\" + clan_id)\r\n        .then((response)=>{\r\n\r\n              this.setState({\r\n                clandata: response.data.data[clan_id],\r\n                clansummary: \"[\" + response.data.data[clan_id].tag + \"] \" + response.data.data[clan_id].name,\r\n              });\r\n\r\n        })\r\n        .catch((error) => console.log(error));\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    this.setState({achievements:{\"battle\":{\"\":0}}});\r\n    axios.get(\"https://api.worldofwarships.com/wows/account/achievements/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        this.setState({achievements:response.data.data[account_id]});\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    this.setState({rankdata:null});\r\n    axios.get(\"https://api.worldofwarships.com/wows/seasons/accountinfo/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        this.setState({rankdata:response.data.data[account_id].seasons});\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    var playerShipTableData = [];\r\n    var statdata = {};\r\n    var ship_ids = [];\r\n    var shipnames = [];\r\n    var shipdetails = [];\r\n    this.setState({playerShipTableData :null ,shipnames:null,shipdetails:null});\r\n    axios.get(\"https://api.worldofwarships.com/wows/ships/stats/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var res = response.data.data[account_id];\r\n        res.forEach((ship) => {\r\n          ship_ids.push(ship.ship_id);\r\n          statdata[ship.ship_id]={\r\n              ship_id: ship.ship_id,\r\n              wins: ship.pvp.wins,\r\n              battles: (ship.pvp.wins+ship.pvp.losses+ship.pvp.draws),\r\n              win_rate: division(ship.pvp.wins,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              survival_rate: division(ship.pvp.survived_battles,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              max_xp: ship.pvp.max_xp,\r\n              max_frags_battle: ship.pvp.max_frags_battle,\r\n              max_damage_dealt: ship.pvp.max_damage_dealt,\r\n              max_planes_killed: ship.pvp.max_planes_killed,\r\n\r\n              ave_xp: divisionWhole(ship.pvp.xp,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_frags: division(ship.pvp.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_damage_dealt: divisionWhole(ship.pvp.damage_dealt,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              ave_planes_killed: division(ship.pvp.planes_killed,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              main_battery_max_frags_battle: ship.pvp.main_battery.max_frags_battle,\r\n              main_battery_frags: division(ship.pvp.main_battery.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              main_battery_hit_rate: division(ship.pvp.main_battery.hits,ship.pvp.main_battery.shots),\r\n\r\n              torpedoes_max_frags_battle: ship.pvp.torpedoes.max_frags_battle,\r\n              torpedoes_frags: division(ship.pvp.torpedoes.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              torpedoes_hit_rate: division(ship.pvp.torpedoes.hits,ship.pvp.torpedoes.shots),\r\n\r\n              second_battery_max_frags_battle: ship.pvp.second_battery.max_frags_battle,\r\n              second_battery_frags: division(ship.pvp.second_battery.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n              second_battery_hit_rate: division(ship.pvp.second_battery.hits,ship.pvp.second_battery.shots),\r\n\r\n              aircraft_max_frags_battle: ship.pvp.aircraft.max_frags_battle,\r\n              aircraft_frags: division(ship.pvp.aircraft.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n              ramming_max_frags_battle: ship.pvp.ramming.max_frags_battle,\r\n              ramming_frags: division(ship.pvp.ramming.frags,(ship.pvp.wins+ship.pvp.losses+ship.pvp.draws)),\r\n\r\n\r\n              team_capture_points: ship.pvp.team_capture_points,\r\n              dropped_capture_points: ship.pvp.dropped_capture_points,\r\n              ships_spotted: ship.pvp.ships_spotted,\r\n              max_damage_scouting: ship.pvp.max_damage_scouting,\r\n              survived_wins: ship.pvp.survived_wins,\r\n          }\r\n        })\r\n    })\r\n    .then(()=>{\r\n      var slice = 99;\r\n      for(var i = 0; i < ship_ids.length/slice; i++){\r\n        var ship_id_strings = \"\";\r\n        if (i * slice + slice < ship_ids.length){\r\n          var limit = i * slice + slice;\r\n        }else{\r\n          var limit = ship_ids.length;\r\n        }\r\n        for(var j = i * slice; j < limit; j++){\r\n          ship_id_strings += ship_ids[j] + \",\";\r\n        }\r\n        axios.get(\"https://api.worldofwarships.com/wows/encyclopedia/ships/?application_id=\" + application_id,{params:{ship_id:ship_id_strings.substring(0,ship_id_strings.length-1)}})\r\n        .then((shipresponse)=>{\r\n          for (const [ship_id, shipres] of Object.entries(shipresponse.data.data)) {\r\n            if(shipres && statdata[ship_id.toString()]){\r\n              shipnames.push({key: shipres.name, value: shipres.name, text: shipres.name});\r\n              shipdetails.push({\r\n                ship_id: shipres.ship_id,\r\n                name: shipres.name,\r\n                image: shipres.images.small,\r\n                nation: shipres.nation,\r\n                tier: shipres.tier,\r\n                type: shipres.type,\r\n              });\r\n              playerShipTableData.push({\r\n                ship_id: shipres.ship_id,\r\n                name: shipres.name,\r\n                image: shipres.images.small,\r\n                nation: shipres.nation,\r\n                tier: shipres.tier,\r\n                type: shipres.type,\r\n\r\n                wins: statdata[ship_id.toString()].wins,\r\n                battles: statdata[ship_id.toString()].battles,\r\n                win_rate:statdata[ship_id.toString()].win_rate,\r\n                survival_rate: statdata[ship_id.toString()].survival_rate,\r\n\r\n                max_xp: statdata[ship_id.toString()].max_xp,\r\n                max_frags_battle: statdata[ship_id.toString()].max_frags_battle,\r\n                max_damage_dealt: statdata[ship_id.toString()].max_damage_dealt,\r\n                max_planes_killed: statdata[ship_id.toString()].max_planes_killed,\r\n\r\n                ave_xp: statdata[ship_id.toString()].ave_xp,\r\n                ave_frags: statdata[ship_id.toString()].ave_frags,\r\n                ave_damage_dealt: statdata[ship_id.toString()].ave_damage_dealt,\r\n                ave_planes_killed: statdata[ship_id.toString()].ave_planes_killed,\r\n\r\n                main_battery_max_frags_battle: statdata[ship_id.toString()].main_battery_max_frags_battle,\r\n                main_battery_frags: statdata[ship_id.toString()].main_battery_frags,\r\n                main_battery_hit_rate: statdata[ship_id.toString()].main_battery_hit_rate,\r\n\r\n                torpedoes_max_frags_battle: statdata[ship_id.toString()].torpedoes_max_frags_battl,\r\n                torpedoes_frags: statdata[ship_id.toString()].torpedoes_frags,\r\n                torpedoes_hit_rate: statdata[ship_id.toString()].torpedoes_hit_rate,\r\n\r\n                second_battery_max_frags_battle: statdata[ship_id.toString()].second_battery_max_frags_battle,\r\n                second_battery_frags: statdata[ship_id.toString()].second_battery_frags,\r\n                second_battery_hit_rate: statdata[ship_id.toString()].second_battery_hit_rate,\r\n\r\n                aircraft_max_frags_battle: statdata[ship_id.toString()].aircraft_max_frags_battle,\r\n                aircraft_frags: statdata[ship_id.toString()].aircraft_frags,\r\n\r\n                ramming_max_frags_battle: statdata[ship_id.toString()].ramming_max_frags_battle,\r\n                ramming_frags: statdata[ship_id.toString()].ramming_frags,\r\n\r\n\r\n                team_capture_points: statdata[ship_id.toString()].team_capture_points,\r\n                dropped_capture_points: statdata[ship_id.toString()].dropped_capture_points,\r\n                ships_spotted: statdata[ship_id.toString()].ships_spotted,\r\n                max_damage_scouting: statdata[ship_id.toString()].max_damage_scouting,\r\n                survived_wins: statdata[ship_id.toString()].survived_wins,\r\n              });\r\n            }\r\n          }\r\n            this.setState({playerShipTableData :playerShipTableData ,shipnames:shipnames,shipdetails:shipdetails});\r\n        })\r\n        .catch((error) => console.log(error));\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    var playerRankTableData = [];\r\n    var rankstatdata = {};\r\n    var rankship_ids = [];\r\n    var rankshipnames = [];\r\n    var seasonOptions = [];\r\n    var seasons = new Set();\r\n    this.setState({playerRankTableData:null,rankshipnames:null,seasonOptions:[{key: '0', value: 'all', text: ''}]});\r\n    axios.get(\"https://api.worldofwarships.com/wows/seasons/shipstats/?application_id=\" + application_id + \"&account_id=\" + account_id)\r\n    .then((response)=>{\r\n        var res = response.data.data[account_id];\r\n        res.forEach((ship) => {\r\n          rankship_ids.push(ship.ship_id);\r\n          for (const [season, data] of Object.entries(ship.seasons)) {\r\n            if(data.rank_solo){\r\n              seasons.add(season);\r\n              rankstatdata[ship.ship_id.toString()+\",\"+season.toString()]={\r\n                  ship_id: ship.ship_id,\r\n                  wins: data.rank_solo.wins,\r\n                  battles: (data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws),\r\n                  win_rate: division(data.rank_solo.wins,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  survival_rate: division(data.rank_solo.survived_battles,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  max_xp: data.rank_solo.max_xp,\r\n                  max_frags_battle: data.rank_solo.max_frags_battle,\r\n                  max_damage_dealt: data.rank_solo.max_damage_dealt,\r\n                  max_planes_killed: data.rank_solo.max_planes_killed,\r\n\r\n                  ave_xp: divisionWhole(data.rank_solo.xp,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_frags: division(data.rank_solo.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_damage_dealt: divisionWhole(data.rank_solo.damage_dealt,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  ave_planes_killed: division(data.rank_solo.planes_killed,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  main_battery_max_frags_battle: data.rank_solo.main_battery.max_frags_battle,\r\n                  main_battery_frags: division(data.rank_solo.main_battery.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  main_battery_hit_rate: division(data.rank_solo.main_battery.hits,data.rank_solo.main_battery.shots),\r\n\r\n                  torpedoes_max_frags_battle: data.rank_solo.torpedoes.max_frags_battle,\r\n                  torpedoes_frags: division(data.rank_solo.torpedoes.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  torpedoes_hit_rate: division(data.rank_solo.torpedoes.hits,data.rank_solo.torpedoes.shots),\r\n\r\n                  second_battery_max_frags_battle: data.rank_solo.second_battery.max_frags_battle,\r\n                  second_battery_frags: division(data.rank_solo.second_battery.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n                  second_battery_hit_rate: division(data.rank_solo.second_battery.hits,data.rank_solo.second_battery.shots),\r\n\r\n                  aircraft_max_frags_battle: data.rank_solo.aircraft.max_frags_battle,\r\n                  aircraft_frags: division(data.rank_solo.aircraft.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  ramming_max_frags_battle: data.rank_solo.ramming.max_frags_battle,\r\n                  ramming_frags: division(data.rank_solo.ramming.frags,(data.rank_solo.wins+data.rank_solo.losses+data.rank_solo.draws)),\r\n\r\n                  survived_wins: data.rank_solo.survived_wins,\r\n              }\r\n            }\r\n          }\r\n        })\r\n    })\r\n    .then(()=>{\r\n      for (let season of seasons){\r\n        if (season >= 100){\r\n          seasonOptions.push({key: season, value: season, text: \"Season: Sprint \" + (parseInt(season)-100).toString()});\r\n        }else{\r\n          seasonOptions.push({key: season, value: season, text: \"Season: \" + season});\r\n        }\r\n      }\r\n      var slice = 99;\r\n      for(var i = 0; i < rankship_ids.length/slice; i++){\r\n        var ship_id_strings = \"\";\r\n        if (i * slice + slice < rankship_ids.length){\r\n          var limit = i * slice + slice;\r\n        }else{\r\n          var limit = rankship_ids.length;\r\n        }\r\n        for(var j = i * slice; j < limit; j++){\r\n          ship_id_strings += rankship_ids[j] + \",\";\r\n        }\r\n        axios.get(\"https://api.worldofwarships.com/wows/encyclopedia/ships/?application_id=\" + application_id,{params:{ship_id:ship_id_strings.substring(0,ship_id_strings.length-1)}})\r\n        .then((shipresponse)=>{\r\n          for (const [ship_id, shipres] of Object.entries(shipresponse.data.data)) {\r\n            if(shipres){\r\n              rankshipnames.push({key: shipres.name, value: shipres.name, text: shipres.name});\r\n              for (let season of seasons){\r\n                if(rankstatdata[ship_id.toString()+\",\"+season.toString()]){\r\n                  playerRankTableData.push({\r\n                    ship_id: shipres.ship_id,\r\n                    season: season,\r\n                    name: shipres.name,\r\n                    image: shipres.images.small,\r\n                    nation: shipres.nation,\r\n                    tier: shipres.tier,\r\n                    type: shipres.type,\r\n\r\n                    wins: rankstatdata[ship_id.toString()+\",\"+season.toString()].wins,\r\n                    battles: rankstatdata[ship_id.toString()+\",\"+season.toString()].battles,\r\n                    win_rate:rankstatdata[ship_id.toString()+\",\"+season.toString()].win_rate,\r\n                    survival_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].survival_rate,\r\n\r\n                    max_xp: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_xp,\r\n                    max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_frags_battle,\r\n                    max_damage_dealt: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_damage_dealt,\r\n                    max_planes_killed: rankstatdata[ship_id.toString()+\",\"+season.toString()].max_planes_killed,\r\n\r\n                    ave_xp: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_xp,\r\n                    ave_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_frags,\r\n                    ave_damage_dealt: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_damage_dealt,\r\n                    ave_planes_killed: rankstatdata[ship_id.toString()+\",\"+season.toString()].ave_planes_killed,\r\n\r\n                    main_battery_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_max_frags_battle,\r\n                    main_battery_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_frags,\r\n                    main_battery_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].main_battery_hit_rate,\r\n\r\n                    torpedoes_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_max_frags_battl,\r\n                    torpedoes_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_frags,\r\n                    torpedoes_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].torpedoes_hit_rate,\r\n\r\n                    second_battery_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_max_frags_battle,\r\n                    second_battery_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_frags,\r\n                    second_battery_hit_rate: rankstatdata[ship_id.toString()+\",\"+season.toString()].second_battery_hit_rate,\r\n\r\n                    aircraft_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].aircraft_max_frags_battle,\r\n                    aircraft_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].aircraft_frags,\r\n\r\n                    ramming_max_frags_battle: rankstatdata[ship_id.toString()+\",\"+season.toString()].ramming_max_frags_battle,\r\n                    ramming_frags: rankstatdata[ship_id.toString()+\",\"+season.toString()].ramming_frags,\r\n\r\n                    survived_wins: rankstatdata[ship_id.toString()+\",\"+season.toString()].survived_wins,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.setState({playerRankTableData:playerRankTableData,rankshipnames:rankshipnames,seasonOptions:seasonOptions});\r\n        })\r\n        .catch((error) => console.log(error));\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n\r\n  updateDimensions() {\r\n      this.setState({ windowwidth: window.innerWidth});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  buildAchievements() {\r\n    var arr = [];\r\n    var achievements = this.state.achievements.battle;\r\n    for (const [name, number] of Object.entries(this.state.achievements.battle)) {\r\n      if(achievementsDict[name]){\r\n        arr.push(\r\n          <Card raised key={name}>\r\n            <Image src={achievementsDict[name].image} size={this.state.windowwidth>400?this.state.windowwidth>1080?'medium':'medium':'small'} />\r\n            <Card.Content key=\"cardcnt\"\r\n              style={{\r\n                padding: '0.5em',\r\n              }}\r\n            >\r\n              <Card.Header >{achievementsDict[name].text}</Card.Header>\r\n              <Card.Header >{number}</Card.Header>\r\n            </Card.Content>\r\n          </Card>\r\n        )\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  buildRankSummary() {\r\n    var arr = [];\r\n    if(this.state.rankdata){\r\n      for (const [season, data] of Object.entries(this.state.rankdata)) {\r\n        if(this.state.rankdata[season].rank_solo && parseInt(season) < 100){\r\n          arr.push(\r\n            <List.Item\r\n            key={season}\r\n            style={{\r\n              margin:'2.5em',\r\n            }}\r\n            >\r\n              <List.Content>\r\n                <List.Header>{\"Season \" + season + \": \"}</List.Header>\r\n                <Statistic color={this.state.rankdata[season].rank_info.rank<=5?'red':this.state.rankdata[season].rank_info.rank<=10?'green':this.state.rankdata[season].rank_info.rank<=15?'blue':'grey'}>\r\n                  <Statistic.Value>{this.state.rankdata[season].rank_info.rank}</Statistic.Value>\r\n                  <Statistic.Label>Rank: </Statistic.Label>\r\n                </Statistic>\r\n              </List.Content>\r\n            </List.Item>\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  buildSprintRankSummary() {\r\n    var arr = [];\r\n    if(this.state.rankdata){\r\n      for (const [season, data] of Object.entries(this.state.rankdata)) {\r\n        if(this.state.rankdata[season].rank_solo && parseInt(season) >= 100){\r\n          arr.push(\r\n            <List.Item\r\n            style={{\r\n              margin:'2.5em',\r\n            }}\r\n            key = {season}\r\n            >\r\n              <List.Content>\r\n                <List.Header>{\"Sprint \" + (parseInt(season)-100).toString() + \": \"}</List.Header>\r\n                <Statistic color={this.state.rankdata[season].rank_info.rank<=1?'red':this.state.rankdata[season].rank_info.rank<=3?'green':this.state.rankdata[season].rank_info.rank<=5?'blue':'grey'}>\r\n                  <Statistic.Value>{this.state.rankdata[season].rank_info.rank}</Statistic.Value>\r\n                  <Statistic.Label>Rank: </Statistic.Label>\r\n                </Statistic>\r\n              </List.Content>\r\n            </List.Item>\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.data.statistics){\r\n      return (<Container fluid><Header as=\"h1\">Data Unavailable</Header></Container>)\r\n    }\r\n    return (\r\n      <Container fluid>\r\n        <Container text>\r\n          <Icon name='user circle'\r\n            style={{\r\n              fontSize: this.state.windowwidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: this.state.windowwidth>860?'2em':'1em',\r\n            }}\r\n          />\r\n          <Header as='h1' content={this.state.data.nickname}\r\n            style={{\r\n              fontSize: this.state.windowwidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: this.state.windowwidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n          <Header as='h2'\r\n            style={{\r\n              fontSize: this.state.windowwidth>860?'1.7em':'1.2em',\r\n              fontWeight: 'normal',\r\n              marginTop: this.state.windowwidth>860?'0.5em':'0.25em',\r\n            }}\r\n            >\r\n            <NavLink to={{pathname: '/clan',state: {clan_id: this.state.clandata.clan_id}}}>{this.state.clansummary}</NavLink>\r\n          </Header>\r\n        </Container>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '7em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'space-evenly',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.battles.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Battles</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_xp.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max XP</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_damage_dealt.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max Damage</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.statistics.pvp.max_frags_battle.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Max Kills</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='id card outline' />\r\n            General Performance\r\n          </Header>\r\n        </Divider>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '4em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{(division(this.state.data.statistics.pvp.wins,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses)*100).toFixed(0) + \"%\"}</Statistic.Value>\r\n            <Statistic.Label>Win Rate</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{divisionWhole(this.state.data.statistics.pvp.xp,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average XP</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{divisionWhole(this.state.data.statistics.pvp.damage_dealt,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average Damage</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{division(this.state.data.statistics.pvp.frags,this.state.data.statistics.pvp.wins+this.state.data.statistics.pvp.draws+this.state.data.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Average Kills</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic horizontal size=\"small\">\r\n            <Statistic.Value>{division(this.state.data.statistics.pvp.frags,this.state.data.statistics.pvp.battles-this.state.data.statistics.pvp.survived_battles)}</Statistic.Value>\r\n            <Statistic.Label>K/D</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='trophy' />\r\n            Achievements\r\n          </Header>\r\n        </Divider>\r\n\r\n        <Container textAlign='center'\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Card.Group itemsPerRow={this.state.windowwidth>400?(this.state.windowwidth>1080?\"nine\":\"four\"):\"two\"} centered>\r\n            {this.buildAchievements()}\r\n          </Card.Group>\r\n        </Container>\r\n\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='quidditch' />\r\n            Rank Summary\r\n          </Header>\r\n        </Divider>\r\n        <div\r\n        style={{\r\n          marginLeft: 'auto',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'flex-start',\r\n        }}\r\n        >\r\n          {this.buildRankSummary()}\r\n        </div>\r\n        <div\r\n        style={{\r\n          marginTop: '2em',\r\n          marginLeft: 'auto',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'flex-start',\r\n        }}\r\n        >\r\n          {this.buildSprintRankSummary()}\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='anchor' />\r\n            Ship Category Summary\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent : 'center',\r\n          alignItems: 'space-evenly',\r\n          marginTop: '2.5em',\r\n        }}\r\n        >\r\n          <PlayerShipTypeGraph data={this.state.playerShipTableData}/>\r\n          <PlayerShipNationGraph data={this.state.playerShipTableData}/>\r\n          <PlayerShipTierGraph data={this.state.playerShipTableData}/>\r\n        </Container>\r\n\r\n        <Container\r\n        style={{\r\n          margin: 'auto',\r\n          display:this.state.windowwidth>=1080?'block':'none',\r\n        }}\r\n        >\r\n        <Tab menu={{ secondary: true, pointing: true }} panes={\r\n          [\r\n            { menuItem: 'Type', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n                <PlayerShipTypeTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Tier', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n                <PlayerShipTierTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Nation', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n                <PlayerShipNationTable data={this.state.playerShipTableData}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n          ]} />\r\n        </Container>\r\n\r\n        <Container\r\n        style={{\r\n          margin: 'auto',\r\n          display:this.state.windowwidth>=1080?'none':'block',\r\n        }}\r\n        >\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Type</Header>\r\n            <PlayerShipTypeTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Tier</Header>\r\n            <PlayerShipTierTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n\r\n          <Container fluid textAlign='center' style={{marginBottom:\"3em\"}}>\r\n            <Header size='small' style={{margin:'0'}}>Ship Stats By Nation</Header>\r\n            <PlayerShipNationTableMobile data={this.state.playerShipTableData}/>\r\n          </Container>\r\n        </Container>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='bar chart' />\r\n            Detail Performance\r\n          </Header>\r\n        </Divider>\r\n        <div\r\n        style={{\r\n          display:this.state.windowwidth>=1920&&this.state.playerShipTableData?'block':'none',\r\n        }}\r\n        >\r\n        <Tab menu={{ secondary: true, pointing: true }} panes={\r\n          [\r\n            { menuItem: 'Random', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <PlayerShipTable account_id = {this.state.account_id} data={this.state.playerShipTableData} shipnames={this.state.shipnames}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n            { menuItem: 'Rank', render: () =>\r\n            <Tab.Pane attached={false}>\r\n              <Container fluid textAlign='center'>\r\n                <PlayerRankTable account_id = {this.state.account_id} data={this.state.playerRankTableData} rankshipnames={this.state.rankshipnames} seasonOptions={this.state.seasonOptions}/>\r\n              </Container>\r\n            </Tab.Pane> },\r\n          ]} />\r\n        </div>\r\n\r\n        <div\r\n        style={{\r\n          display:this.state.windowwidth>=768&&this.state.windowwidth<1920&&this.state.playerShipTableData?'block':'none',\r\n        }}\r\n        >\r\n        <Container fluid textAlign='center'>\r\n          <PlayerShipTablePad account_id = {this.state.account_id} data={this.state.playerShipTableData} shipnames={this.state.shipnames}/>\r\n        </Container>\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n            display: this.state.playerRankTableData?'block':'none',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='bar chart' />\r\n            Rank Performance\r\n          </Header>\r\n        </Divider>\r\n        <Container fluid textAlign='center'>\r\n          <PlayerRankTablePad account_id = {this.state.account_id} data={this.state.playerRankTableData} rankshipnames={this.state.rankshipnames} seasonOptions={this.state.seasonOptions}/>\r\n        </Container>\r\n        </div>\r\n\r\n        <div\r\n        style={{\r\n          display:this.state.windowwidth<768&&this.state.playerShipTableData?'block':'none',\r\n        }}\r\n        >\r\n        <Container fluid textAlign='center'>\r\n          <PlayerShipTableMobile account_id = {this.state.account_id} data={this.state.playerShipTableData} shipnames={this.state.shipnames}/>\r\n        </Container>\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n            display: this.state.playerRankTableData?'block':'none',\r\n          }}\r\n        >\r\n          <Header as='h4'>\r\n            <Icon name='bar chart' />\r\n            Rank Performance\r\n          </Header>\r\n        </Divider>\r\n        <Container fluid textAlign='center'>\r\n          <PlayerRankTableMobile account_id = {this.state.account_id} data={this.state.playerRankTableData} rankshipnames={this.state.rankshipnames} seasonOptions={this.state.seasonOptions}/>\r\n        </Container>\r\n        </div>\r\n        <ToTopButton scrollStepInPx=\"100\" delayInMs=\"16.66\"/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","export function setCookie(cname, cvalue, exdays) {\r\n  var d = new Date();\r\n  d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n  var expires = \"expires=\"+ d.toUTCString();\r\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport function getCookie(cname) {\r\n  var name = cname + \"=\";\r\n  var decodedCookie = decodeURIComponent(document.cookie);\r\n  var ca = decodedCookie.split(';');\r\n  for(var i = 0; i <ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\nexport function checkCookie() {\r\n  var user = getCookie(\"username\");\r\n  if (user != \"\") {\r\n    alert(\"Welcome again \" + user);\r\n  } else {\r\n    user = prompt(\"Please enter your name:\", \"\");\r\n    if (user != \"\" && user != null) {\r\n      setCookie(\"username\", user, 365);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {  Message, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder,  Checkbox, Form  } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {getCookie, setCookie, checkCookie} from '../Common/cookie.js';\r\nimport {server} from '../Common/utlity.js';\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedin: false,\r\n      loginfail: false,\r\n      hide: false,\r\n    }\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  login(){\r\n    var password = this.state.password;\r\n    this.setState({loginfail: false, password: \"\"});\r\n    if(password === \"\" && this.state.username === \"\"){\r\n        this.setState({loginfail: true});\r\n        return;\r\n    }\r\n    axios.post('https://cors-anywhere.herokuapp.com/' + server + \"/users/login\",{name:this.state.username,password:password})\r\n    .then((response)=>{\r\n        if (response.data.success){\r\n          this.setState({loggedin: true});\r\n          setCookie(\"username\", this.state.username, 0.1);\r\n          if(this.props.loginCallBack){\r\n            this.props.loginCallBack();\r\n          }\r\n        }else{\r\n          this.setState({loginfail: true});\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      this.setState({loginfail: true});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Segment\r\n        style={{\r\n          width:\"300px\",\r\n          margin:\"auto\"\r\n        }}\r\n        >\r\n          <Header as=\"h1\">Login</Header>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Username</label>\r\n              <Input fluid label={{ icon: 'tag' }} labelPosition='left corner' error={this.state.loginfail} placeholder='username' value={this.state.username} onChange={(e,{value})=>this.setState({username:value})}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.loginfail} placeholder='password' value={this.state.password} onChange={(e,{value})=>this.setState({password:value})}/>\r\n              <Message style={{display:this.state.loginfail?\"block\":\"none\"}} error header='Login Failed' content='Please check your username and password.'/>\r\n            </Form.Field>\r\n            <Button fluid onClick={() => this.login()}>Login</Button>\r\n          </Form>\r\n        </Segment>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\nimport {  Message, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder,  Checkbox, Form  } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {getCookie, setCookie, checkCookie} from '../Common/cookie.js';\r\nimport {server} from '../Common/utlity.js';\r\n\r\nclass Register extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedin: false,\r\n      registerfail: false,\r\n      hide: false,\r\n    }\r\n    this.register = this.register.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  register(){\r\n    var password = this.state.password;\r\n    this.setState({registerfail: false, password: \"\"});\r\n    if(password === \"\" && this.state.username === \"\"){\r\n        this.setState({registerfail: true});\r\n        return;\r\n    }\r\n    axios.post('https://cors-anywhere.herokuapp.com/' + server + \"/users/register\",{name:this.state.username,password:password})\r\n    .then((response)=>{\r\n        if (response.data.data && response.data.data.name && response.data.data.name === this.state.username){\r\n          this.setState({loggedin: true});\r\n          setCookie(\"username\", this.state.username, 0.1);\r\n          if(this.props.registerCallBack){\r\n            this.props.registerCallBack();\r\n          }\r\n        }else{\r\n          this.setState({registerfail: true});\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      this.setState({registerfail: true});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Segment\r\n          style={{\r\n            width:\"300px\",\r\n            margin:\"auto\"\r\n          }}\r\n        >\r\n          <Header as=\"h1\">Register</Header>\r\n          <Form>\r\n            <Form.Field required>\r\n              <label>Username</label>\r\n              <Input fluid label={{ icon: 'tag' }} labelPosition='left corner' error={this.state.registerfail} placeholder='username' value={this.state.username} onChange={(e,{value})=>this.setState({username:value})}/>\r\n              <Message style={{display:this.state.registerfail?\"block\":\"none\"}} error header='Username Exists' content='Please try again.'/>\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label>Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.wrongpassword} placeholder='password' value={this.state.password} onChange={(e,{value})=>this.setState({password:value})}/>\r\n            </Form.Field>\r\n            <Button fluid onClick={() => this.register()}>Register</Button>\r\n          </Form>\r\n        </Segment>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Login from '../User/Login.js'\nimport Register from '../User/Register.js'\nimport {withRouter} from 'react-router-dom';\nimport {getCookie, setCookie, checkCookie} from './cookie.js';\nimport {division, divisionWhole, time, application_id} from './utlity.js';\n\nconst resultRendererPlayer = ({title, account_id}) => <Header as='h4' key={account_id}><Icon name='user circle'/><Header.Content>{title}</Header.Content></Header>\nresultRendererPlayer.propTypes = {\n  nickname: PropTypes.string,\n  account_id: PropTypes.string,\n}\n\nconst resultRendererShip = ({title, image, ship_id, description}) => <Header as='h4' key={ship_id}><Image src={image}></Image>{title}<Header.Subheader>{description}</Header.Subheader></Header>\nresultRendererShip.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.string,\n  ship_id: PropTypes.string,\n  description: PropTypes.string,\n}\n\nconst resultRendererClan = ({title, clan_id, tag}) => <Header as='h4' key={clan_id}><Icon name='group'/><Header.Content>{'[' + tag + ']' + title}</Header.Content></Header>\nresultRendererClan.propTypes = {\n  name: PropTypes.string,\n  clan_id: PropTypes.string,\n  tag: PropTypes.string,\n}\n\nclass HeaderMenu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      shipList: [],\n      ship_id: '',\n      clan_id: '',\n      account_id: '',\n      mode: \"ship\",\n      isLoading: false,\n      results: [],\n      value: '',\n      showLogin: false,\n      Register: false,\n      username: \"\",\n      greeting: getCookie(\"username\") !==\"\"? (\"Hello,\" + getCookie(\"username\")) : \"Plase Sign in\",\n      cookieModalOpen: false,\n    };\n    this.resetComponent = this.resetComponent.bind(this);\n    this.handleResultSelect = this.handleResultSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.LoginClick = this.LoginClick.bind(this);\n    this.RegisterClick = this.RegisterClick.bind(this);\n    this.LogoutClick = this.LogoutClick.bind(this);\n    this.getShipList = this.getShipList.bind(this);\n    this.loginCallBack = this.loginCallBack.bind(this);\n    this.registerCallBack = this.registerCallBack.bind(this);\n  }\n\n\n  componentDidMount() {\n    this.setState({mode:this.props.mode,username:getCookie(\"username\")});\n    if(this.state.mode===\"ship\"){\n      this.getShipList();\n    }\n    if(getCookie(\"agreed\") !== \"true\"){\n      this.setState({ cookieModalOpen: true });\n    }\n  }\n  componentWillMount() {\n    window.scrollTo(0, 0);\n    this.resetComponent();\n  }\n  componentWillUnmount(){\n    window.scrollTo(0, 0);\n  }\n  resetComponent(){\n    this.setState({ isLoading: false, results: [], value: '' });\n  }\n\n  handleResultSelect(e, { result }){\n    if(this.state.mode===\"ship\"){\n      this.setState({ ship_id: result.ship_id, value: result.name});\n      this.props.set_ship_id(result.ship_id)\n    }else if(this.state.mode===\"player\"){\n      this.setState({ account_id: result.account_id, value: result.nickname });\n      if(result && result.account_id){\n        this.props.set_account_id(result.account_id);\n      }\n    }else if(this.state.mode===\"clan\"){\n      this.setState({ clan_id: result.clan_id, value: result.name });\n      if(result && result.clan_id){\n        this.props.set_clan_id(result.clan_id);\n      }\n    }\n  }\n\n  handleSearchChange(e, { value }){\n    this.setState({value: value })\n    if(this.state.mode===\"ship\"){\n      if(value.length > 2) {\n        this.setState({isLoading: true})\n        var results = [];\n        let filtered = this.state.shipList.filter(ship => ship.name.toLowerCase().includes(value.toLowerCase()))\n        filtered.forEach((ship)=>{\n          results.push({title:ship.name, image:ship.images.small, description:\"Tier \"+ship.tier+\" \"+ship.nation+\" \"+ship.type, ship_id: ship.ship_id});\n        })\n        this.setState({isLoading: false, results:results})\n      }\n    }else if(this.state.mode===\"player\"){\n      if(value.length > 3) {\n        this.setState({isLoading: true})\n        axios.get(\"https://api.worldofwarships.com/wows/account/list/?application_id=\" + application_id + \"&search=\" + value)\n        .then((response)=>{\n            var results = [];\n            response.data.data.forEach((row)=>{\n              results.push({title:row.nickname,account_id:row.account_id});\n            })\n            this.setState({isLoading: false, results:results})\n        })\n        .catch((error) => console.log(error));\n      }\n    }else if(this.state.mode===\"clan\"){\n      if(value.length > 1) {\n        this.setState({isLoading: true})\n        axios.get(\"https://api.worldofwarships.com/wows/clans/list/?application_id=\" + application_id + \"&search=\" + value)\n        .then((response)=>{\n            var results = [];\n            response.data.data.forEach((row)=>{\n              results.push({title:row.name,clan_id:row.clan_id,tag:row.tag});\n            })\n            this.setState({isLoading: false, results:results})\n        })\n        .catch((error) => console.log(error));\n      }\n    }\n  }\n\n  getShipList() {\n    this.setState({isLoading: true})\n    axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/info/?application_id=\" + application_id + \"&language=en\" + \"&fields=ship_nations\")\n        .then((response)=>{\n          var results = [];\n          let ship_nations = Object.keys(response.data.data.ship_nations);\n          let ship_promise = ship_nations.map(nation => new Promise(function (resolve, reject) {\n            axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/ships/?application_id=\" + application_id + \"&language=en\" + \"&nation=\" + nation + \"&fields=name,images.small,nation,tier,type,ship_id\")\n                .then((response)=>{\n                  resolve(response.data.data)\n                })\n                .catch((error) => reject(error));\n          }));\n          Promise.all(ship_promise).then(values => {\n            let shipList = {}\n            values.forEach( curr => {\n              if (curr == undefined){\n                return;\n              }\n              shipList = Object.assign(shipList,curr)\n            })\n            let keys = Object.keys(shipList);\n            let vals = keys.map(key => shipList[key])\n            this.setState({shipList:vals})\n            this.setState({isLoading: false})\n          })\n        })\n\n  }\n\n  loginCallBack(){\n    this.setState({username:getCookie(\"username\"), greeting: \"Hello,\" + getCookie(\"username\"),});\n    this.setState({showLogin: false});\n  }\n  registerCallBack(){\n    this.setState({username:getCookie(\"username\"), greeting: \"Hello,\" + getCookie(\"username\"),});\n    this.setState({showLogin: false});\n  }\n\n  LoginClick(){\n    this.setState({showLogin: true});\n  }\n  RegisterClick(){\n    this.setState({showRegister: true});\n  }\n  LogoutClick(){\n    setCookie(\"username\",\"\",0.1);\n    this.setState({username:\"\",greeting: \"Plase Sign in\",});\n    window.location.reload();\n  }\n\n  render(){\n    return(\n        <div>\n          <Menu inverted stackable size='large'>\n            <Container fluid>\n              <Menu.Item as='a' inverted active={this.state.mode===\"home\"} href='/'><div style={{margin:\"auto\"}}><Icon name='home'/>Home</div></Menu.Item>\n              <Menu.Item as='a' inverted active={this.state.mode===\"ship\"} href='/#/ship'><div style={{margin:\"auto\"}}><Icon name='anchor'/>Ship</div></Menu.Item>\n              <Menu.Item as='a' inverted active={this.state.mode===\"player\"} href='/#/player'><div style={{margin:\"auto\"}}><Icon name='user'/>Player</div></Menu.Item>\n              <Menu.Item as='a' inverted active={this.state.mode===\"clan\"} href='/#/clan'><div style={{margin:\"auto\"}}><Icon name='group'/>Clan</div></Menu.Item>\n              <Menu.Item position='right'>\n                <Search\n                    selectFirstResult\n                    minCharacters = {this.state.mode===\"ship\"?3:(this.state.mode===\"clan\"?2:4)}\n                    fluid\n                    loading={this.state.isLoading}\n                    onResultSelect={this.handleResultSelect}\n                    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                      leading: true,\n                    })}\n                    results={this.state.results}\n                    value={this.state.value}\n                    style={{margin:\"auto\"}}\n                    resultRenderer={this.state.mode===\"player\"?resultRendererPlayer:(this.state.mode===\"clan\"?resultRendererClan:resultRendererShip)}\n                />\n              </Menu.Item>\n              <Menu.Item >\n                <div style={{margin:\"auto\"}}>\n                <Dropdown trigger={(<span><Icon name='user' /> {this.state.greeting} </span>)} options={\n                  this.state.mode !==\"user\" &&\n                  [{\n                    key: 'user',\n                    text: (<span>{this.state.greeting}</span>),\n                    disabled: true,\n                  },\n                  { key: 'sign-in', text: 'Sign In' , icon:'sign in', onClick:()=>{this.LoginClick()}},\n                  { key: 'register', text: 'Register', icon:'pencil alternate', onClick:()=>{this.RegisterClick()} },\n                  { key: 'setting', text: 'Account', icon:'setting', onClick:()=>{this.props.history.push('/user')} },\n                  { key: 'sign-out', text: 'Sign Out', icon:'log out', onClick:()=>{this.LogoutClick()} },\n                  ]\n                  ||\n                  [{\n                    key: 'user',\n                    text: (<span>{this.state.greeting}</span>),\n                    disabled: true,\n                  },\n                  { key: 'setting', text: 'Account', icon:'setting', onClick:()=>{this.props.history.push('/user')} },\n                  { key: 'sign-out', text: 'Sign Out', icon:'log out', onClick:()=>{this.LogoutClick()} },\n                  ]\n                }/>\n                </div>\n              </Menu.Item>\n            </Container>\n          </Menu>\n          <Modal closeIcon  size=\"mini\" centered={false} open={this.state.showLogin} onClose={()=>this.setState({showLogin:false})}><Modal.Content><Login loginCallBack={this.loginCallBack}/></Modal.Content></Modal>\n          <Modal closeIcon  size=\"mini\" centered={false} open={this.state.showRegister} onClose={()=>this.setState({showRegister:false})}><Modal.Content><Register registerCallBack={this.registerCallBack}/></Modal.Content></Modal>\n          <Modal\n            open={this.state.cookieModalOpen}\n            basic\n            size='small'\n          >\n            <Header icon='browser' content='Cookies policy' />\n            <Modal.Content>\n              <h3>This website uses cookies to ensure the best user experience.</h3>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='green' onClick={() => {this.setState({ cookieModalOpen: false });setCookie(\"agreed\",\"true\",1)}} inverted>\n                <Icon name='checkmark' /> Got it\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </div>\n    )\n  }\n}\n\n\nexport default withRouter(HeaderMenu);\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport PlayerIndex from './PlayerIndex.js';\r\nimport Login from '../../User/Login.js'\r\nimport Register from '../../User/Register.js'\r\nimport {withRouter} from 'react-router-dom';\r\nimport HeaderMenu from '../../Common/HeaderMenu.js'\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\nimport {getCookie, setCookie, checkCookie} from '../../Common/cookie.js';\r\n\r\nclass Player extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      account_id: '',\r\n    };\r\n    this.set_account_id = this.set_account_id.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    if(getCookie(\"back_mode\") ===\"player\" && getCookie(\"back_id\") !== \"\"){\r\n      this.setState({account_id:getCookie(\"back_id\")});\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    setCookie(\"back_mode\",\"player\",0.1);\r\n    setCookie(\"back_id\",this.state.account_id,0.1);\r\n  }\r\n  set_account_id(id){\r\n    this.setState({account_id:id});\r\n  }\r\n  render(){\r\n    if(this.state.account_id && this.state.account_id !== ''){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_account_id={this.set_account_id} mode=\"player\"/>\r\n          <PlayerIndex account_id={this.state.account_id}/>\r\n        </Container>\r\n      )\r\n    }else if(this.props.location && this.props.location.state && this.props.location.state.account_id){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_account_id={this.set_account_id} mode=\"player\"/>\r\n          <PlayerIndex account_id={this.props.location.state.account_id}/>\r\n        </Container>\r\n      )\r\n    }else if(getCookie(\"back_mode\") ===\"player\" && getCookie(\"back_id\") !== \"\"){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_account_id={this.set_account_id} mode=\"player\"/>\r\n          <PlayerIndex account_id={parseInt(getCookie(\"back_id\"))}/>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_account_id={this.set_account_id} mode=\"player\"/>\r\n          <Placeholder fluid>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Player);\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail, Popup } from 'semantic-ui-react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport ToTopButton from '../../Common/ToTopButton.js';\r\nimport axios from 'axios';\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\n\r\nexport default class ClanIndex extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clan_id: '',\r\n      playerlist: [],\r\n      playerclanlist: {},\r\n      clans_roles: {\"executive_officer\": \"Deputy Commander\",\"recruitment_officer\": \"Recruiter\",\"private\": \"Line Officer\", \"commander\": \"Commander\"},\r\n      data: {\"members_count\":0,\"name\":\"\",\"creator_name\":\"\",\"clan_id\":1,\"created_at\":1,\"updated_at\":1,\"leader_name\":\"\",\"members_ids\":[],\"creator_id\":0,\"tag\":\"\",\"old_name\":null,\"is_clan_disbanded\":false,\"renamed_at\":null,\"old_tag\":null,\"leader_id\":0,\"description\":\"\"},\r\n    }\r\n    this.reloadData = this.reloadData.bind(this);\r\n    this.buildMembers = this.buildMembers.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({clan_id:nextProps.clan_id});\r\n    this.reloadData(nextProps.clan_id);\r\n  }\r\n  componentDidMount(){\r\n    this.reloadData(this.props.clan_id);\r\n  }\r\n  reloadData(clan_id){\r\n    axios.get(\"https://api.worldofwarships.com/wows/clans/info/?application_id=\" + application_id + \"&clan_id=\" + clan_id)\r\n    .then((response)=>{\r\n        this.setState({data: response.data.data[clan_id]});\r\n        var playerlist = [];\r\n        var playerclanlist = {};\r\n        var slice = 23;\r\n        for(var i = 0; i < response.data.data[clan_id].members_ids.length/slice; i++){\r\n          var account_id_strings = \"\";\r\n          if (i * slice + slice < response.data.data[clan_id].members_ids.length){\r\n            var limit = i * slice + slice;\r\n          }else{\r\n            var limit = response.data.data[clan_id].members_ids.length;\r\n          }\r\n          for(var j = i * slice; j < limit; j++){\r\n            account_id_strings += response.data.data[clan_id].members_ids[j] + \",\";\r\n          }\r\n          axios.get(\"https://api.worldofwarships.com/wows/account/info/?application_id=\" + application_id,{params:{account_id:account_id_strings.substring(0,account_id_strings.length-1)}})\r\n          .then((playerresponse)=>{\r\n            for (const [account_id, playerres] of Object.entries(playerresponse.data.data)) {\r\n              if(playerres){\r\n                playerlist.push(playerres);\r\n                this.setState({playerlist: playerlist});\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.log(error));\r\n          axios.get(\"https://api.worldofwarships.com/wows/clans/accountinfo/?application_id=\" + application_id,{params:{account_id:account_id_strings.substring(0,account_id_strings.length-1)}})\r\n          .then((playerclanresponse)=>{\r\n            for (const [account_id, playerclanres] of Object.entries(playerclanresponse.data.data)) {\r\n              if(playerclanres){\r\n                playerclanlist[playerclanres.account_id] = playerclanres.role;\r\n                this.setState({playerclanlist: playerclanlist});\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.log(error));\r\n          axios.get(\"https://api.worldofwarships.com/wows/clans/glossary/?application_id=\" + application_id)\r\n          .then((glossaryresponse)=>{\r\n            if(glossaryresponse[\"clans_roles\"]){\r\n              this.setState({clans_roles: glossaryresponse[\"clans_roles\"]});\r\n            }\r\n          })\r\n          .catch((error) => console.log(error));\r\n        }\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }\r\n  buildMembers(){\r\n    var arr = [];\r\n    this.state.playerlist.forEach((row)=>{\r\n        if(row.statistics){\r\n          arr.push(\r\n            (\r\n              <div key={row.nickname}>\r\n                <div\r\n                  style={{\r\n                    display:\"flex\",\r\n                    flexWrap: 'wrap',\r\n                    justifyContent : 'space-between',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'row',\r\n                  }}\r\n                >\r\n                  <div style={{margin: '1.5em'}}>\r\n                    <Icon name='user circle' size='large'/>\r\n                    <Popup\r\n                      trigger={<NavLink to={{pathname: '/player',state: {account_id: row.account_id}}}>{row.nickname}</NavLink>}\r\n                      header = \"Position\"\r\n                      content= {this.state.clans_roles[this.state.playerclanlist[row.account_id]]}\r\n                      position='top right'\r\n                      size='large'\r\n                    />\r\n                  </div>\r\n                  <div style={{margin: '1.5em'}}\r\n                    style={{\r\n                      display:\"flex\",\r\n                      flexWrap: 'wrap',\r\n                      justifyContent : 'space-between',\r\n                      alignItems: 'flex-start',\r\n                      flexDirection: 'row',\r\n                    }}\r\n                  >\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{(division(row.statistics.pvp.wins,row.statistics.pvp.wins+row.statistics.pvp.draws+row.statistics.pvp.losses)*100).toFixed(0) + \"%\"}</Statistic.Value>\r\n                      <Statistic.Label>Win Rate</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{division(row.statistics.pvp.frags,row.statistics.pvp.battles-row.statistics.pvp.survived_battles)}</Statistic.Value>\r\n                      <Statistic.Label>K/D</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>{divisionWhole(row.statistics.pvp.damage_dealt,row.statistics.pvp.wins+row.statistics.pvp.draws+row.statistics.pvp.losses).toLocaleString()}</Statistic.Value>\r\n                      <Statistic.Label>Average Damage</Statistic.Label>\r\n                    </Statistic>\r\n                  </div>\r\n                </div>\r\n                <Divider/>\r\n              </div>\r\n            )\r\n          )\r\n        }else{\r\n          arr.push(\r\n            (\r\n              <div key={row.nickname}>\r\n                <div\r\n                  style={{\r\n                    display:\"flex\",\r\n                    flexWrap: 'wrap',\r\n                    justifyContent : 'space-between',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'row',\r\n                  }}\r\n                >\r\n                  <div style={{margin: '1.5em'}}>\r\n                    <Icon name='user circle' size='large'/>\r\n                    <NavLink to={{pathname: '/player',state: {account_id: row.account_id}}}>{row.nickname}</NavLink>\r\n                  </div>\r\n                  <div style={{margin: '1.5em'}}\r\n                    style={{\r\n                      display:\"flex\",\r\n                      flexWrap: 'wrap',\r\n                      justifyContent : 'space-between',\r\n                      alignItems: 'flex-start',\r\n                      flexDirection: 'row',\r\n                    }}\r\n                  >\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>Win Rate</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>K/D</Statistic.Label>\r\n                    </Statistic>\r\n                    <Statistic horizontal size=\"small\">\r\n                      <Statistic.Value>n/a</Statistic.Value>\r\n                      <Statistic.Label>Average Damage</Statistic.Label>\r\n                    </Statistic>\r\n                  </div>\r\n                </div>\r\n                <Divider/>\r\n              </div>\r\n            )\r\n          )\r\n        }\r\n\r\n    })\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Container text>\r\n          <Icon name='group'\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'2em':'1em',\r\n            }}\r\n          />\r\n          <Header as='h1' content={this.state.data.name}\r\n            style={{\r\n              fontSize: window.innerWidth>860?'4em':'3em',\r\n              fontWeight: 'normal',\r\n              marginBottom: 0,\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n          <Header as='h2' content={this.state.data.tag}\r\n            style={{\r\n              fontSize: window.innerWidth>860?'1.7em':'1.2em',\r\n              fontWeight: 'normal',\r\n              marginTop: window.innerWidth>860?'0.5em':'0.25em',\r\n            }}\r\n          />\r\n        </Container>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '7em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'space-evenly',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{this.state.data.members_count.toLocaleString()}</Statistic.Value>\r\n            <Statistic.Label>Members</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n          <div style={{margin: '1.5em'}}>\r\n          <Statistic>\r\n            <Statistic.Value>{time(this.state.data.created_at)}</Statistic.Value>\r\n            <Statistic.Label>Since</Statistic.Label>\r\n          </Statistic>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4' onClick={() => this.setState({ playerTableVisible: !this.state.playerTableVisible })}>\r\n            <Icon name='align justify' />\r\n            Description\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n          style={{\r\n              marginTop: '5em',\r\n            }}\r\n        >\r\n          <Header as=\"h6\">{this.state.data.description}</Header>\r\n        </Container>\r\n\r\n        <Divider horizontal\r\n        style={{\r\n            marginTop: '5em',\r\n          }}\r\n        >\r\n          <Header as='h4' onClick={() => this.setState({ playerTableVisible: !this.state.playerTableVisible })}>\r\n            <Icon name='user' />\r\n            Members\r\n          </Header>\r\n        </Divider>\r\n        <Container\r\n        style={{\r\n            marginTop: '2.5em',\r\n            marginBottom: '2.5em',\r\n          }}\r\n        >\r\n          <Container>\r\n            {this.buildMembers()}\r\n          </Container>\r\n        </Container>\r\n        <ToTopButton scrollStepInPx=\"100\" delayInMs=\"16.66\"/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport ClanIndex from './ClanIndex.js';\r\nimport Login from '../../User/Login.js'\r\nimport Register from '../../User/Register.js'\r\nimport {withRouter} from 'react-router-dom';\r\nimport HeaderMenu from '../../Common/HeaderMenu.js'\r\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\r\nimport {getCookie, setCookie, checkCookie} from '../../Common/cookie.js';\r\n\r\nclass Clan extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      clan_id: '',\r\n    };\r\n    this.set_clan_id = this.set_clan_id.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(getCookie(\"back_mode\") ===\"clan\" && getCookie(\"back_id\") !== \"\"){\r\n      this.setState({clan_id:getCookie(\"back_id\")});\r\n    }\r\n  }\r\n  componentWillUnmount(){\r\n    setCookie(\"back_mode\",\"clan\",0.1);\r\n    setCookie(\"back_id\",this.state.clan_id,0.1);\r\n  }\r\n\r\n  set_clan_id(id){\r\n    this.setState({clan_id:id});\r\n  }\r\n\r\n\r\n  render(){\r\n    if(this.state.clan_id && this.state.clan_id !== ''){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_clan_id={this.set_clan_id} mode=\"clan\"/>\r\n          <ClanIndex clan_id={this.state.clan_id}/>\r\n        </Container>\r\n      )\r\n    }else if(this.props.location && this.props.location.state && this.props.location.state.clan_id){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_clan_id={this.set_clan_id} mode=\"clan\"/>\r\n          <ClanIndex clan_id={this.props.location.state.clan_id}/>\r\n        </Container>\r\n      )\r\n    }else if(getCookie(\"back_mode\") ===\"clan\" && getCookie(\"back_id\") !== \"\"){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_account_id={this.set_clan_id} mode=\"clan\"/>\r\n          <ClanIndex clan_id={getCookie(\"back_id\")}/>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu set_clan_id={this.set_clan_id} mode=\"clan\"/>\r\n          <Placeholder fluid>\r\n            <Placeholder.Header>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Header>\r\n            <Placeholder.Paragraph>\r\n              <Placeholder.Line length='full' />\r\n            </Placeholder.Paragraph>\r\n          </Placeholder>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Clan);\r\n","import React, { Component } from 'react';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\nimport {Link, NavLink} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios';\n\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\n\nexport default class Discussion extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            }\n    }\n\n    componentWillReceiveProps(nextProps) {\n    }\n\n    componentDidMount(){\n    }\n\n\n    render() {\n        return (\n            <Comment.Group threaded>\n                <Header as='h3' dividing>\n                    Comments\n                </Header>\n\n                <Comment>\n                    <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\n                    <Comment.Content>\n                        <Comment.Author as='a'>Matt</Comment.Author>\n                        <Comment.Metadata>\n                            <span>Today at 5:42PM</span>\n                        </Comment.Metadata>\n                        <Comment.Text>How artistic!</Comment.Text>\n                        <Comment.Actions>\n                            <a>Reply</a>\n                        </Comment.Actions>\n                    </Comment.Content>\n                </Comment>\n\n                <Comment>\n                    <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                    <Comment.Content>\n                        <Comment.Author as='a'>Elliot Fu</Comment.Author>\n                        <Comment.Metadata>\n                            <span>Yesterday at 12:30AM</span>\n                        </Comment.Metadata>\n                        <Comment.Text>\n                            <p>This has been very useful for my research. Thanks as well!</p>\n                        </Comment.Text>\n                        <Comment.Actions>\n                            <a>Reply</a>\n                        </Comment.Actions>\n                    </Comment.Content>\n\n                    <Comment.Group>\n                        <Comment>\n                            <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                            <Comment.Content>\n                                <Comment.Author as='a'>Jenny Hess</Comment.Author>\n                                <Comment.Metadata>\n                                    <span>Just now</span>\n                                </Comment.Metadata>\n                                <Comment.Text>Elliot you are always so right :)</Comment.Text>\n                                <Comment.Actions>\n                                    <a>Reply</a>\n                                </Comment.Actions>\n                            </Comment.Content>\n                        </Comment>\n                    </Comment.Group>\n                </Comment>\n\n                <Comment>\n                    <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n                    <Comment.Content>\n                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                        <Comment.Metadata>\n                            <span>5 days ago</span>\n                        </Comment.Metadata>\n                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                        <Comment.Actions>\n                            <a>Reply</a>\n                        </Comment.Actions>\n                    </Comment.Content>\n                </Comment>\n\n                <Form reply>\n                    <Form.TextArea />\n                    <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n                </Form>\n            </Comment.Group>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Popup, Progress, Grid, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Sticky, Rail } from 'semantic-ui-react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport axios from 'axios';\nimport DiscussionThread from '../DiscussionThread/Discussion.js'\n\nconst application_id = \"0cd78ed96029eac1bcb73c22e7dd0456\";\n\nexport default class ShipIndex extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ship_id: '',\n            icon_url: '',\n            data: undefined,\n            upgrades: [],\n            modules_tag: ['artillery','dive_bomber','engine','fighter','fire_control','flight_control','hull','torpedo_bomber','torpedoes'],\n            modules_data: [[],[],[],[],[],[],[],[],[]]\n        }\n        this.reloadData = this.reloadData.bind(this);\n        this.getColorByValue = this.getColorByValue.bind(this);\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ship_id :nextProps.ship_id});\n        this.reloadData(nextProps.ship_id);\n    }\n    componentDidMount(){\n        this.reloadData(this.props.ship_id);\n    }\n\n    async reloadData(ship_id){\n        console.log(ship_id)\n        await axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/ships/?application_id=\" + application_id + \"&language=en\" + \"&ship_id=\" + ship_id)\n            .then((response)=>{\n                let key = Object.keys(response.data.data)\n                this.setState({data: response.data.data[key[0]]})\n                console.log(response.data.data[key[0]])\n            })\n\n        await axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/info/?application_id=\" + application_id + \"&language=en\" + \"&fields=ship_type_images\")\n            .then((response)=>{\n                let icons = response.data.data.ship_type_images;\n                let icon = this.state.data.is_premium ? icons[this.state.data.type].image_premium : icons[this.state.data.type].image;\n                this.setState({icon_url: icon});\n            })\n\n        let upgrades_id = this.state.data.upgrades;\n        axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/consumables/?application_id=\" + application_id + \"&language=en\" + \"&consumable_id=\" + upgrades_id)\n            .then((response)=>{\n                let upg_data = Object.values(response.data.data)\n                this.setState({upgrades: upg_data});\n            })\n\n        let modules_id = Object.values(this.state.data.modules);\n\n        let modules_promise = modules_id.map(id_arr => {\n            if (id_arr.length === 0){\n                return [];\n            }\n            else {\n                return new Promise(function(resolve, reject) {\n                    axios.get(\"https://api.worldofwarships.ru/wows/encyclopedia/modules/?application_id=\" + application_id + \"&language=en\" + \"&module_id=\" + id_arr)\n                        .then((response)=>{\n                            resolve(Object.values(response.data.data))\n                        })\n                });\n            }\n        })\n        Promise.all(modules_promise).then(values => {\n            console.log(values);\n            this.setState({modules_data: values});\n        })\n    }\n\n    getColorByValue(value){\n        if (value < 20){\n            return 'red';\n        }\n        else if (value < 50){\n            return 'yellow';\n        }\n        else if (value < 80){\n            return 'olive';\n        }\n        else {\n            return 'blue';\n        }\n    }\n\n    render() {\n        const upgrades = this.state.upgrades.map((data, i) => {\n            let list = Object.values(data.profile).map( (text, idx) =>  <List.Item key={idx}>{text.description}</List.Item>)\n            return(\n            <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                <Popup.Header>{data.name}</Popup.Header>\n                <Popup.Content>\n                    <p>{data.description}</p>\n                    <p>Price in credits: {data.price_credit}</p>\n                    <List bulleted>\n                        {list}\n                    </List>\n                </Popup.Content>\n            </Popup>\n        )})\n\n        const engine = this.state.modules_data[0].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Max Speed: {data.profile.engine.max_speed} kts</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const torp_bomber = this.state.modules_data[1].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Cruise Speed: {data.profile.torpedo_bomber.cruise_speed} kts</List.Item>\n                            <List.Item>Aiming Distance: {data.profile.torpedo_bomber.distance} km</List.Item>\n                            <List.Item>Torpedo Damage: {data.profile.torpedo_bomber.max_damage}</List.Item>\n                            <List.Item>Torpedo Speed: {data.profile.torpedo_bomber.torpedo_max_speed}</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n\n        const fighter = this.state.modules_data[2].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Cruise Speed: {data.profile.fighter.cruise_speed}</List.Item>\n                            <List.Item>Max Health: {data.profile.fighter.max_health}</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const hull = this.state.modules_data[3].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>AA Mounts: {data.profile.hull.anti_aircraft_barrels}</List.Item>\n                            <List.Item>Secondary Guns: {data.profile.hull.atba_barrels}</List.Item>\n                            <List.Item>Hit Points: {data.profile.hull.health}</List.Item>\n                            <List.Item>Planes Amount: {data.profile.hull.planes_amount}</List.Item>\n                            <List.Item>Torpedo Tubes: {data.profile.hull.torpedoes_barrels}</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const artillery = this.state.modules_data[4].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Firing Rate: {data.profile.artillery.gun_rate} rounds/min</List.Item>\n                            <List.Item>AP Damage: {data.profile.artillery.max_damage_AP}</List.Item>\n                            <List.Item>HE Damage: {data.profile.artillery.max_damage_HE}</List.Item>\n                            <List.Item>rotation_time: {data.profile.artillery.rotation_time} s</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const torpedoes = this.state.modules_data[5].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Range: {data.profile.torpedoes.distance}</List.Item>\n                            <List.Item>Damage: {data.profile.torpedoes.max_damage}</List.Item>\n                            <List.Item>Firing Rate: {data.profile.torpedoes.shot_speed} rounds/min</List.Item>\n                            <List.Item>Torpedo Speed: {data.profile.torpedoes.torpedo_speed} kts</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const fire_control = this.state.modules_data[6].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Firing Distance: {data.profile.fire_control.distance}</List.Item>\n                            <List.Item>Firing Distance Increase: {data.profile.fire_control.distance_increase}%</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const flight_control = this.state.modules_data[7].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Bomber Squadrons: {data.profile.flight_control.bomber_squadrons}</List.Item>\n                            <List.Item>Fighter Squadrons: {data.profile.flight_control.fighter_squadrons}</List.Item>\n                            <List.Item>Torpedo Squadrons: {data.profile.flight_control.torpedo_squadrons}</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        const dive_bomber = this.state.modules_data[8].map((data, i) => {\n            return(\n                <Popup key={i} as='span' trigger={<Image as='span' src={data.image}  />}>\n                    <Popup.Header>{data.name}</Popup.Header>\n                    <Popup.Content>\n                        <p>{data.description}</p>\n                        <p>Price in credits: {data.price_credit}</p>\n                        <List bulleted>\n                            <List.Item>Dispersion: {data.profile.dive_bomber.accuracy.min}-{data.profile.dive_bomber.accuracy.max} m </List.Item>\n                            <List.Item>Burn Probability: {data.profile.dive_bomber.bomb_burn_probability}%</List.Item>\n                            <List.Item>Cruise Speed: {data.profile.dive_bomber.cruise_speed}kts</List.Item>\n                            <List.Item>Damage: {data.profile.dive_bomber.max_damage}</List.Item>\n                            <List.Item>Hit Points: {data.profile.dive_bomber.max_health}</List.Item>\n                        </List>\n                    </Popup.Content>\n                </Popup>\n            )})\n\n        if (this.state.data != undefined ){\n            return (\n                <Container fluid>\n                    <Container text>\n                        <Image src={this.state.data.images.large}  />\n                        <Header as='h1' content={this.state.data.name}\n                                style={{\n                                    fontSize: window.innerWidth>860?'4em':'3em',\n                                    fontWeight: 'normal',\n                                    marginBottom: 0,\n                                    marginTop: window.innerWidth>860?'0.5em':'0.25em',\n                                }}\n                        />\n                        <div>\n                            <Image avatar src={this.state.icon_url}  />\n                            <Header as='span' content={\"Tier \"+this.state.data.tier+\" \"+this.state.data.nation+\" \"+this.state.data.type}\n                                    style={{\n                                        fontSize: window.innerWidth>860?'1.7em':'1.2em',\n                                        fontWeight: 'normal',\n                                        marginTop: window.innerWidth>860?'0.5em':'0.25em',\n                                    }}\n                            />\n                        </div>\n                    </Container>\n                    <Divider horizontal\n                             style={{\n                                 marginTop: '5em',\n                             }}\n                    >\n                        <Header as='h4'>\n                            <Icon name='align justify' />\n                            Description\n                        </Header>\n                    </Divider>\n                    <Container\n                        style={{\n                            marginTop: '5em',\n                        }}\n                    >\n                        <Grid>\n                            <Grid.Column width={10}>\n                                <Header as=\"div\" textAlign='left'>{this.state.data.description}</Header>\n                            </Grid.Column>\n                            <Grid.Column width={6}>\n                                <Progress percent={this.state.data.default_profile.armour.total}size='small'progress color={this.getColorByValue(this.state.data.default_profile.armour.total)}>Survivability</Progress>\n                                <Progress percent={this.state.data.default_profile.weaponry.artillery}size='small'progress color={this.getColorByValue(this.state.data.default_profile.weaponry.artillery)}>Artillery</Progress>\n                                <Progress percent={this.state.data.default_profile.weaponry.anti_aircraft}size='small'progress color={this.getColorByValue(this.state.data.default_profile.weaponry.anti_aircraft)}>AA Defense</Progress>\n                                <Progress percent={this.state.data.default_profile.mobility.total}size='small'progress color={this.getColorByValue(this.state.data.default_profile.mobility.total)}>Maneuverability</Progress>\n                                <Progress percent={this.state.data.default_profile.concealment.total}size='small'progress color={this.getColorByValue(this.state.data.default_profile.concealment.total)}>Concealment</Progress>\n                            </Grid.Column>\n                        </Grid>\n                    </Container>\n\n                    <Divider horizontal\n                             style={{\n                                 marginTop: '5em',\n                             }}\n                    >\n                        <Header as='h4'>\n                            <Icon name='bar chart' />\n                            Specifications\n                        </Header>\n                    </Divider>\n                    <Container\n                        style={{\n                            marginTop: '5em',\n                        }}\n                    >\n                        <Grid divided='vertically' columns={3}>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Artillery\n                                    </Header>\n                                    {artillery}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Torpedoes\n                                    </Header>\n                                    {torpedoes}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Fire Control\n                                    </Header>\n                                    {fire_control}\n                                </Grid.Column>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Flight Control\n                                    </Header>\n                                    {flight_control}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Hull\n                                    </Header>\n                                    {hull}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Fighters\n                                    </Header>\n                                    {fighter}\n                                </Grid.Column>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Dive Bombers\n                                    </Header>\n                                    {dive_bomber}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Torpedo Bombers\n                                    </Header>\n                                    {torp_bomber}\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">\n                                        Engine\n                                    </Header>\n                                    {engine}\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Container>\n                    <Divider horizontal\n                             style={{\n                                 marginTop: '5em',\n                             }}\n                    >\n                        <Header as='h4'>\n                            <Icon name='plus' />\n                            Upgrades\n                        </Header>\n                    </Divider>\n                    <Container\n                        style={{\n                            marginTop: '5em',\n                        }}\n                    >\n                        {upgrades}\n                    </Container>\n                    <Divider horizontal\n                             style={{\n                                 marginTop: '5em',\n                             }}\n                    >\n                        <Header as='h4'>\n                            <Icon name='comments' />\n                            Discussion Thread\n                        </Header>\n                    </Divider>\n                    <Container\n                        style={{\n                            marginTop: '5em',\n                        }}\n                    >\n                        <DiscussionThread/>\n                    </Container>\n\n                </Container>\n            );\n        }\n        else return (\n            <Container fluid>\n                <br/>\n                <Loader active inline='centered' />\n            </Container>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport ShipIndex from './ShipIndex.js';\nimport Login from '../../User/Login.js'\nimport Register from '../../User/Register.js'\nimport {withRouter} from 'react-router-dom';\nimport HeaderMenu from \"../../Common/HeaderMenu.js\";\nimport {getCookie, setCookie, checkCookie} from '../../Common/cookie.js';\nimport {division, divisionWhole, time, application_id} from '../../Common/utlity.js';\n\nclass Ship extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ship_id: '',\n    };\n    this.set_ship_id = this.set_ship_id.bind(this);\n  }\n\n  componentDidMount(){\n    if(getCookie(\"back_mode\") ===\"ship\" && getCookie(\"back_id\") !== \"\"){\n      this.setState({ship_id:getCookie(\"back_id\")});\n    }\n  }\n\n  componentWillUnmount(){\n    setCookie(\"back_mode\",\"ship\",0.1);\n    setCookie(\"back_id\",this.state.ship_id,0.1);\n  }\n\n\n  set_ship_id(id){\n    this.setState({ship_id: id});\n  }\n\n\n  render(){\n    if(this.state.ship_id && this.state.ship_id !== ''){\n      return(\n          <Container fluid>\n            <HeaderMenu set_ship_id={this.set_ship_id} mode=\"ship\"/>\n            <ShipIndex ship_id={this.state.ship_id}/>\n          </Container>\n      )\n    }else if(this.props.location && this.props.location.state && this.props.location.state.ship_id){\n      return(\n          <Container fluid>\n            <HeaderMenu set_ship_id={this.set_ship_id} mode=\"ship\"/>\n            <ShipIndex ship_id={this.props.location.state.ship_id}/>\n          </Container>\n      )\n    }else if(getCookie(\"back_mode\") ===\"ship\" && getCookie(\"back_id\") !== \"\") {\n      return (\n          <Container fluid>\n            <HeaderMenu set_ship_id={this.set_ship_id} mode=\"ship\"/>\n            <ShipIndex ship_id={parseInt(getCookie(\"back_id\"))}/>\n          </Container>\n      )\n    }\n    else{\n      return(\n        <Container fluid>\n          <HeaderMenu set_ship_id={this.set_ship_id} mode=\"ship\"/>\n          <Placeholder fluid>\n            <Placeholder.Header>\n              <Placeholder.Line length='full' />\n            </Placeholder.Header>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length='full' />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default withRouter(Ship);\n","import React, { Component } from 'react'\r\nimport {  Message, Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder,  Checkbox, Form  } from 'semantic-ui-react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {server} from '../Common/utlity.js';\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      oldpassword: \"\",\r\n      loggedin: false,\r\n      wrongpassword: false,\r\n      hide: false,\r\n    }\r\n    this.ChangePassword = this.ChangePassword.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  ChangePassword(){\r\n    var password = this.state.password;\r\n    this.setState({loginfail: false, password: \"\"});\r\n    if(password === \"\" && this.state.username === \"\"){\r\n        this.setState({loginfail: true});\r\n        return;\r\n    }\r\n    axios.post('https://cors-anywhere.herokuapp.com/' + server + \"/users/change_password\",{name:this.state.username,old_password:this.state.oldpassword,new_password:this.state.password})\r\n    .then((response)=>{\r\n        if (response.data && response.data.data && response.data.data.name && response.data.data.name===this.state.username){\r\n          if(this.props.changepassCallBack){\r\n            alert(\"Success\");\r\n            this.props.changepassCallBack();\r\n          }\r\n        }else{\r\n          this.setState({wrongpassword: true});\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      this.setState({wrongpassword: true});\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Segment\r\n          style={{\r\n            width:\"300px\",\r\n            margin:\"auto\"\r\n          }}\r\n        >\r\n          <Header as=\"h1\">ChangePassword</Header>\r\n          <Form>\r\n            <Form.Field required>\r\n              <label>Username</label>\r\n              <Input fluid label={{ icon: 'tag' }} labelPosition='left corner' error={this.state.wrongusername} placeholder='username' value={this.state.username} onChange={(e,{value})=>this.setState({username:value})}/>\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label>Old Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.wrongoldpassword} placeholder='password' value={this.state.oldpassword} onChange={(e,{value})=>this.setState({oldpassword:value})}/>\r\n              <Message style={{display:this.state.wrongpassword?\"block\":\"none\"}} error header='Wrong Username and Password' content='Please try again.'/>\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label>New Password</label>\r\n              <Input fluid label={{ icon: 'key' }} iconPosition='right' icon={<Icon name={this.state.hide?\"eye\":\"eye slash\"} link onClick={()=>this.setState({hide:this.state.hide?false:true})}/>} labelPosition='left corner' type={this.state.hide?\"password\":\"text\"} error={this.state.wrongpassword} placeholder='password' value={this.state.password} onChange={(e,{value})=>this.setState({password:value})}/>\r\n            </Form.Field>\r\n            <Button fluid onClick={() => this.ChangePassword()}>Change Password</Button>\r\n          </Form>\r\n        </Segment>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from 'react';\r\nimport {  Icon, Label, Menu, Table, Dimmer, Loader, Segment, Input, Dropdown, Header, Modal, Statistic, Container, Divider, List, Image, Card, Sidebar, Tab, Button, Search, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport {withRouter, Link, NavLink} from 'react-router-dom';\r\nimport HeaderMenu from '../Common/HeaderMenu.js'\r\nimport {division, divisionWhole, time, application_id} from '../Common/utlity.js';\r\nimport {getCookie, setCookie, checkCookie} from '../Common/cookie.js';\r\nimport {server} from '../Common/utlity.js';\r\nimport Login from './Login.js';\r\nimport Register from './Register.js';\r\nimport ChangePassword from './ChangePassword.js';\r\n\r\nclass UserIndex extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username:'',\r\n      showChangePass: false,\r\n      windowwidth: window.innerWidth,\r\n    }\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if(getCookie(\"back_mode\") ===\"user\" && getCookie(\"back_id\") !== \"\"){\r\n      this.setState({username:getCookie(\"back_id\")});\r\n    }\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n  componentWillUnmount(){\r\n    setCookie(\"back_mode\",\"user\",0.1);\r\n    setCookie(\"back_id\",this.state.username,0.1);\r\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  updateDimensions() {\r\n      this.setState({ windowwidth: window.innerWidth});\r\n  }\r\n  render() {\r\n    if(getCookie(\"username\") && getCookie(\"username\") !== \"\"){\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu mode=\"user\"/>\r\n          <Container text>\r\n            <Icon name='user circle'\r\n              style={{\r\n                fontSize: this.state.windowwidth>860?'4em':'3em',\r\n                fontWeight: 'normal',\r\n                marginBottom: 0,\r\n                marginTop: this.state.windowwidth>860?'2em':'1em',\r\n              }}\r\n            />\r\n            <Header as='h1' content={getCookie(\"username\")}\r\n              style={{\r\n                fontSize: this.state.windowwidth>860?'4em':'3em',\r\n                fontWeight: 'normal',\r\n                marginBottom: 0,\r\n                marginTop: this.state.windowwidth>860?'0.5em':'0.25em',\r\n              }}\r\n            />\r\n          </Container>\r\n          <div\r\n          style={{\r\n            marginTop: this.state.windowwidth>860?'5em':'2.5em',\r\n            marginLeft: 'auto',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent : 'space-evenly',\r\n            alignItems: 'center',\r\n          }}>\r\n            <div style={{margin:\"2.5em\"}}>\r\n              <Button size=\"massive\" circular icon onClick={()=>this.setState({showChangePass:true})}>\r\n                <Icon name=\"key\" circular size=\"huge\"/>\r\n              </Button>\r\n              <Header as=\"h2\">Password</Header>\r\n            </div>\r\n            <div style={{margin:\"2.5em\"}}>\r\n              <Button size=\"massive\" circular icon>\r\n                <Icon name=\"file alternate\" circular size=\"huge\"/>\r\n              </Button>\r\n              <Header as=\"h2\">Posts</Header>\r\n            </div>\r\n          </div>\r\n          <Modal closeIcon  size=\"mini\" centered={false} open={this.state.showChangePass} onClose={()=>this.setState({showChangePass:false})}><Modal.Content><ChangePassword changepassCallBack={()=>this.setState({showChangePass:false})}/></Modal.Content></Modal>\r\n        </Container>\r\n      )\r\n    }else{\r\n      return(\r\n        <Container fluid>\r\n          <HeaderMenu mode=\"user\"/>\r\n          <Container style={{marginTop:\"5em\", marginLeft:\"auto\"}}>\r\n            <Login loginCallBack={()=>window.location.reload()}/>\r\n          </Container>\r\n          <Divider horizontal style={{marginTop:\"5em\"}}>Or</Divider>\r\n          <Container style={{marginTop:\"5em\", marginLeft:\"auto\"}}>\r\n            <Register registerCallBack={()=>window.location.reload()}/>\r\n          </Container>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(UserIndex);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport IndexPage from './IndexPage/IndexPage'\nimport Player from './Player/PlayerIndex/PlayerHeader.js'\nimport Clan from './Clan/ClanIndex/ClanHeader'\nimport Login from './User/Login.js'\nimport Register from './User/Register.js'\nimport Ship from './Ship/ShipIndex/ShipHeader.js'\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport UserIndex from './User/UserIndex.js';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Router>\n              <div>\n                  <Route path={\"/\"} exact component={IndexPage} />\n                  <Route path={\"/ship\"} exact\n                         component={() => <Ship/>}  />\n                  <Route path={\"/player\"} exact\n                         component={() => <Player/>}  />\n                  <Route path={\"/clan\"} exact\n                          component={() => <Clan/>}  />\n                  <Route path={\"/login\"} exact\n                         component={() => <Login/>}  />\n                  <Route path={\"/register\"} exact\n                        component={() => <Register/>}  />\n                  <Route path={\"/user\"} exact\n                        component={() => <UserIndex/>}  />\n\n              </div>\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}